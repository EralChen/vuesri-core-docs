import{a6 as P,E as h,h5 as B,g_ as R,h4 as d,a3 as z,lu as E,lv as M,g$ as S,lw as V,ha as D,h2 as U,hb as j,h7 as w,h6 as v,h8 as C,hd as A}from"./chunk-YzRi88Dj.js";import"./chunk-DZ3w8ZOu.js";import"./chunk-BX1wMDvx.js";import"./chunk-DlgRifwZ.js";import"./chunk-MXvXirnR.js";import"./chunk-Clcwg9Qm.js";import"./chunk-CVnttSzt.js";import"./chunk-BlTBh7Wn.js";import"./chunk-DltoMSe1.js";import"./chunk-C9tqeO9j.js";import"./chunk-BkUj7kCJ.js";import"./chunk-lA_W8v3a.js";import"./chunk-CheEsZui.js";import"./chunk-CLQIQQkk.js";import"./chunk-CD3FIDfI.js";import"./chunk-DjXdGIkr.js";import"./chunk-BeMirVWN.js";import"./chunk-CtOsnhEP.js";import"./chunk-Dsi4UQrI.js";import"./chunk-D83kxBTm.js";import"./chunk-CMTIf1CS.js";import"./chunk-DhQzXLKM.js";import"./chunk-Dw_nTs4K.js";import"./chunk-FEB8T15a.js";import"./chunk-BRnY4uVr.js";import"./chunk--uKKWstj.js";import"./chunk-Bv-gq04m.js";import"./chunk-DNuFRK75.js";import"./chunk-BBWE_Ghm.js";import"./chunk-CpRg--ys.js";import"./chunk-CvEYJb1U.js";import"./chunk-CyteEnia.js";import"./chunk-DunbwQDX.js";import"./chunk-CFGc4D18.js";import"./chunk-CfNfXr3t.js";import"./chunk-B40jiAhY.js";import"./chunk-BwNtFsQb.js";import"./chunk-BVXbP2w4.js";import{u as F}from"./chunk-mQ0J7OJ8.js";import{u as N}from"./chunk-Bn0Cmn66.js";function T(m,l={}){const f=l.previewSymbol||new P({color:[255,0,0,0],style:"solid",outline:{color:[255,0,0],width:3,style:"dash"}}),g=l.symbol,e=new h({symbol:f}),t=F(),{viewCursorAdd:i,viewCursorRemove:c}=N("crosshair"),s=new M,u=B(!1);function x(){if(!d(m)){console.error("layerRef is not defined");return}i();const r=t.on("pointer-down",_);s.add(r);const n=t.on("pointer-move",b);s.add(n);const p=t.on("pointer-up",k);s.add(p);const o=t.on("drag",a=>{u.value&&a.stopPropagation()});s.add(o)}function _(r){if(u.value=!0,!t.graphics.includes(e)){const{x:n,y:p}=r,o=t.toMap({x:n,y:p}),a=new z({spatialReference:t.spatialReference,rings:[[[o.x,o.y,o.z],[o.x,o.y,o.z],[o.x,o.y,o.z]]]});e.geometry=a,t.graphics.add(e)}}function b(r){if(!u.value)return;const n=e.geometry,{x:p,y:o}=r,a=t.toMap({x:p,y:o});n.insertPoint(0,n.rings[0].length,a),e.geometry=n.clone()}function k(){y()}function y(){if(u.value=!1,c(),s.removeAll(),!t.graphics.includes(e))return;const r=new h({geometry:E(e.geometry,1e-4),symbol:g});d(m)?.add(r),t.graphics.remove(e)}return R(y),{start:x,complete:y}}const Ro=S({__name:"create",props:{layer:{type:Object,default:void 0}},setup(m){const l=m,f=V(()=>l.layer),{start:g,complete:e}=T(f,{});return(t,i)=>{const c=D("ElButton");return U(),j(A,null,[w(c,{onClick:d(g)},{default:v(()=>i[0]||(i[0]=[C(" Start ")])),_:1},8,["onClick"]),w(c,{onClick:d(e)},{default:v(()=>i[1]||(i[1]=[C(" Complete ")])),_:1},8,["onClick"])],64)}}});export{Ro as _};
