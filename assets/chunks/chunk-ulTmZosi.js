import{gs as D,F as v,aO as c,gt as y,cz as M,gu as h,gv as $,gw as d,gx as w,gy as I}from"./chunk-CMhy9c9G.js";import{u as S,c as l,i as x,f as F}from"./chunk-D7z-ptiy.js";import"./chunk-ByM7454y.js";/* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              */import"./chunk-BIr-zqTI.js";class O{transform(t){const r=this._transform(t),o=[r.points.buffer,r.rgb.buffer];r.pointIdFilterMap!=null&&o.push(r.pointIdFilterMap.buffer);for(const n of r.attributes)"buffer"in n.values&&D(n.values.buffer)&&n.values.buffer!==r.rgb.buffer&&o.push(n.values.buffer);return Promise.resolve({result:r,transferList:o})}_transform(t){const r=S(t.schema,t.geometryBuffer);let o=r.length/3,n=null;const f=new Array,i=l(t.primaryAttributeData,r,o);t.primaryAttributeData!=null&&i&&f.push({attributeInfo:t.primaryAttributeData.attributeInfo,values:i});const s=l(t.modulationAttributeData,r,o);t.modulationAttributeData!=null&&s&&f.push({attributeInfo:t.modulationAttributeData.attributeInfo,values:s});let a=x(t.rendererInfo,i,s,o);if(t.filterInfo&&t.filterInfo.length>0&&t.filterAttributesData!=null){const m=t.filterAttributesData.filter(v).map(e=>{const A=l(e,r,o),b={attributeInfo:e.attributeInfo,values:A};return f.push(b),b});n=new Uint32Array(o),o=F(r,a,n,t.filterInfo,m)}for(const m of t.userAttributesData){const e=l(m,r,o);f.push({attributeInfo:m.attributeInfo,values:e})}3*o<a.length&&(a=new Uint8Array(a.buffer.slice(0,3*o))),J(r,o,t.elevationOffset);const p=z(r,o,y.fromData(t.obbData),c.fromJSON(t.inSR),c.fromJSON(t.outSR));return{obbData:t.obbData,points:p,rgb:a,attributes:f,pointIdFilterMap:n}}}function z(u,t,r,o,n){if(!M(u,o,0,u,n,0,t))throw new Error("Can't reproject");const f=h(r.center),i=I(),s=I(),a=h(r.halfSize);$(g,r.quaternion);const p=new Float32Array(3*t);for(let m=0;m<t;m++){let e=3*m;i[0]=u[e]-f[0],i[1]=u[e+1]-f[1],i[2]=u[e+2]-f[2],d(s,i,g),a[0]=Math.max(a[0],Math.abs(s[0])),a[1]=Math.max(a[1],Math.abs(s[1])),a[2]=Math.max(a[2],Math.abs(s[2])),p[e++]=i[0],p[e++]=i[1],p[e]=i[2]}return r.halfSize=a,p}function J(u,t,r){if(r!==0)for(let o=0;o<t;o++)u[3*o+2]+=r}const g=w();function ct(){return new O}export{ct as default};
