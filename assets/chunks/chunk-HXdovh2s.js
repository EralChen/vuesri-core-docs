import{b6 as f,ix as l,cw as h,l9 as v,la as _,a1 as x,a4 as y,lb as b,lc as L,a_ as p,bI as I,ld as P,le as S,lf as C,lg as m}from"./chunk-CMhy9c9G.js";import{m as $}from"./chunk-55tU-dLC.js";import"./chunk-ByM7454y.js";/* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              */import"./chunk-DDtA4eik.js";const j=1e3;function V(t,o,i){const n=v(),s=_(n);return f(s,s,t,.5),f(s,s,o,.5),n[3]=l(s,t),h(s,s,i),n}let g=class{constructor(){this._idToComponent=new Map,this._components=new b(t=>t.bounds),this._edges=new b(t=>t.bounds),this._tmpLineSegment=L(),this._tmpP1=p(),this._tmpP2=p(),this._tmpP3=p(),this.remoteClient=null}async fetchCandidates(t,o){await Promise.resolve(),I(o),await this._ensureEdgeLocations(t,o);const i=[];return this._edges.forEachNeighbor(n=>(this._addCandidates(t,n,i),i.length<j),t.bounds),{result:{candidates:i}}}async _ensureEdgeLocations(t,o){const i=[];if(this._components.forEachNeighbor(e=>{if(e.info==null){const{id:c,uid:r}=e;i.push({id:c,uid:r})}return!0},t.bounds),!i.length)return;const n={components:i},s=await this.remoteClient.invoke("fetchAllEdgeLocations",n,o??{});for(const e of s.components)this._setFetchEdgeLocations(e)}async add(t){const o=new u(t.id,t.bounds);return this._idToComponent.set(o.id,o),this._components.add([o]),{result:{}}}async remove(t){const o=this._idToComponent.get(t.id);if(o){const i=[];this._edges.forEachNeighbor(n=>(n.component===o&&i.push(n),!0),o.bounds),this._edges.remove(i),this._components.remove([o]),this._idToComponent.delete(o.id)}return{result:{}}}_setFetchEdgeLocations(t){const o=this._idToComponent.get(t.id);if(o==null||t.uid!==o.uid)return;const i=$.createView(t.locations),n=new Array(i.count),s=p(),e=p();for(let d=0;d<i.count;d++){i.position0.getVec(d,s),i.position1.getVec(d,e);const a=V(s,e,t.origin),E=new T(o,d,a);n[d]=E}this._edges.add(n);const{objectIds:c,origin:r}=t;o.info={locations:i,objectIds:c,origin:r}}_addCandidates(t,o,i){const{info:n}=o.component,{origin:s,objectIds:e}=n,c=n.locations,r=c.position0.getVec(o.index,this._tmpP1),d=c.position1.getVec(o.index,this._tmpP2);h(r,r,s),h(d,d,s);const a=e[c.componentIndex.get(o.index)];this._addEdgeCandidate(t,a,r,d,i),w(t,a,r,i),w(t,a,d,i)}_addEdgeCandidate(t,o,i,n,s){if(!t.returnEdge)return;const e=_(t.bounds),c=P(i,n,this._tmpLineSegment),r=S(c,e,this._tmpP3);C(t.bounds,r)&&s.push({type:"edge",objectId:o,target:m(r),distance:l(e,r),start:m(i),end:m(n)})}};g=x([y("esri.views.interactive.snapping.featureSources.sceneLayerSource.SceneLayerSnappingSourceWorker")],g);const lt=g;function w(t,o,i,n){if(!t.returnVertex||!C(t.bounds,i))return;const s=_(t.bounds);n.push({type:"vertex",objectId:o,target:m(i),distance:l(s,i)})}class u{constructor(o,i){this.id=o,this.bounds=i,this.info=null,this.uid=++u.uid}}u.uid=0;class T{constructor(o,i,n){this.component=o,this.index=i,this.bounds=n}}export{lt as default};
