const __vite__mapDeps=(i,m=__vite__mapDeps,d=(m.f||(m.f=["assets/chunks/chunk-DcUppS74.js","assets/chunks/chunk-YA9YD_OS.js","assets/chunks/chunk-CMhy9c9G.js","assets/chunks/chunk-ByM7454y.js","assets/static/ShadedColorMaterial.B02UECUJ.css","assets/static/uno-ff4db1d1.D2PgLIQl.css","assets/static/src_styles_common_reset-f7a68b0e.BAKp5MHC.css","assets/static/src_styles_common_color-a7a524c7.CVau4Kly.css","assets/static/src_styles_common_is-19c6c24d.DKAKruk7.css","assets/static/style-57df08cc.D7BtIwaj.css","assets/static/style-700e5873.Beul3IQx.css","assets/static/src_styles_element-plus_reset-752cc03d.htEpr2M-.css","assets/static/src_styles_element-plus_form-item-877afd6a.Dy4HJB2K.css","assets/static/src_styles_element-plus_table-6cbc5816.DXG1SsxY.css","assets/static/src_styles_element-plus_tabs-67d1a98b.BMDMQPDv.css","assets/static/src_styles_element-plus_tree-cc28503d.nmT5n0wM.css","assets/static/src_styles_element-plus_dialog-7f91a00e.D4nTsJge.css","assets/static/src_styles_element-plus_breadcrumb-8ce3a1a1.CwEEGJYc.css","assets/static/src_styles_element-plus_menu-33b44202.hFAFO4eV.css","assets/static/style-a19f1b3e.COrvIKje.css","assets/static/style-ea2b3f9e.BxAlKMJv.css","assets/static/style-283bc4f4.Cc2PI5FU.css","assets/static/style-c4a1f0b7.CdbLw5at.css","assets/static/src_styles_form_sub-7371c85e.y3zh-mS3.css","assets/static/src_styles_layout_index-2891f17b.BNCqvENj.css","assets/static/style-b3fe97a2.BuWAVw4m.css","assets/static/src_styles_vitepress_demo-827dc91c.Z0iQYynG.css","assets/static/style-0c254f43.BgXNzrGH.css","assets/static/style-d5a1a87d.BZwgKm1s.css","assets/static/style-f69381ee.CFNWXuiE.css","assets/static/style-b895e1ce.X9gIGpBH.css","assets/static/style-44d656df.Di2LGzYR.css","assets/static/style-fbf2e11d.CdbrDi0S.css","assets/static/src_styles_markdown_reset-fbd16bdd.D3vNaEcf.css","assets/static/src_layouts_default_aside-6ea01de8.BjbON5Ij.css","assets/static/vitepress_components_VPDocOutlineItem-4ff7b581.ADPwdkw3.css","assets/static/vitepress_components_VPDocAsideOutline-9eba9441.2-W4eQLy.css"])))=>i.map(i=>d[i]);
import{_ as V}from"./chunk-ByM7454y.js";import{se as U,vH as A,vI as D,b4 as J,a_ as W,a1 as s,a5 as b,ku as j,an as f,ao as N,a2 as r,a4 as S,ik as O,a0 as m,ar as L,a3 as Z,dk as q,$ as R,ev as G,eZ as B,iU as Y,F as $,hJ as K,gD as Q,qa as X,dY as ee,aL as te,d_ as ie,kt as ne,kv as se,hC as re,bI as C,hB as ae,ex as h,eB as oe,hM as P,eY as le,at as M,vJ as de}from"./chunk-CMhy9c9G.js";import{o as ue,i as pe}from"./chunk-BWIB856i.js";import{d as he}from"./chunk-DqA02ZWp.js";/* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              */import"./chunk-CH5E4Uft.js";function H(e,t){return A(t.extent,E),D(E,J(ce,e.x,e.y,0))}const E=U(),ce=W();let c=class extends b{get tiles(){const t=this.tilesCoveringView,i=this.pointOfInterest!=null?this.pointOfInterest:this.view.center;return t.sort((a,n)=>H(i,a)-H(i,n)),t}_scaleEnabled(){return j(this.view.scale,this.layer.minScale||0,this.layer.maxScale||0)}get tilesCoveringView(){if(!this.view.ready||!this.view.featuresTilingScheme||!this.view.state||this.tileInfo==null)return[];if(!this._scaleEnabled)return[];const{spans:t,lodInfo:i}=this.view.featuresTilingScheme.getTileCoverage(this.view.state,0),{level:a}=i,n=[];for(const{row:o,colFrom:l,colTo:_}of t)for(let v=l;v<=_;v++){const g=i.normalizeCol(v),d=new O(null,a,o,g);this.tileInfo.updateTileInfo(d),n.push(d)}return n}get tileInfo(){return this.view.featuresTilingScheme?.tileInfo??null}get tileSize(){return this.tileInfo!=null?this.tileInfo.size[0]:256}constructor(t){super(t),this.pointOfInterest=null}initialize(){this.addHandles(f(()=>this.view?.state?.viewpoint,()=>this.notifyChange("tilesCoveringView"),N))}};s([r({readOnly:!0})],c.prototype,"tiles",null),s([r({readOnly:!0})],c.prototype,"_scaleEnabled",null),s([r({readOnly:!0})],c.prototype,"tilesCoveringView",null),s([r({readOnly:!0})],c.prototype,"tileInfo",null),s([r({readOnly:!0})],c.prototype,"tileSize",null),s([r({constructOnly:!0})],c.prototype,"view",void 0),s([r({constructOnly:!0})],c.prototype,"layer",void 0),s([r()],c.prototype,"pointOfInterest",void 0),c=s([S("esri.views.2d.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTiles2D")],c);let y=class extends b{get tiles(){const t=this.tilesCoveringView,i=this._effectivePointOfInterest;if(i!=null){const a=t.map(n=>H(i,n));for(let n=1;n<a.length;n++)if(a[n-1]>a[n])return t.sort((o,l)=>H(i,o)-H(i,l)),t.slice()}return t}get tilesCoveringView(){return(this.view.featureTiles?.tiles?.toArray()??[]).map(ye)}get tileInfo(){return this.view.featureTiles?.tilingScheme?.toTileInfo()??null}get tileSize(){return this.view.featureTiles?.tileSize??256}get _effectivePointOfInterest(){const t=this.pointOfInterest;return t??this.view.pointsOfInterest?.focus.location}constructor(t){super(t),this.pointOfInterest=null}initialize(){this.addHandles(f(()=>this.view.featureTiles,t=>{this.removeHandles(x),t&&this.addHandles(t.addClient(),x)},m))}};function ye({lij:[e,t,i],extent:a}){return new O(`${e}/${t}/${i}`,e,t,i,a)}s([r({readOnly:!0})],y.prototype,"tiles",null),s([r({readOnly:!0})],y.prototype,"tilesCoveringView",null),s([r({readOnly:!0})],y.prototype,"tileInfo",null),s([r({readOnly:!0})],y.prototype,"tileSize",null),s([r({constructOnly:!0})],y.prototype,"view",void 0),s([r()],y.prototype,"pointOfInterest",void 0),s([r()],y.prototype,"_effectivePointOfInterest",null),y=s([S("esri.views.3d.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTiles3D")],y);const x="feature-tiles";let k=class extends he{constructor(e){super(e)}initialize(){const e=setInterval(()=>this._fetchDebugInfo(),2e3);this.addHandles(L(()=>clearInterval(e)))}getTiles(){if(!this._debugInfo)return[];const e=new Map,t=new Map;this._debugInfo.storedTiles.forEach(n=>{e.set(n.data.id,n.featureCount)}),this._debugInfo.pendingTiles.forEach(n=>{e.set(n.data.id,n.featureCount),t.set(n.data.id,n.state)});const i=n=>{const o=t.get(n),l=e.get(n)??"?";return o?`${o}:${l}
${n}`:`store:${l}
${n}`},a=new Map;return this._debugInfo.storedTiles.forEach(n=>{a.set(n.data.id,n.data)}),this._debugInfo.pendingTiles.forEach(n=>{a.set(n.data.id,n.data)}),Array.from(a.values()).map(n=>({lij:[n.level,n.row,n.col],geometry:Z.fromExtent(q(n.extent,this.view.spatialReference)),label:i(n.id)}))}_fetchDebugInfo(){this.handle.getDebugInfo(null).then(e=>{this._debugInfo=e,this.update()})}};s([r({constructOnly:!0})],k.prototype,"handle",void 0),k=s([S("esri.views.interactive.snapping.featureSources.WorkerTileTreeDebugger")],k);let p=class extends b{get updating(){return this._updatingHandles.updating||this._workerHandleUpdating}constructor(e){super(e),this._updatingHandles=new R,this._suspendController=null,this.schedule=null,this.hasZ=!1,this.elevationAlignPointsInFeatures=async t=>{const i=[];for(const{points:a}of t.pointsInFeatures)for(const{z:n}of a)i.push(n);return{elevations:i,drapedObjectIds:new Set,failedObjectIds:new Set}},this.queryForSymbologySnapping=async()=>({candidates:[],sourceCandidateIndices:[]}),this.availability=0,this._workerHandleUpdating=!0,this.updateOutFields=G(async(t,i)=>{await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("updateOutFields",[...t],i)),this._updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},i))})}destroy(){this._suspendController=B(this._suspendController),this._workerHandle.destroy(),this._updatingHandles.destroy()}initialize(){this._workerHandle=new ge(this.schedule,{alignElevation:async(e,{signal:t})=>({result:await this.elevationAlignPointsInFeatures(e.query,t)}),getSymbologyCandidates:async(e,{signal:t})=>({result:await this.queryForSymbologySnapping(e,t)})}),this.addHandles([this._workerHandle.on("notify-updating",({updating:e})=>this._workerHandleUpdating=e),this._workerHandle.on("notify-availability",({availability:e})=>this._set("availability",e))])}async setup(e,t){const i=fe(e.layer);if(i==null)return;const a={configuration:z(e.configuration),serviceInfo:i,spatialReference:e.spatialReference.toJSON(),hasZ:this.hasZ,elevationInfo:e.layer.elevationInfo?.toJSON()};await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("setup",a,t)),this._updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t))}async configure(e,t){const i=z(e);await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("configure",i,t)),this._updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t))}async refresh(e){await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("refresh",{},e)),this._updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},e))}async fetchCandidates(e,t){const{point:i,filter:a,coordinateHelper:n}=e,o={...e,point:Y(i[0],i[1],i[2],n.spatialReference.toJSON()),filter:a?.toJSON()};return this._workerHandle.invoke(o,t)}async updateTiles(e,t){const i={tiles:e.tiles,tileInfo:e.tileInfo!=null?e.tileInfo.toJSON():null,tileSize:e.tileSize};await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("updateTiles",i,t)),this._updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t))}async handleEdits({historicMoment:e,addedFeatures:t,deletedFeatures:i,updatedFeatures:a},n){const o={historicMoment:e,addedFeatures:t?.map(({objectId:l})=>l).filter($)??[],deletedFeatures:i?.map(({objectId:l,globalId:_})=>({objectId:l,globalId:_}))??[],updatedFeatures:a?.map(({objectId:l})=>l).filter($)??[]};await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("handleEdits",o,n)),this._updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},n))}async setHistoricMoment(e,t){await this._updatingHandles.addPromise(this._workerHandle.invokeMethod("setHistoricMoment",{moment:e},t))}getDebugInfo(e){return this._workerHandle.invokeMethod("getDebugInfo",{},e)}async notifyElevationSourceChange(){await this._workerHandle.invokeMethod("notifyElevationSourceChange",{})}async notifySymbologyChange(){await this._workerHandle.invokeMethod("notifySymbologyChange",{})}async setSymbologySnappingSupported(e){await this._workerHandle.invokeMethod("setSymbologySnappingSupported",e)}async setSuspended(e){this._suspendController?.abort(),this._suspendController=new AbortController,await this._workerHandle.invokeMethod("setSuspended",e,this._suspendController.signal)}};function z(e){return{filter:e.filter!=null?e.filter.toJSON():null,customParameters:e.customParameters,viewType:e.viewType}}function fe(e){return e.geometryType==="multipatch"||e.geometryType==="mesh"?null:{url:e.parsedUrl?.path??"",fieldsIndex:e.fieldsIndex.toJSON(),geometryType:K.toJSON(e.geometryType),capabilities:e.capabilities,objectIdField:e.objectIdField,globalIdField:e.globalIdField,spatialReference:e.spatialReference.toJSON(),timeInfo:e.timeInfo?.toJSON()}}s([r({constructOnly:!0})],p.prototype,"schedule",void 0),s([r({constructOnly:!0})],p.prototype,"hasZ",void 0),s([r({constructOnly:!0})],p.prototype,"elevationAlignPointsInFeatures",void 0),s([r({constructOnly:!0})],p.prototype,"queryForSymbologySnapping",void 0),s([r({readOnly:!0})],p.prototype,"updating",null),s([r({readOnly:!0})],p.prototype,"availability",void 0),s([r()],p.prototype,"_workerHandleUpdating",void 0),p=s([S("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceSnappingSourceWorkerHandle")],p);class ge extends Q{constructor(t,i){super("FeatureServiceSnappingSourceWorker","fetchCandidates",{},t,{strategy:"dedicated",client:i})}}let w=class extends b{get tiles(){return[new O("0/0/0",0,0,0,X(-1e8,-1e8,1e8,1e8))]}get tileInfo(){return new ee({origin:new te({x:-1e8,y:1e8,spatialReference:this.layer.spatialReference}),size:[512,512],lods:[new ie({level:0,scale:1,resolution:390625})],spatialReference:this.layer.spatialReference})}get tileSize(){return this.tileInfo.size[0]}constructor(e){super(e),this.pointOfInterest=null}};s([r({readOnly:!0})],w.prototype,"tiles",null),s([r({readOnly:!0})],w.prototype,"tileInfo",null),s([r({readOnly:!0})],w.prototype,"tileSize",null),s([r({constructOnly:!0})],w.prototype,"layer",void 0),s([r()],w.prototype,"pointOfInterest",void 0),w=s([S("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceTilesSimple")],w);let u=class extends b{get _updateTilesParameters(){return{tiles:this._tilesOfInterest.tiles,tileInfo:this._tilesOfInterest.tileInfo,tileSize:this._tilesOfInterest.tileSize}}get _layerView(){return this.view?.allLayerViews.find(e=>e.layer===this._layer)}get _isSuspended(){return ne(this._layer)&&!this.layerSource.sublayerSources.some(e=>e.enabled&&e.layer.visible)?!0:!!this.view&&(this._layerView?.suspended!==!1||!this.layerSource.enabled)}get updating(){return this._workerHandle?.updating||this._updatingHandles.updating}get _outFields(){const{view:e,_layerView:t,layerSource:i}=this,{layer:a}=i,{fieldsIndex:n,timeInfo:o,floorInfo:l,subtypeField:_}=a,v=t&&"filter"in t?t.filter:null,g=v?.where&&v.where!=="1=1"?this._getOrLoadWhereFields(v.where,n):[];if(v?.timeExtent&&o){const{startField:d,endField:I}=o,F=n.get(d)?.name??d,T=n.get(I)?.name??I;F&&g.push(F),T&&g.push(T)}if(e?.map&&se(e.map)&&e.map.utilityNetworks?.find(d=>d.isUtilityLayer(a))){const d=a.fieldsIndex.get("assetGroup")?.name,I=a.fieldsIndex.get("assetType")?.name;d&&I&&(g.push(d),g.push(I))}if(a&&l?.floorField&&e?.floors?.length){const d=n.get(l.floorField)?.name??l.floorField;d&&g.push(d)}if(_){const d=n.get(_)?.name??_;d&&g.push(d)}return new Set(g)}get configuration(){const{view:e}=this,{apiKey:t,customParameters:i}=this._layer,a=e!=null?e.type:"2d";return{filter:this._layer.createQuery(),customParameters:t?{...i,token:t}:i,viewType:a}}get availability(){return this._workerHandle?.availability??0}get _layer(){return this.layerSource.layer}constructor(e){super(e),this._updatingHandles=new R,this._workerHandle=null,this._debug=null,this._memoizedMakeGetGroundElevation=re(pe)}initialize(){let e;const t=this.view;if(t==null||t.destroyed)this._tilesOfInterest=new w({layer:this._layer}),e=this._workerHandle=new p;else switch(t.type){case"2d":this._tilesOfInterest=new c({view:t,layer:this._layer}),e=this._workerHandle=new p;break;case"3d":{const{resourceController:i}=t,a=this._layer;this._tilesOfInterest=new y({view:t}),e=this._workerHandle=new p({schedule:n=>i.immediate.schedule(n),hasZ:this._layer.hasZ&&(this._layer.returnZ??!0),elevationAlignPointsInFeatures:async(n,o)=>{const l=await t.whenLayerView(a);return C(o),l.elevationAlignPointsInFeatures(n,o)},queryForSymbologySnapping:async(n,o)=>{const l=await t.whenLayerView(a);return C(o),l.queryForSymbologySnapping(n,o)}}),this.addHandles([t.elevationProvider.on("elevation-change",({context:n})=>{const{elevationInfo:o}=a;ae(n,o)&&h(e.notifyElevationSourceChange())}),f(()=>a.elevationInfo,()=>h(e.notifyElevationSourceChange()),m),f(()=>this._layerView?.layer?.renderer,()=>h(e.notifySymbologyChange()),m),f(()=>this._layerView?.symbologySnappingSupported??!1,n=>h(e.setSymbologySnappingSupported(n)),m),oe(()=>this._layerView?.layer,["edits","apply-edits","graphic-update"],()=>e.notifySymbologyChange())]);break}}this.addHandles([P(e)]),h(e.setup({layer:this._layer,spatialReference:this.spatialReference,configuration:this.configuration},null)),this._updatingHandles.add(()=>this._updateTilesParameters,()=>h(e.updateTiles(this._updateTilesParameters,null)),m),this.addHandles([f(()=>this.configuration,i=>h(e.configure(i,null)),N),f(()=>this._layer.historicMoment,i=>h(e.setHistoricMoment(i)),M),f(()=>this._outFields,i=>h(e.updateOutFields(i)),m),f(()=>this._isSuspended,i=>h(e.setSuspended(i)),M)]),t!=null&&this.addHandles(f(()=>de.FEATURE_SERVICE_SNAPPING_SOURCE_TILE_TREE_SHOW_TILES,i=>{i&&!this._debug?(this._debug=new k({view:t,handle:e}),this.addHandles(P(this._debug),"debug")):!i&&this._debug&&this.removeHandles("debug")},m)),this.addHandles([this.layerSource.layer.on("edits",i=>h(e.handleEdits(i,null))),this.layerSource.layer.on("apply-edits",i=>this._updatingHandles.addPromise(i.result))])}destroy(){this._updatingHandles.destroy()}refresh(){this._workerHandle?.refresh(null)}async fetchCandidates(e,t){const{coordinateHelper:i,point:a}=e;this._tilesOfInterest.pointOfInterest=i.arrayToPoint(a);const n=this._memoizedMakeGetGroundElevation(this.view,i.spatialReference);return(await this._workerHandle.fetchCandidates({...e},t)).candidates.map(o=>ue(o,n))}getDebugInfo(e){return this._workerHandle.getDebugInfo(e)}_getOrLoadWhereFields(e,t){const{_whereModule:i}=this;if(!this._loadWhereModuleTask&&!i){const a=le(async()=>{const n=await V(()=>import("./chunk-DcUppS74.js").then(o=>o.W),__vite__mapDeps([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36]));return this._whereModule=n.WhereClause,this._whereModule});return this._loadWhereModuleTask=a,this._updatingHandles.addPromise(a.promise),[]}if(!i)return[];try{return i.create(e,{fieldsIndex:t}).fieldNames}catch{return[]}}};s([r({constructOnly:!0})],u.prototype,"spatialReference",void 0),s([r({constructOnly:!0})],u.prototype,"layerSource",void 0),s([r({constructOnly:!0})],u.prototype,"view",void 0),s([r()],u.prototype,"_tilesOfInterest",void 0),s([r({readOnly:!0})],u.prototype,"_updateTilesParameters",null),s([r()],u.prototype,"_layerView",null),s([r()],u.prototype,"_isSuspended",null),s([r({readOnly:!0})],u.prototype,"updating",null),s([r()],u.prototype,"_outFields",null),s([r({readOnly:!0})],u.prototype,"configuration",null),s([r({readOnly:!0})],u.prototype,"availability",null),s([r()],u.prototype,"_loadWhereModuleTask",void 0),s([r()],u.prototype,"_whereModule",void 0),u=s([S("esri.views.interactive.snapping.featureSources.FeatureServiceSnappingSource")],u);export{u as FeatureServiceSnappingSource};
