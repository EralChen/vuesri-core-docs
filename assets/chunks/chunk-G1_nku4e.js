import{e7 as M,g5 as R,bF as S,gb as f,am as q,z as U,an as H,ag as I,aH as E,a1 as h,a2 as w,a4 as F}from"./chunk-CMhy9c9G.js";import{_ as W}from"./chunk-DpoZ3ulm.js";import{m as z}from"./chunk-CzRyLr82.js";import"./chunk-ByM7454y.js";/* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              */import"./chunk-DjDIt6nn.js";let o=class extends z(M(R(S))){constructor(){super(...arguments),this.bitmapContainer=new f}supportsSpatialReference(t){return this.layer.serviceSupportsSpatialReference(t)}update(t){this.strategy.update(t).catch(e=>{q(e)||U.getLogger(this).error(e)})}attach(){const{layer:t}=this,{imageMaxHeight:e,imageMaxWidth:r}=t;this.bitmapContainer=new f,this.container.addChild(this.bitmapContainer),this.strategy=new W({container:this.bitmapContainer,fetchSource:this.fetchImage.bind(this),requestUpdate:this.requestUpdate.bind(this),imageMaxHeight:e,imageMaxWidth:r,imageRotationSupported:!1,imageNormalizationSupported:!1,hidpi:!1}),this.addAttachHandles(H(()=>this.exportImageVersion,()=>this.requestUpdate()))}detach(){this.strategy=I(this.strategy),this.container.removeAllChildren()}viewChange(){}moveEnd(){this.requestUpdate()}createFetchPopupFeaturesQuery(t){const{view:e,bitmapContainer:r}=this,{x:a,y:s}=t,{spatialReference:b}=e;let i,p=0,d=0;if(r.children.some(C=>{const{width:g,height:c,resolution:y,x:m,y:n}=C,l=m+y*g,x=n-y*c;return a>=m&&a<=l&&s<=n&&s>=x&&(i=new E({xmin:m,ymin:x,xmax:l,ymax:n,spatialReference:b}),p=g,d=c,!0)}),!i)return null;const u=i.width/p,$=Math.round((a-i.xmin)/u),v=Math.round((i.ymax-s)/u);return{extent:i,width:p,height:d,x:$,y:v}}async doRefresh(){this.requestUpdate()}isUpdating(){return this.strategy.updating||this.updateRequested}fetchImage(t,e,r,a){return this.layer.fetchImageBitmap(t,e,r,{timeExtent:this.timeExtent,...a})}};h([w()],o.prototype,"strategy",void 0),h([w()],o.prototype,"updating",void 0),o=h([F("esri.views.2d.layers.WMSLayerView2D")],o);const ft=o;export{ft as default};
