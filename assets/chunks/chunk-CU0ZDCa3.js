import{gs as T,s as g,c0 as c,dr as E,ds as P,cp as q,A as y,cU as _,gt as I,al as R,gu as f,dn as b,dv as $,J as j,dx as N,dw as O}from"./chunk-CGsGeN7j.js";import{m as Q}from"./chunk-DqxNJkKp.js";import{x as M,j as k}from"./chunk-CfJIIhbC.js";import{$ as L}from"./chunk-CGEHL6Lm.js";import{p as U}from"./chunk-9zwiFLAo.js";import"./chunk-ByM7454y.js";/* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              */import"./chunk-BVTcjJlO.js";import"./chunk-RC1QoYd6.js";import"./chunk-mN5_N2HN.js";import"./chunk-CvgiXnaQ.js";import"./chunk-Wa8cmqdu.js";import"./chunk-CY61kSQD.js";import"./chunk-CjZgm5AC.js";const x="esri.layers.WFSLayer";class Nt{constructor(){this._customParameters=null,this._queryEngine=null,this._supportsPagination=!0}destroy(){this._queryEngine?.destroy(),this._queryEngine=null}async load(e,t={}){const{getFeatureUrl:a,getFeatureOutputFormat:o,fields:n,geometryType:u,featureType:s,maxRecordCount:i,maxTotalRecordCount:l,maxPageCount:C,objectIdField:d,customParameters:F}=e,{spatialReference:m,getFeatureSpatialReference:h}=T(a,s,e.spatialReference);try{await M(h,m)}catch{throw new g("unsupported-projection","Projection not supported",{inSpatialReference:h,outSpatialReference:m})}c(t),this._customParameters=F,this._featureType=s,this._fieldsIndex=E.fromLayerJSON({fields:n,dateFieldsTimeReference:n.some(S=>S.type==="esriFieldTypeDate")?{timeZoneIANA:P}:null}),this._geometryType=u,this._getFeatureUrl=a,this._getFeatureOutputFormat=o,this._getFeatureSpatialReference=h,this._maxRecordCount=i,this._maxTotalRecordCount=l,this._maxPageCount=C,this._objectIdField=d,this._spatialReference=m;let p=await this._snapshotFeatures(t);if(p.errors.length>0&&(this._supportsPagination=!1,p=await this._snapshotFeatures(t),p.errors.length>0))throw p.errors[0];return this._queryEngine=new L({fieldsIndex:this._fieldsIndex,geometryType:u,hasM:!1,hasZ:!1,objectIdField:d,spatialReference:m,timeInfo:null,featureStore:new Q({geometryType:u,hasM:!1,hasZ:!1})}),this._queryEngine.featureStore.addMany(p.features),{warnings:w(p),extent:(await this._queryEngine.fetchRecomputedExtents()).fullExtent}}async applyEdits(){throw new g("wfs-source:editing-not-supported","applyEdits() is not supported on WFSLayer")}async queryFeatures(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQuery(e,t.signal)}async queryFeatureCount(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForCount(e,t.signal)}async queryObjectIds(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForIds(e,t.signal)}async queryExtent(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForExtent(e,t.signal)}async querySnapping(e,t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForSnapping(e,t.signal)}async refresh(e){return this._customParameters=e.customParameters,this._maxRecordCount=e.maxRecordCount,this._maxTotalRecordCount=e.maxTotalRecordCount,this._maxPageCount=e.maxPageCount,this._snapshotTask?.abort(),this._snapshotTask=q(t=>this._snapshotFeatures({signal:t})),this._snapshotTask.promise.then(t=>{this._queryEngine.featureStore.clear(),this._queryEngine.featureStore.addMany(t.features);for(const a of w(t))y.getLogger(x).warn(new _("wfs-layer:refresh-warning",a.message,a.details));t.errors?.length&&y.getLogger(x).warn(new _("wfs-layer:refresh-error","Refresh completed with errors",{errors:t.errors}))},()=>{this._queryEngine.featureStore.clear()}),await this._waitSnapshotComplete(),{extent:(await this._queryEngine.fetchRecomputedExtents()).fullExtent}}async _waitSnapshotComplete(){if(this._snapshotTask&&!this._snapshotTask.finished){try{await this._snapshotTask.promise}catch{}return this._waitSnapshotComplete()}}async _snapshotFeatures(e){const t=e?.signal,a=this._maxTotalRecordCount,o=this._maxPageCount,n=this._supportsPagination?await I(this._getFeatureUrl,this._featureType.typeName,{customParameters:this._customParameters,signal:t}):void 0;let u=[];const s=[];if(n==null)try{u=await this._singleQuery(t)}catch(i){R(i)||s.push(i)}else{const i=Math.min(n,a),l=J(this,Math.max(1,Math.min(Math.ceil(i/this._maxRecordCount),o)),t);await Promise.allSettled(Array.from({length:10}).map(()=>Z(l,u,s)))}return c(t),{features:u,totalRecordCount:n,maxTotalRecordCount:a,maxPageCount:o,errors:s}}async _singleQuery(e){const t=await f(this._getFeatureUrl,this._featureType.typeName,this._getFeatureSpatialReference,this._getFeatureOutputFormat,{customParameters:this._customParameters,signal:e});return this._processGeoJSON(t,{signal:e})}async _pageQuery(e,t){const a=e*this._maxRecordCount,o=await f(this._getFeatureUrl,this._featureType.typeName,this._getFeatureSpatialReference,this._getFeatureOutputFormat,{customParameters:this._customParameters,startIndex:a,count:this._maxRecordCount,signal:t});return this._processGeoJSON(o,{startIndex:a,signal:t})}_processGeoJSON(e,t){b(e,this._getFeatureSpatialReference.wkid);const{startIndex:a,signal:o}=t;c(o);const n=$(e,{geometryType:this._geometryType,hasZ:!1,objectIdField:this._objectIdField});if(!j(this._spatialReference,this._getFeatureSpatialReference))for(const s of n)s.geometry!=null&&(s.geometry=N(k(O(s.geometry,this._geometryType,!1,!1),this._getFeatureSpatialReference,this._spatialReference)));let u=a??1;for(const s of n){const i={};U(this._fieldsIndex,i,s.attributes,!0),s.attributes=i,i[this._objectIdField]==null&&(s.objectId=i[this._objectIdField]=u++)}return n}}function*J(r,e,t){for(let a=0;a<e;a++)yield r._pageQuery(a,t)}async function Z(r,e,t){let a=r.next();for(;!a.done;){try{const o=await a.value;e.push(...o)}catch(o){R(o)||t.push(o)}a=r.next()}}function w(r){const e=[];return r.totalRecordCount!=null&&(r.features.length<r.totalRecordCount&&e.push({name:"wfs-layer:maxRecordCount-too-low",message:`Could only fetch ${r.features.length} of ${r.totalRecordCount} in ${r.maxPageCount} queries. Try increasing the value of WFSLayer.maxRecordCount.`,details:{recordCount:r.features.length,totalRecordCount:r.totalRecordCount}}),r.totalRecordCount>r.maxTotalRecordCount&&e.push({name:"wfs-layer:large-dataset",message:`The number of ${r.totalRecordCount} features exceeds the maximum allowed of ${r.maxTotalRecordCount}.`,details:{recordCount:r.features.length,totalRecordCount:r.totalRecordCount,maxTotalRecordCount:r.maxTotalRecordCount}})),e}export{Nt as default};
