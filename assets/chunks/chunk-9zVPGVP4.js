import{nA as g,g$ as E,dc as v,gX as u,h0 as V,p1 as j,lG as F,lL as I,ha as O,h2 as S,hb as k,h7 as w,o$ as A,he as C,hd as H}from"./chunk-CGsGeN7j.js";import{p as T,e as q,u as B,a as M}from"./chunk-PfUi-vtr.js";import{u as R}from"./chunk-DgbCwlwU.js";import{a as x}from"./chunk-DsXvdgDB.js";import{_ as U,c as D}from"./chunk-CA_Q6Mh5.js";import{m as G}from"./chunk-BKL_2IJ-.js";import{s as b}from"./chunk-DHvBO4SR.js";const N={...T,source:{type:[Object,Array],required:!0,default:()=>[]},fields:{type:Array,required:!0,default:()=>[]},geometryType:{type:String,default:"point",required:!0},objectIdField:{type:String,default:"ObjectID"},forceUpdate:{type:Boolean,default:!1}},L={...q,change:e=>e,load:e=>e},ee=g(L),P=E({name:"VaClientFeatureLayer",components:{VaLayerHitEvents:U},props:N,emits:L,setup(e,{emit:i}){const n=R(),m=n.map,f=D(i),t=new v({source:e.source,...e.defaultOptions});t[b]=G();const d=t[b];return B(t,e),M(n,t,e),u(()=>{t.geometryType=e.geometryType}),u(()=>{t.objectIdField=e.objectIdField}),u(()=>{t.fields=e.fields}),x(m,t,e),V(()=>e.source,(_,$)=>{j().then(()=>{const s=[],c=_.reduce((a,r)=>{const o=r.attributes[e.objectIdField];return a[o]=r,a},{}),p=$.reduce((a,r)=>{const o=r.attributes[e.objectIdField];return Reflect.has(c,o)?(s.push(r),Reflect.deleteProperty(c,o)):a[o]=r,a},{}),y=[],h=[];for(const a in c)y.push(c[a]);for(const a in p)h.push(p[a]);return{addFeatures:y,deleteFeatures:h,updateFeatures:s}}).then(s=>t.applyEdits(s)).then(()=>(e.forceUpdate&&(t.visible=!1,t.visible=!0),{view:n,layer:t})).then(s=>{d.emit("change",s),i("change",s)})}),F("vaLayer",t),F("vaFeatureLayer",t),i("load",{view:n,layer:t}),{hitEmits:f}}});function W(e,i,n,m,f,t){const d=O("VaLayerHitEvents");return S(),k(H,null,[w(d,A(e.hitEmits),null,16),C(e.$slots,"default")],64)}const l=I(P,[["render",W]]);l.install=e=>{e.component(l.name,l)};export{l as V,ee as c,L as e};
