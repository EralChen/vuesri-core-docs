import{i as k}from"./chunk-CZqKK-Wg.js";import{e as _,s as q,$ as E}from"./chunk-CD9yU3wS.js";import{hq as P,hr as F}from"./chunk-CMhy9c9G.js";import"./chunk-DNnuvc1i.js";import"./chunk-CUzevAry.js";import"./chunk-ByM7454y.js";/* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              */const G=96/72;class Mt{constructor(y){this._spatialReference=y,this._imageDataCanvas=null,this._cimResourceManager=new k}get _canvas(){return this._imageDataCanvas||(this._imageDataCanvas=document.createElement("canvas")),this._imageDataCanvas}get resourceManager(){return this._cimResourceManager}async rasterizeCIMSymbolAsync(y,d,w,f,a,r,s,n,M){if(!y)return null;const{data:m}=y;if(!m||m.type!=="CIMSymbolReference"||!m.symbol)return null;const{symbol:C}=m;r||(r=P(C));const o=await F.resolveSymbolOverrides(m,d,this._spatialReference,a,r,s,n),c=this._cimResourceManager,u=[];_.fetchResources(o,c,u),_.fetchFonts(o,c,u),u.length>0&&await Promise.all(u);const{width:e,height:i}=w,R=D(r,e,i,f),t=_.getEnvelope(o,R,c);if(!t)return null;t.x===1/0&&(t.x=e+2),t.y===1/0&&(t.y=-i/2),t.width===-1/0&&(t.width=e),t.height===-1/0&&(t.height=i);let h=1,v=0,x=0;switch(C.type){case"CIMPointSymbol":case"CIMTextSymbol":{let p=1;t.width>e&&(p=e/t.width);let g=1;t.height>i&&(g=i/t.height),f==="preview"&&(t.width<e&&(p=e/t.width),t.height<i&&(g=i/t.height)),h=Math.min(p,g),v=t.x+t.width/2,x=t.y+t.height/2}break;case"CIMLineSymbol":{(M||t.height>i)&&(h=i/t.height),x=t.y+t.height/2;const p=t.x*h+e/2,g=(t.x+t.width)*h+e/2,{paths:b}=R;b[0][0][0]-=p/h,b[0][2][0]-=(g-e)/h}break;case"CIMPolygonSymbol":{v=t.x+t.width/2,x=t.y+t.height/2;const p=t.x*h+e/2,g=(t.x+t.width)*h+e/2,b=t.y*h+i/2,I=(t.y+t.height)*h+i/2,{rings:l}=R;p<0&&(l[0][0][0]-=p,l[0][3][0]-=p,l[0][4][0]-=p),b<0&&(l[0][0][1]+=b,l[0][1][1]+=b,l[0][4][1]+=b),g>e&&(l[0][1][0]-=g-e,l[0][2][0]-=g-e),I>i&&(l[0][2][1]+=I-i,l[0][3][1]+=I-i)}}const z={type:"cim",data:{type:"CIMSymbolReference",symbol:o}};return this.rasterize(z,e,i,v,x,h,r,1,R)}rasterize(y,d,w,f,a,r,s,n=0,M=null){const{data:m}=y;if(!m||m.type!=="CIMSymbolReference"||!m.symbol)return null;const{symbol:C}=m,o=this._canvas,c=(window.devicePixelRatio||1)*G;o.width=d*c,o.height=w*c,s||(s=P(C)),M||(M=D(s,d,w,"legend")),o.width+=2*n,o.height+=2*n;const u=o.getContext("2d",{willReadFrequently:!0}),e=E.createIdentity();return e.translate(-f,-a),e.scale(r*c,-r*c),e.translate(d*c/2+n,w*c/2+n),u.clearRect(0,0,o.width,o.height),new q(u,this._cimResourceManager,e,!0).drawSymbol(C,M),u.getImageData(0,0,o.width,o.height)}}function D(S,y,d,w){const a=-y/2+1,r=y/2-1,s=d/2-1,n=-d/2+1;switch(S){case"esriGeometryPoint":return{x:0,y:0};case"esriGeometryPolyline":return{paths:[[[a,0],[0,0],[r,0]]]};default:return w==="legend"?{rings:[[[a,s],[r,0],[r,n],[a,n],[a,s]]]}:{rings:[[[a,s],[r,s],[r,n],[a,n],[a,s]]]}}}export{Mt as CIMSymbolRasterizer};
