import{fw as m,bJ as f,C as w,V as y,q as _,at as c,ak as r,_ as o,en as V,$ as v,a2 as C,fG as b}from"./chunk-fHrNL0KE.js";import{t as g}from"./chunk-MVoTAJi5.js";import{$ as d}from"./chunk-wtO4ZN4_.js";import"./chunk-0wTVHGNT.js";import"./chunk-6DVZ1Fvy.js";import"./chunk-4OFx0uF4.js";import"./chunk-KmtnNLh_.js";import"./chunk-aUmT0DqI.js";import"./chunk-gJZ7CV2L.js";import"./chunk-FTIc6_7S.js";import"./chunk-3nQD-qkN.js";import"./chunk-rN5cj8Dd.js";import"./chunk-Ms-yQ6yi.js";import"./chunk-eQlbMzId.js";import"./chunk-47D7e9N5.js";import"./chunk-x1OpTvfG.js";import"./chunk-v6EOeNTY.js";import"./chunk-0k55eIfB.js";const u="sublayers",l="layerView";let p=class extends m(f){constructor(){super(...arguments),this._highlightIds=new Map}*graphicsViews(){this._graphicsViewsFeatureCollectionMap==null?this._graphicsViews==null?yield*[]:yield*this._graphicsViews:yield*this._graphicsViewsFeatureCollectionMap.keys()}async hitTest(i,e){return Array.from(this.graphicsViews(),t=>{const s=t.hitTest(i);if(this._graphicsViewsFeatureCollectionMap!=null){const a=this._graphicsViewsFeatureCollectionMap.get(t);for(const h of s)!h.popupTemplate&&a.popupTemplate&&(h.popupTemplate=a.popupTemplate),h.sourceLayer=h.layer=this.layer}return s}).flat().map(t=>({type:"graphic",graphic:t,layer:this.layer,mapPoint:i}))}highlight(i){let e;typeof i=="number"?e=[i]:i instanceof w?e=[i.uid]:Array.isArray(i)&&i.length>0?e=typeof i[0]=="number"?i:i.map(s=>s&&s.uid):y.isCollection(i)&&(e=i.map(s=>s&&s.uid).toArray());const t=e?.filter(_);return t?.length?(this._addHighlight(t),c(()=>this._removeHighlight(t))):c()}update(i){for(const e of this.graphicsViews())e.processUpdate(i)}attach(){const i=this.view,e=()=>this.requestUpdate(),t=this.layer.featureCollections;if(t!=null&&t.length){this._graphicsViewsFeatureCollectionMap=new Map;for(const s of t){const a=new g(this.view.featuresTilingScheme),h=new d({view:i,graphics:s.source,renderer:s.renderer,requestUpdateCallback:e,container:a});this._graphicsViewsFeatureCollectionMap.set(h,s),this.container.addChild(h.container),this.addHandles([r(()=>s.visible,n=>h.container.visible=n,o),r(()=>h.updating,()=>this.notifyChange("updating"),o)],l)}this._updateHighlight()}else this.layer.sublayers!=null&&this.addHandles(V(()=>this.layer.sublayers,"change",()=>this._createGraphicsViews(),{onListenerAdd:()=>this._createGraphicsViews(),onListenerRemove:()=>this._destroyGraphicsViews()}),u)}detach(){this._destroyGraphicsViews(),this.removeHandles(u)}moveStart(){}moveEnd(){}viewChange(){for(const i of this.graphicsViews())i.viewChange()}isUpdating(){for(const i of this.graphicsViews())if(i.updating)return!0;return!1}_destroyGraphicsViews(){this.container.removeAllChildren(),this.removeHandles(l);for(const i of this.graphicsViews())i.destroy();this._graphicsViews=null,this._graphicsViewsFeatureCollectionMap=null}_createGraphicsViews(){if(this._destroyGraphicsViews(),this.layer.sublayers==null)return;const i=[],e=this.view,t=()=>this.requestUpdate();for(const s of this.layer.sublayers){const a=new g(this.view.featuresTilingScheme);a.fadeTransitionEnabled=!0;const h=new d({view:e,graphics:s.graphics,requestUpdateCallback:t,container:a});this.addHandles([s.on("graphic-update",h.graphicUpdateHandler),r(()=>s.visible,n=>h.container.visible=n,o),r(()=>h.updating,()=>this.notifyChange("updating"),o)],l),this.container.addChild(h.container),i.push(h)}this._graphicsViews=i,this._updateHighlight()}_addHighlight(i){for(const e of i)if(this._highlightIds.has(e)){const t=this._highlightIds.get(e);this._highlightIds.set(e,t+1)}else this._highlightIds.set(e,1);this._updateHighlight()}_removeHighlight(i){for(const e of i)if(this._highlightIds.has(e)){const t=this._highlightIds.get(e)-1;t===0?this._highlightIds.delete(e):this._highlightIds.set(e,t)}this._updateHighlight()}_updateHighlight(){const i=Array.from(this._highlightIds.keys()),e=b("highlight");for(const t of this.graphicsViews())t.setHighlight(i.map(s=>({objectId:s,highlightFlags:e})))}};p=v([C("esri.views.2d.layers.MapNotesLayerView2D")],p);const J=p;export{J as default};
