import{V as k}from"./chunk-CZmFIMBn.js";import{gO as B,gY as S,gZ as T,gR as N,g_ as $,gW as a,gT as s,gV as y,g$ as j,gX as A,h0 as D,aH as V}from"./chunk-CMhy9c9G.js";import{V as F}from"./chunk-895G59h-.js";import{E as U,u as v}from"./chunk-CmFK1iGu.js";import{u as W}from"./chunk-Ds9r7LkQ.js";import"./chunk-BY_FN4O4.js";import"./chunk-Dx0NO5tE.js";import"./chunk-hcQCkdqJ.js";import"./chunk-BCEYKtyI.js";import"./chunk-DfjCgXDb.js";import"./chunk-DIHKnm4l.js";import"./chunk-TufeK50d.js";import"./chunk-Dck1UqdK.js";import"./chunk-B4Rwpdzs.js";import"./chunk-igt1gBeK.js";import"./chunk-Cj_Zd08g.js";import"./chunk-BG40D5IJ.js";import"./chunk-Dzc4VObD.js";import"./chunk-DjjaYBlz.js";import"./chunk-CM_lIypp.js";import"./chunk-CmV2Xkqf.js";import"./chunk-CbY12eax.js";import"./chunk-BcJWwafW.js";import"./chunk-ClYvIdCO.js";import{V as z}from"./chunk-QvQIJROn.js";import"./chunk-CdctZqhD.js";import"./chunk-DaHzAMiu.js";import"./chunk-C1aYhagP.js";import"./chunk-BU_CQVD8.js";import"./chunk-D_aEPSIR.js";import"./chunk-CAaD5fpi.js";import"./chunk-C0Px4IH5.js";import"./chunk-gN39URxt.js";import"./chunk-HNqUD5wH.js";import"./chunk-3xYMskso.js";import"./chunk-etnkt-xL.js";import"./chunk-oE2be0WM.js";import"./chunk-BnPJJ4xW.js";import"./chunk-DdA8NjGq.js";import"./chunk-scr1RBcv.js";import"./chunk-BVa6-kjc.js";import"./chunk-CIKSIPV2.js";import{V as I,s as O}from"./chunk-UsAGatjR.js";import"./chunk-C5o2Zojc.js";const q={class:"bg-white pa-m"},H="https://ows.terrestris.de/osm/service?width=1072&height=1072&bbox=-20037508.342787%2C-20037508.342781033%2C20037508.342781033%2C20037508.342787&srs=EPSG%3A900913&format=image%2Fpng&request=GetMap&service=WMS&styles=&transparent=TRUE&version=1.1.1&layers=OSM-WMS&_ts=1712122845938",Dt=B({__name:"jpg-layer",setup(K){const d="/vuesri/data/1.jpg",R="/vuesri/images/thanks/zzlogo.png",i=S({gridRatio:100,url:d}),_=[{templateType:"VkfInputNumber",label:"GridRatio",prop:"gridRatio"},{templateType:"VkfRadio",label:"Url",prop:"url",options:[{label:"Service1MB",value:H},{label:"2MB",value:d},{label:"50KB",value:R}]}],e=W();class E{}class G{constructor(t=100){this.gridRatio=100,this.grids=[],this.gridRatio=t,this.createGrid()}createGrid(){const t=Math.round(e.width/this.gridRatio),o=Math.round(e.height/this.gridRatio),n=(e.extent.xmax-e.extent.xmin)/t,x=(e.extent.ymax-e.extent.ymin)/o;this.grids=[];let p,f,l,h;for(let c=0;c<t;c++){p=e.extent.xmin+n*c,f=p+n;for(let g=0;g<o;g++){l=e.extent.ymin+x*g,h=l+x;const M=new V({xmin:p,ymin:l,xmax:f,ymax:h,spatialReference:e.spatialReference}),w=new E;w.extent=M,this.grids.push(w)}}}}const u=r=>new U({image:r,georeference:new v({extent:new V({xmin:-20037508342787e-6,ymin:-20037508342781033e-9,xmax:20037508342781033e-9,ymax:20037508342787e-6,spatialReference:{wkid:3857}})})}),b=Array.from({length:1},()=>u(i.url)),m=new F({elements:b}),C=()=>{const r=new G(i.gridRatio);m.elements.removeAll(),window.alert(`生成网格${r.grids.length}`),r.grids.forEach(t=>{const o=u(i.url);o.georeference=new v({extent:t.extent}),m.elements.add(o)})};return(r,t)=>{const o=T("ElButton");return N(),$(D,null,[a(s(k),{source:s(m)},null,8,["source"]),a(s(z),null,{default:y(()=>[j("div",q,[a(s(I),{"form-items":_,data:i,onSetData:t[0]||(t[0]=n=>s(O)(i,n))},null,8,["data"]),a(o,{onClick:C},{default:y(()=>t[1]||(t[1]=[A(" Grid ")])),_:1})])]),_:1})],64)}}});export{Dt as _};
