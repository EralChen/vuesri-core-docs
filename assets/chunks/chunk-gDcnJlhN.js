import{V as P}from"./chunk-8j8dWpzP.js";import{V as U}from"./chunk-mw0PRWNE.js";import{V as W}from"./chunk-8F4dk0-n.js";import{R as A}from"./chunk-FEI8nmeL.js";import{V as J}from"./chunk-1_dHra1d.js";import{s as b,qP as l,qQ as x,qR as j,qS as F,qT as $,qU as M,qV as Q,qW as Y,qX as X,qY as f,a5 as T,qZ as Z,q_ as z,q$ as H,r0 as k,r1 as K,r2 as ee,gY as ae,hd as I,h7 as te,g$ as re,h0 as ne,h3 as y,h4 as _,h5 as h,h9 as se,h1 as w,C as ie,bc as oe}from"./chunk-VRza80L0.js";import"./chunk-hj9a9y-4.js";import"./chunk-WgvbwtiK.js";import"./chunk-B3AFDltd.js";import"./chunk-K1iWAS5e.js";import"./chunk-iptrbIQE.js";import"./chunk-EBSwZf5y.js";import"./chunk-kkmfP6Iz.js";import"./chunk-dDxkJaNB.js";import"./chunk--IH1hFHy.js";import"./chunk-TJxHKQaJ.js";import"./chunk-mFa6NMiX.js";import"./chunk-YiBhCNSZ.js";import"./chunk-V-ZUmSRJ.js";import"./chunk-N23wYtQv.js";import"./chunk-vcak-BNh.js";import"./chunk-f83L__eB.js";const le=Y;async function me(a){if(!a?.layer||!a.view)throw new b("heatmap-statistics:missing-parameters","'layer' and 'view' parameters are required");const e=[l.CSVLayer,l.FeatureLayer,l.GeoJSONLayer,l.OGCFeatureLayer,l.OrientedImageryLayer,l.WFSLayer],{layer:r,...s}=a,n=x(r,e);if(!n)throw new b("heatmap-statistics:invalid-parameters","'layer' must be one of these types: "+j(e).join(", "));const t={layerAdapter:n,...s};t.radius=t.radius==null?t.blurRadius==null?18:F(t.blurRadius):t.radius;const u=t.signal!=null?{signal:t.signal}:null;await n.load(u);const p=t.field,o=p?n.getField(p):null,i=await $({field:p}),m=M(n,i,"heatmap-statistics:invalid-parameters");if(m)throw m;if(o){const c=Q(n,o,"heatmap-statistics:invalid-parameters",le);if(c)throw c}return t}async function ce(a){const{layerAdapter:e,...r}=await me(a);return e.heatmapStatistics(r)}const D=.01;async function ue(a){if(!a?.layer||!a.view)throw new b("heatmap-renderer:missing-parameters","'layer' and 'view' parameters are required");const e={...a,layer:a.layer,view:a.view};e.radius??=e.blurRadius==null?18:F(e.blurRadius),e.minRatio??=.01,e.maxRatio??=1,e.fadeRatio??=.2,e.fadeToTransparent??=!0;const r=[l.CSVLayer,l.FeatureLayer,l.GeoJSONLayer,l.OGCFeatureLayer,l.OrientedImageryLayer,l.StreamLayer,l.WFSLayer],s=x(e.layer,r);if(!s)throw new b("heatmap-renderer:invalid-parameters","'layer' must be one of these types: "+j(r).join(", "));e.layer=s;const n=e.signal!=null?{signal:e.signal}:null;await s.load(n);const t=await $({field:e.field}),u=X(s,t,"heatmap-renderer:invalid-parameters");if(u)throw u;return e}async function pe(a){let e=a.scheme,r=null,s=null;const n=await K(a.basemap,a.view);if(r=n.basemapId!=null?n.basemapId:null,s=n.basemapTheme!=null?n.basemapTheme:null,e)return{scheme:k(e),basemapId:r,basemapTheme:s};const t=ee({basemapTheme:s});return t&&(e=t.primaryScheme,r=t.basemapId,s=t.basemapTheme),{scheme:e,basemapId:r,basemapTheme:s}}async function de(a,e){const{field:r,basemap:s,radius:n,fadeToTransparent:t,heatmapScheme:u,view:p}=e,{scheme:o,basemapId:i,basemapTheme:m}=await pe({basemap:s,scheme:u,view:p}),c=o.colors,R=c.length,V=a.min==null,q=V?[0,.04]:[a.min,a.max];let C;const L=e.fadeRatio??0,O=e.maxRatio??0,g=e.minRatio??0,E=(O-g)/(R-1),d=c[0],S=t?g:D,v=[new f({ratio:0,color:new T([d.r,d.g,d.b,0])}),new f({ratio:D,color:new T([d.r,d.g,d.b,0])}),new f({ratio:S,color:new T([d.r,d.g,d.b,S])})];return Z(c,R).forEach((B,N)=>{const G=g+E*N;v.push(new f({ratio:G,color:B}))}),t&&(ye(v,L),C=new z({fadeRatio:L})),{renderer:new H({authoringInfo:C,radius:n,colorStops:v,field:r,minDensity:q[0],maxDensity:q[1]}),statistics:a,defaultValuesUsed:V,scheme:k(o),basemapId:i,basemapTheme:m}}function ye(a,e){const r=10*(1-e)+1,s=a.length-3,n=a[2].color.a;a.forEach((t,u)=>{if(u<=2)return;const{color:p}=t,o=(u-3)/s;p.a=e===0?1:Math.min(Math.max(o*r+o+n,n),1)})}async function he(a){const e=await ue(a);return de(e.statistics??await ce({layer:e.layer,field:e.field,radius:e.radius,view:e.view,signal:e.signal}),e)}const fe=new A({baseURL:"/data"}),we=()=>fe.request({method:"GET",url:"/point1.json"}).then(a=>a[0]),Ge=ae({__name:"index",setup(a){const e=I(),r=I([]),s=()=>{we().then(o=>{r.value=o.centerPoints.map((i,m)=>new ie({geometry:new oe({longitude:i.centerPoint[0],latitude:i.centerPoint[1]}),attributes:{probabilityDensity:i.probabilityDensity,ranking:i.ranking,ObjectID:m}}))})};s();const n=o=>{const{result:i}=o;i&&console.log(i)},t=async o=>{const i=o.layer,m=o.view;await i.when(),m.goTo(r.value);const c=await he({layer:i,view:m,field:"probabilityDensity"});console.log(c),e.value=c.renderer},u=()=>{s()},p=()=>{r.value=[]};return(o,i)=>{const m=te("ElButton");return re(),ne(w(U),null,{before:y(()=>[se("p",null,[h(m,{onClick:i[0]||(i[0]=c=>u())},{default:y(()=>[_("getTestData")]),_:1}),h(m,{onClick:p},{default:y(()=>[_("清空")]),_:1})])]),default:y(()=>[h(w(W),{type:"img_w",spatialReference:{wkid:3857}}),h(w(J),null,{default:y(({spatialReference:c})=>[h(w(P),{spatialReference:c,renderer:e.value,source:r.value,fields:[{name:"ObjectID",type:"oid"},{name:"probabilityDensity",type:"double"},{name:"ranking",type:"double"}],"geometry-type":"point","object-id-field":"ObjectID",cursor:"pointer",onClick:n,onChange:t},null,8,["spatialReference","renderer","source"])]),_:1})]),_:1})}}});export{Ge as default};
