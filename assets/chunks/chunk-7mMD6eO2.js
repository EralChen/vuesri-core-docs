import{a1 as o,a2 as a,a4 as l,lS as m,cV as d,aH as w,gD as g,s as p,lT as v,eB as f,ak as x,bE as F,ar as k}from"./chunk-CMhy9c9G.js";import{t as O}from"./chunk-D8XLmmWT.js";import{s as S}from"./chunk-BiAAMMdb.js";import"./chunk-ByM7454y.js";/* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              */import"./chunk-g4fxw0cE.js";import"./chunk-DjDIt6nn.js";import"./chunk-CS1tf3PV.js";import"./chunk-ijmlzgPk.js";import"./chunk-CbidHm8R.js";import"./chunk-CZzxYW5S.js";import"./chunk-CgOSVer5.js";import"./chunk-CcEbRgUF.js";import"./chunk-DXKJyjzq.js";import"./chunk-D-rMG-KE.js";import"./chunk-C1gAEv-j.js";import"./chunk-8Y4oRjrd.js";import"./chunk-CvgiXnaQ.js";import"./chunk-_StMwdLk.js";import"./chunk-TKmf17Pr.js";import"./chunk-Dc8--CBJ.js";import"./chunk-Dcn2W9Gp.js";import"./chunk-DcUppS74.js";import"./chunk-YA9YD_OS.js";import"./chunk-D1fDIYeK.js";import"./chunk-O5eRSE6e.js";import"./chunk-T1pEzEga.js";import"./chunk-CUOUzi7D.js";import"./chunk-DfBjMReh.js";import"./chunk-CgSr3-7H.js";import"./chunk-DoB_ieSn.js";import"./chunk-BxRfZC3M.js";import"./chunk-BSi4oUWq.js";import"./chunk-BPVd6ESQ.js";import"./chunk-CeYath0a.js";import"./chunk-DaLUiyab.js";let n=class extends m{constructor(e){super(e),this.schedule=null,this._workerUpdating=!0}get updating(){return this._workerUpdating}initialize(){this._workerHandle=new _(this.schedule,this);const{layer:e,viewSpatialReference:t,renderSpatialReference:r}=this;this.addResolvingPromise((async()=>await this._workerHandle.invokeMethod("setup",{url:e.parsedUrl?.path??"",baseQuery:e.createQuery().toJSON(),viewSpatialReference:t.toJSON(),renderSpatialReference:r.toJSON(),viewingMode:this.viewingMode,objectIdField:e.objectIdField,capabilities:e.capabilities,timeInfo:e.timeInfo?.toJSON(),fieldsIndex:e.fieldsIndex.toJSON()}))()),this.addHandles(this._workerHandle.on("notify-updating",({updating:i})=>{this._workerUpdating=i}))}async onTileTreeChange({added:e,removed:t}){if(e.length===0&&t.length===0)return;const r=e.map(H),i=t.map(Q);await this._workerHandle.invokeMethod("onTileTreeChange",{added:r,removed:i})}async executeQuery(e,t){const r=await this._workerHandle.invokeMethod("executeQuery",e?.toJSON(),t),i=d.fromJSON(r);return this._ensureLayerOnFeatures(i),i}async executeQueryForIds(e,t){return await this._workerHandle.invokeMethod("executeQueryForIds",e?.toJSON(),t)}async executeQueryForCount(e,t){return await this._workerHandle.invokeMethod("executeQueryForCount",e?.toJSON(),t)}async executeQueryForExtent(e,t){const{count:r,extent:i}=await this._workerHandle.invokeMethod("executeQueryForExtent",e?.toJSON(),t);return{count:r,extent:w.fromJSON(i)}}async executeQueryForLatestObservations(e,t){const r=await this._workerHandle.invokeMethod("executeQueryForLatestObservations",e?.toJSON(),t),i=d.fromJSON(r);return this._ensureLayerOnFeatures(i),i}_ensureLayerOnFeatures(e){const{layer:t}=this;for(const r of e.features)r.layer=t,r.sourceLayer=t}};o([a()],n.prototype,"updating",null),o([a({constructOnly:!0})],n.prototype,"schedule",void 0),o([a({constructOnly:!0})],n.prototype,"layer",void 0),o([a({constructOnly:!0})],n.prototype,"viewSpatialReference",void 0),o([a({constructOnly:!0})],n.prototype,"renderSpatialReference",void 0),o([a({constructOnly:!0})],n.prototype,"viewingMode",void 0),o([a({constructOnly:!0})],n.prototype,"dispatchRenderCommands",void 0),o([a()],n.prototype,"_workerUpdating",void 0),n=o([l("esri.views.3d.layers.graphics.pipeline.Feature3DPipelineWorkerHandle")],n);class _ extends g{constructor(t,r){super("Feature3DPipelineWorker","setup",{},t,{strategy:"dedicated",client:r})}}function H({id:e,lij:t,extent:r}){return{id:e,lij:t,extent:r}}function Q({id:e}){return e}let u=class extends m{constructor(e){super(e),this._renderer=null,this.graphicsQuery={queryForSymbologySnapping:(t,r)=>{throw new p("unsupported-symbology-snapping")},executeQuery:async(t,r)=>await this._workerHandle.executeQuery(t,r),executeQueryForIds:async(t,r)=>await this._workerHandle.executeQueryForIds(t,r),executeQueryForCount:async(t,r)=>await this._workerHandle.executeQueryForCount(t,r),executeQueryForExtent:async(t,r)=>await this._workerHandle.executeQueryForExtent(t,r),executeQueryForLatestObservations:async(t,r)=>await this._workerHandle.executeQueryForLatestObservations(t,r)},this.maximumNumberOfFeatures=1e3}initialize(){if(this.layerView.layer.geometryType!=="point")throw new p("unsupported-geometry-type",`${this.layerView.layer.geometryType} is not supported`);this.addResolvingPromise(this.setup())}async setup(){const{layer:e,view:t}=this.layerView,{spatialReference:r,renderSpatialReference:i,resourceController:c}=t,y=t.state.viewingMode;if(this._renderer=new v({view:t,layerUid:e.uid}),e.type!=="feature")throw new Error("Only FeatureLayer is supported");const h=new n({schedule:s=>c.immediate.schedule(s),layer:e,viewSpatialReference:r,renderSpatialReference:i,viewingMode:y,dispatchRenderCommands:s=>this._renderer.executeRenderCommands(s)});this._workerHandle=await h.when(),this.addHandles([this.layerView.view.featureTiles.addClient(),f(()=>this.layerView.view.featureTiles.tiles,"change",s=>{this._workerHandle.onTileTreeChange(s)},{onListenerAdd:s=>this._workerHandle.onTileTreeChange({added:s.toArray(),removed:[]}),onListenerRemove:s=>this._workerHandle.onTileTreeChange({added:[],removed:s.toArray()})})])}get legendEnabled(){return!1}get hasAllFeatures(){return!1}get hasAllFeaturesInView(){return!1}get hasFullGeometries(){return!1}get symbologySnappingSupported(){return!1}get scaleVisibilitySuspended(){return!1}get suspendInfo(){return{}}get updating(){return this._workerHandle.updating}get dataUpdating(){return!1}get updatePolicy(){return x.ASYNC}get maximumNumberOfFeaturesExceeded(){return!1}get updatingProgressValue(){return 1}get usedMemory(){return 100}get unloadedMemory(){return 0}get ignoresMemoryFactor(){return!0}get performanceInfo(){return new O(new F(this.usedMemory,0,0,this.maximumNumberOfFeatures,0,null),0,0,!0,"tiles","n/a")}get suspendResumeExtentMode(){return"computed"}forEachGraphic(e){}findGraphic(e){return null}highlight(e){return S}maskOccludee(e){return k()}async whenGraphicBounds(e,t){return null}computeAttachmentOrigin(e,t){return null}elevationAlignPointsInFeatures(e,t){throw new p("unsupported-elevation-alignment")}async doRefresh(e){}setVisibility(e,t){}getMissingAttributesForFeature(e){return null}getHydratedGeometry(e){return null}};o([a()],u.prototype,"layerView",void 0),o([a()],u.prototype,"updating",null),u=o([l("esri.views.3d.layers.graphics.pipeline.Feature3DPipeline")],u);export{u as Feature3DPipeline};
