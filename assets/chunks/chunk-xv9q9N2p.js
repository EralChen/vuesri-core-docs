import{q as S,hy as d,cD as r,cE as u,cC as h,a1 as b,$ as c,a0 as o,a2 as g,hz as v,cN as y}from"./chunk-nmd5K2Af.js";import{d as z}from"./chunk-ep5d_rzr.js";import"./chunk-vBrfeuUR.js";let p=class extends z{constructor(a){super(a)}getTiles(){const a=this.lv.getVisibleNodes(),t=this.view.renderSpatialReference,i=this.nodeSR;return a.map(l=>j(l,t,i)).filter(S).sort((l,s)=>l.lij[0]===s.lij[0]?l.label>s.label?-1:1:l.lij[0]-s.lij[0])}};function j(a,t,i){const l=a.serviceObbInIndexSR;if(l==null||t==null)return null;d(n,l.quaternion),r(e,l.center),u(e,i,0,e,t,0,1),n[12]=e[0],n[13]=e[1],n[14]=e[2];const s=[[],[],[]];h(e,l.halfSize,n),u(e,t,0,e,i,0,1),s[0].push([e[0],e[1]]),r(e,l.halfSize),e[0]=-e[0],h(e,e,n),u(e,t,0,e,i,0,1),s[0].push([e[0],e[1]]),r(e,l.halfSize),e[0]=-e[0],e[1]=-e[1],h(e,e,n),u(e,t,0,e,i,0,1),s[0].push([e[0],e[1]]),r(e,l.halfSize),e[1]=-e[1],h(e,e,n),u(e,t,0,e,i,0,1),s[0].push([e[0],e[1]]),s[1].push(s[0][0]),s[1].push(s[0][1]),r(e,l.halfSize),e[0]=-e[0],e[2]=-e[2],h(e,e,n),u(e,t,0,e,i,0,1),s[1].push([e[0],e[1]]),r(e,l.halfSize),e[2]=-e[2],h(e,e,n),u(e,t,0,e,i,0,1),s[1].push([e[0],e[1]]),s[2].push(s[0][0]),s[2].push(s[0][3]),r(e,l.halfSize),e[1]=-e[1],e[2]=-e[2],h(e,e,n),u(e,t,0,e,i,0,1),s[2].push([e[0],e[1]]),s[2].push(s[1][3]);const f=new b({rings:s,spatialReference:i});return{lij:[a.level,a.childCount,0],label:a.id,geometry:f}}c([o({constructOnly:!0})],p.prototype,"lv",void 0),c([o({constructOnly:!0})],p.prototype,"nodeSR",void 0),p=c([g("esri.views.3d.layers.support.I3STreeDebugger")],p);const n=v(),e=y();export{p as I3STreeDebugger};
