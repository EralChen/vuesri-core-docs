import{bn as y,E as f,hg as H,g_ as M,h4 as u,lV as w,lW as V,bd as C,lv as S,g$ as $,lw as z,ha as N,h2 as T,hb as j,h7 as v,h6 as b,h8 as x,hd as A}from"./chunk-YzRi88Dj.js";import{u as D}from"./chunk-mQ0J7OJ8.js";import"./chunk-DZ3w8ZOu.js";import"./chunk-BX1wMDvx.js";import"./chunk-DlgRifwZ.js";import"./chunk-MXvXirnR.js";import"./chunk-Clcwg9Qm.js";import"./chunk-CVnttSzt.js";import"./chunk-BlTBh7Wn.js";import"./chunk-DltoMSe1.js";import"./chunk-C9tqeO9j.js";import"./chunk-BkUj7kCJ.js";import"./chunk-lA_W8v3a.js";import"./chunk-CheEsZui.js";import"./chunk-CLQIQQkk.js";import"./chunk-CD3FIDfI.js";import"./chunk-DjXdGIkr.js";import"./chunk-BeMirVWN.js";import"./chunk-CtOsnhEP.js";import"./chunk-Dsi4UQrI.js";import"./chunk-D83kxBTm.js";import"./chunk-CMTIf1CS.js";import"./chunk-DhQzXLKM.js";import"./chunk-Dw_nTs4K.js";import"./chunk-FEB8T15a.js";import"./chunk-BRnY4uVr.js";import"./chunk--uKKWstj.js";import"./chunk-Bv-gq04m.js";import"./chunk-DNuFRK75.js";import"./chunk-BBWE_Ghm.js";import"./chunk-CpRg--ys.js";import"./chunk-CvEYJb1U.js";import"./chunk-CyteEnia.js";import"./chunk-DunbwQDX.js";import"./chunk-CFGc4D18.js";import"./chunk-CfNfXr3t.js";import"./chunk-B40jiAhY.js";import"./chunk-BwNtFsQb.js";import"./chunk-BVXbP2w4.js";const F=(m,g)=>{const c=new y({color:[255,0,0],size:10,style:"circle",outline:{color:[255,255,255],width:2}}),l=new y({color:[255,0,0],size:10,style:"circle",outline:{color:[255,255,255],width:2}}),t=D(),s=new S,o=new f({symbol:c}),r=new f({symbol:l}),p=H();function P(){const e=u(m);if(!e){console.error("Graphic is not defined");return}const d=e.geometry,R=d.centroid;o.geometry=R,t.graphics.add(o);const _=d.getPoint(0,Math.floor(d.rings[0].length/12));r.geometry=_,t.graphics.add(r);const k=t.on("drag",i=>{p.value&&i.stopPropagation()});s.add(k);const B=t.on("pointer-move",i=>{if(p.value===o){const n=t.toMap({x:i.x,y:i.y});o.geometry=n,e.geometry=new w({...e.geometry,center:n,radius:e.geometry.radius,radiusUnit:e.geometry.radiusUnit});const a=e.geometry.getPoint(0,Math.floor(e.geometry.rings[0].length/12));r.geometry=a}if(p.value===r){const n=t.toMap({x:i.x,y:i.y});r.geometry=n;const a=o.geometry,G=V(new C({latitude:a.latitude,longitude:a.longitude,spatialReference:t.spatialReference}),new C({longitude:n.longitude,latitude:n.latitude,spatialReference:t.spatialReference}),"meters");e.geometry=new w({...e.geometry,center:a,radius:G,radiusUnit:"meters"})}});s.add(B);const U=t.on("pointer-down",i=>{t.hitTest(i).then(n=>{if(n.results.length){const a=n.results[0].graphic;p.value=a}})}),E=t.on("pointer-up",()=>{p.value=void 0});s.add(U),s.add(E)}function h(){s.removeAll(),t.graphics.remove(o),t.graphics.remove(r)}return M(h),{start:P,complete:h}},Ut=$({__name:"update",props:{graphic:{type:Object,default:void 0}},setup(m){const g=m,c=z(()=>g.graphic),{start:l,complete:t}=F(c);return(s,o)=>{const r=N("ElButton");return T(),j(A,null,[v(r,{onClick:u(l)},{default:b(()=>o[0]||(o[0]=[x(" Start ")])),_:1},8,["onClick"]),v(r,{onClick:u(t)},{default:b(()=>o[1]||(o[1]=[x(" Complate ")])),_:1},8,["onClick"])],64)}}});export{Ut as _};
