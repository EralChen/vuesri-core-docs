import{V as k}from"./chunk-8qjBjNgv.js";import{gZ as B,h7 as S,h8 as N,h0 as T,h9 as j,h6 as a,h2 as s,h4 as y,h5 as A,ha as D,hb as F,cJ as v}from"./chunk-5cgByRBI.js";import{V as U,b as z,u as V}from"./chunk-ABk-8O9b.js";import{u as I}from"./chunk-mnNLVLmE.js";import"./chunk-Px56PspP.js";import"./chunk-E5BRPeYu.js";import"./chunk-pCqGjxAI.js";import"./chunk-zSey9Ooj.js";import"./chunk-h-6BO8IB.js";import"./chunk-xAN4VzPO.js";import"./chunk-UKZSLdqr.js";import"./chunk-WSF21JF0.js";import"./chunk-yZafP3rf.js";import"./chunk-H62H84bQ.js";import"./chunk-x_uP2gs7.js";import"./chunk-CuAaMpbW.js";import"./chunk-9fCAoXev.js";import"./chunk-at0AWBwu.js";import"./chunk-ahoVFfdr.js";import"./chunk-vVb9o76x.js";import"./chunk-xrk-kNOH.js";import"./chunk-pwJAAE4U.js";import"./chunk-n27tu1zc.js";import{V as W}from"./chunk-O7qZ5nAO.js";import"./chunk-Ow-0ZicZ.js";import"./chunk-n41jAy5X.js";import"./chunk-puQ8N500.js";import"./chunk-DLXyH4A4.js";import"./chunk-Kr9URs_A.js";import"./chunk-EL967GvW.js";import"./chunk-sPUU7m6j.js";import"./chunk-vI5OQCLh.js";import"./chunk-TdOen-x3.js";import"./chunk-FmJXFfP7.js";import"./chunk-e_xIS2Vw.js";import"./chunk-bCfOp0ta.js";import"./chunk-3EAHv1mu.js";import"./chunk-d0kHfygp.js";import"./chunk-Ysh6IYsX.js";import"./chunk-z09cFCry.js";import"./chunk-tdkwsFTd.js";import{V as q,s as J}from"./chunk-DGzo3AFt.js";import"./chunk-ZKUTSqCA.js";const K={class:"bg-white pa-m"},L="https://ows.terrestris.de/osm/service?width=1072&height=1072&bbox=-20037508.342787%2C-20037508.342781033%2C20037508.342781033%2C20037508.342787&srs=EPSG%3A900913&format=image%2Fpng&request=GetMap&service=WMS&styles=&transparent=TRUE&version=1.1.1&layers=OSM-WMS&_ts=1712122845938",Dt=B({__name:"jpg-layer",setup(O){const u="/vuesri/data/1.jpg",_="/vuesri/images/thanks/zzlogo.png",i=S({gridRatio:100,url:u}),R=[{templateType:"VkfInputNumber",label:"GridRatio",prop:"gridRatio"},{templateType:"VkfRadio",label:"Url",prop:"url",options:[{label:"Service1MB",value:L},{label:"2MB",value:u},{label:"50KB",value:_}]}],t=I();class b{}class G{constructor(e=100){this.gridRatio=100,this.grids=[],this.gridRatio=e,this.createGrid()}createGrid(){const e=Math.round(t.width/this.gridRatio),o=Math.round(t.height/this.gridRatio),n=(t.extent.xmax-t.extent.xmin)/e,x=(t.extent.ymax-t.extent.ymin)/o;this.grids=[];let p,h,l,f;for(let c=0;c<e;c++){p=t.extent.xmin+n*c,h=p+n;for(let d=0;d<o;d++){l=t.extent.ymin+x*d,f=l+x;const E=new v({xmin:p,ymin:l,xmax:h,ymax:f,spatialReference:t.spatialReference}),w=new b;w.extent=E,this.grids.push(w)}}}}const g=r=>new z({image:r,georeference:new V({extent:new v({xmin:-20037508342787e-6,ymin:-20037508342781033e-9,xmax:20037508342781033e-9,ymax:20037508342787e-6,spatialReference:{wkid:3857}})})}),M=Array.from({length:1},()=>g(i.url)),m=new U({elements:M}),C=()=>{const r=new G(i.gridRatio);m.elements.removeAll(),window.alert(`生成网格${r.grids.length}`),r.grids.forEach(e=>{const o=g(i.url);o.georeference=new V({extent:e.extent}),m.elements.add(o)})};return(r,e)=>{const o=N("ElButton");return T(),j(F,null,[a(s(k),{source:s(m)},null,8,["source"]),a(s(W),null,{default:y(()=>[D("div",K,[a(s(q),{"form-items":R,data:i,onSetData:e[0]||(e[0]=n=>s(J)(i,n))},null,8,["data"]),a(o,{onClick:C},{default:y(()=>[A(" Grid ")]),_:1})])]),_:1})],64)}}});export{Dt as _};
