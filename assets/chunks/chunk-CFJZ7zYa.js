import{V as k}from"./chunk-DRgbAUay.js";import{g$ as B,h9 as S,ha as N,h2 as T,hb as j,h7 as a,h4 as s,h6 as y,hc as A,h8 as D,hd as F,cL as v}from"./chunk-CGsGeN7j.js";import{V as U,b as z,u as V}from"./chunk-C3zIjixL.js";import{u as I}from"./chunk-BU0sQgI5.js";import"./chunk-Dr1sALog.js";import"./chunk-Bml1PvVS.js";import"./chunk-_zdR56FH.js";import"./chunk-CWLsUwCD.js";import"./chunk-CZd7Zndo.js";import"./chunk-DlX-zbf9.js";import"./chunk-DyQGuRCQ.js";import"./chunk-Dy98_7B9.js";import"./chunk-BqaLBfJX.js";import"./chunk-D-0JPQv-.js";import"./chunk-CkzawzMq.js";import"./chunk-C9yBD7Cb.js";import"./chunk-C7XbWWq1.js";import"./chunk-C7q-KW3o.js";import"./chunk-9zVPGVP4.js";import"./chunk-C_utqa9G.js";import"./chunk-CW_cxDcB.js";import"./chunk-B3snt2sY.js";import"./chunk-CIQxHwnF.js";import{V as L}from"./chunk-DyD8uEb4.js";import"./chunk-DB3wHNNz.js";import"./chunk-DfWzvhe_.js";import"./chunk-DI0FmvNn.js";import"./chunk-DViVixDW.js";import"./chunk-DPKLMxd7.js";import"./chunk-CiCHXmT9.js";import"./chunk-D9DD00pu.js";import"./chunk-DLws_ICa.js";import"./chunk-XjyAEPTQ.js";import"./chunk-quGueftP.js";import"./chunk-ByqNhg-m.js";import"./chunk-CyhEnEbS.js";import"./chunk-4i9HqfK4.js";import"./chunk-gIQ2rMZF.js";import"./chunk-0FpZiehd.js";import"./chunk-DPAEcZdJ.js";import"./chunk-tqA_bKyq.js";import{V as W,s as $}from"./chunk-cIxBT2J0.js";import"./chunk-DDsy5b_a.js";const q={class:"bg-white pa-m"},K="https://ows.terrestris.de/osm/service?width=1072&height=1072&bbox=-20037508.342787%2C-20037508.342781033%2C20037508.342781033%2C20037508.342787&srs=EPSG%3A900913&format=image%2Fpng&request=GetMap&service=WMS&styles=&transparent=TRUE&version=1.1.1&layers=OSM-WMS&_ts=1712122845938",Dt=B({__name:"jpg-layer",setup(O){const u="/vuesri/data/1.jpg",R="/vuesri/images/thanks/zzlogo.png",i=S({gridRatio:100,url:u}),_=[{templateType:"VkfInputNumber",label:"GridRatio",prop:"gridRatio"},{templateType:"VkfRadio",label:"Url",prop:"url",options:[{label:"Service1MB",value:K},{label:"2MB",value:u},{label:"50KB",value:R}]}],e=I();class b{}class G{constructor(t=100){this.gridRatio=100,this.grids=[],this.gridRatio=t,this.createGrid()}createGrid(){const t=Math.round(e.width/this.gridRatio),o=Math.round(e.height/this.gridRatio),n=(e.extent.xmax-e.extent.xmin)/t,x=(e.extent.ymax-e.extent.ymin)/o;this.grids=[];let p,h,l,f;for(let c=0;c<t;c++){p=e.extent.xmin+n*c,h=p+n;for(let d=0;d<o;d++){l=e.extent.ymin+x*d,f=l+x;const E=new v({xmin:p,ymin:l,xmax:h,ymax:f,spatialReference:e.spatialReference}),w=new b;w.extent=E,this.grids.push(w)}}}}const g=r=>new z({image:r,georeference:new V({extent:new v({xmin:-20037508342787e-6,ymin:-20037508342781033e-9,xmax:20037508342781033e-9,ymax:20037508342787e-6,spatialReference:{wkid:3857}})})}),M=Array.from({length:1},()=>g(i.url)),m=new U({elements:M}),C=()=>{const r=new G(i.gridRatio);m.elements.removeAll(),window.alert(`生成网格${r.grids.length}`),r.grids.forEach(t=>{const o=g(i.url);o.georeference=new V({extent:t.extent}),m.elements.add(o)})};return(r,t)=>{const o=N("ElButton");return T(),j(F,null,[a(s(k),{source:s(m)},null,8,["source"]),a(s(L),null,{default:y(()=>[A("div",q,[a(s(W),{"form-items":_,data:i,onSetData:t[0]||(t[0]=n=>s($)(i,n))},null,8,["data"]),a(o,{onClick:C},{default:y(()=>t[1]||(t[1]=[D(" Grid ")])),_:1})])]),_:1})],64)}}});export{Dt as _};
