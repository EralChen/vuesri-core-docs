import{a5 as b,hB as F,an as m,eB as E,hC as $,hD as V,hE as C,bI as s,a1 as o,a2 as a,hF as D,a0 as c,a4 as I}from"./chunk-CMhy9c9G.js";import{o as A,i as G}from"./chunk-BWIB856i.js";import{i as h,r as P,n as d}from"./chunk-e9sdRQXQ.js";import"./chunk-ByM7454y.js";/* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              */import"./chunk-CH5E4Uft.js";let n=class extends b{get availability(){return 1}get _snappingElevationAligner(){const{view:e}=this,{layer:t}=this.layerSource,i=e!=null&&e.type==="3d";if(!i||t.type==="subtype-group")return h();const r=async(p,l)=>(await D(e.whenLayerView(t),l)).elevationAlignPointsInFeatures(p,l);return h(i,{elevationInfo:t.elevationInfo,alignPointsInFeatures:r})}get _snappingElevationFilter(){const{view:e}=this,t=e!=null&&e.type==="3d"&&this.layerSource.layer.type!=="subtype-group";return P(t)}get _symbologySnappingFetcher(){const{view:e}=this,{layer:t}=this.layerSource;return e!=null&&e.type==="3d"&&t.type!=="subtype-group"?d(this._symbologySnappingSupported,async(i,r)=>{const p=await e.whenLayerView(t);return s(r),p.queryForSymbologySnapping({candidates:i,spatialReference:e.spatialReference},r)}):d()}get _layerView3D(){const{view:e}=this;if(e==null||e.type==="2d")return null;const{layer:t}=this.layerSource;return e.allLayerViews.find(i=>i.layer===t)}get _symbologySnappingSupported(){return this._layerView3D!=null&&this._layerView3D.symbologySnappingSupported}initialize(){const{view:e}=this,{layer:t}=this.layerSource;e!=null&&e.type==="3d"&&t.type!=="subtype-group"&&this.addHandles([e.elevationProvider.on("elevation-change",({context:i})=>{const{elevationInfo:r}=t;F(i,r)&&this._snappingElevationAligner.notifyElevationSourceChange()}),m(()=>t.elevationInfo,()=>this._snappingElevationAligner.notifyElevationSourceChange(),c),m(()=>this._layerView3D!=null?this._layerView3D.layer?.renderer:null,()=>this._symbologySnappingFetcher.notifySymbologyChange(),c),E(()=>this._layerView3D?.layer,["edits","apply-edits","graphic-update"],()=>this._symbologySnappingFetcher.notifySymbologyChange())])}constructor(e){super(e),this.view=null,this.updating=!1,this._memoizedMakeGetGroundElevation=$(G)}refresh(){}async fetchCandidates(e,t){const{layer:i}=this.layerSource,r=i.source;if(!r?.querySnapping)return[];const p=V(i),l=C(e,this.view?.type??"2d",p),v=await r.querySnapping(l,{signal:t});s(t);const u=e.coordinateHelper.spatialReference,y=await this._snappingElevationAligner.alignCandidates(v.candidates,u,t);s(t);const g=await this._symbologySnappingFetcher.fetch(y,t);s(t);const S=g.length===0?y:[...y,...g],w=this._snappingElevationFilter.filter(l,S),_=this._memoizedMakeGetGroundElevation(this.view,u);return w.map(f=>A(f,_))}};o([a({constructOnly:!0})],n.prototype,"layerSource",void 0),o([a({constructOnly:!0})],n.prototype,"view",void 0),o([a()],n.prototype,"_snappingElevationAligner",null),o([a()],n.prototype,"_snappingElevationFilter",null),o([a()],n.prototype,"_symbologySnappingFetcher",null),o([a()],n.prototype,"_layerView3D",null),o([a()],n.prototype,"_symbologySnappingSupported",null),n=o([I("esri.views.interactive.snapping.featureSources.FeatureCollectionSnappingSource")],n);export{n as FeatureCollectionSnappingSource};
