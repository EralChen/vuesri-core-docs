import{fB as f,ck as y,fG as j,ko as m,fC as p,cV as R}from"./chunk-CMhy9c9G.js";import"./chunk-ByM7454y.js";/* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              */function F(e,o){const t=e.toJSON();return t.objectIds&&(t.objectIds=t.objectIds.join(",")),t.orderByFields&&(t.orderByFields=t.orderByFields.join(",")),t.outFields&&!o?.returnCountOnly?t.outFields.includes("*")?t.outFields="*":t.outFields=t.outFields.join(","):delete t.outFields,t.outSR&&(t.outSR=j(t.outSR)),t.dynamicDataSource&&(t.layer=JSON.stringify({source:t.dynamicDataSource}),delete t.dynamicDataSource),t}async function b(e,o,t){const i=await l(e,o,t),r=i.data,n=r.geometryType,a=r.spatialReference,s={};for(const c of r.relatedRecordGroups){const d={fields:void 0,objectIdFieldName:void 0,geometryType:n,spatialReference:a,hasZ:!!r.hasZ,hasM:!!r.hasM,features:c.relatedRecords};if(c.objectId!=null)s[c.objectId]=d;else for(const u of Object.keys(c))u!=="relatedRecords"&&(s[c[u]]=d)}return{...i,data:s}}async function h(e,o,t){const i=await l(e,o,t,{returnCountOnly:!0}),r=i.data,n={};for(const a of r.relatedRecordGroups)a.objectId!=null&&(n[a.objectId]=a.count);return{...i,data:n}}async function l(e,o,t={},i){const r=f({...e.query,f:"json",...i,...F(o,i)});return y(e.path+"/queryRelatedRecords",{...t,query:{...t.query,...r}})}async function ot(e,o,t){o=m.from(o);const i=p(e);return b(i,o,t).then(r=>{const n=r.data,a={};return Object.keys(n).forEach(s=>a[s]=R.fromJSON(n[s])),a})}async function rt(e,o,t){o=m.from(o);const i=p(e);return h(i,o,{...t}).then(r=>r.data)}export{ot as executeRelationshipQuery,rt as executeRelationshipQueryForCount};
