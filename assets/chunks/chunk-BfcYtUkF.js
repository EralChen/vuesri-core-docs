import{a1 as p,oy as f,a4 as u,oz as S,oA as y,oB as d,oC as i,oD as x,oE as O,oF as h,aH as n,oG as J,oH as N,aL as B,oI as P,oJ as g,oK as k,oL as w,oM as v,oN as b,oO as z,oP as D,oQ as T,oR as $,oS as F,kO as I}from"./chunk-CMhy9c9G.js";import"./chunk-ByM7454y.js";/* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              */var m;let l=m=class extends S{constructor(){super(...arguments),this.type="identity"}clone(){return new m}};p([f({IdentityXform:"identity"})],l.prototype,"type",void 0),l=m=p([u("esri.layers.support.rasterTransforms.IdentityTransform")],l);const E=l,G={GCSShiftXform:y,IdentityXform:E,PolynomialXform:d};function R(a){if(!a?.type)return null;const e=G[a?.type];if(e){const o=new e;return o.read(a),o}return null}class Ot{convertVectorFieldData(t){const e=i.fromJSON(t.pixelBlock),o=x(e,t.type);return Promise.resolve(o!=null?o.toJSON():null)}computeStatisticsHistograms(t){const e=i.fromJSON(t.pixelBlock),o=O(e);return Promise.resolve(o)}async decode(t){const e=await h(t.data,t.options);return e&&e.toJSON()}symbolize(t){t.pixelBlock=i.fromJSON(t.pixelBlock),t.extent=t.extent?n.fromJSON(t.extent):null;const e=this.symbolizer.symbolize(t);return Promise.resolve(e!=null?e.toJSON():null)}async updateSymbolizer(t){this.symbolizer=J.fromJSON(t.symbolizerJSON),t.histograms&&this.symbolizer?.rendererJSON.type==="rasterStretch"&&(this.symbolizer.rendererJSON.histograms=t.histograms)}async updateRasterFunction(t){this.rasterFunction=N(t.rasterFunctionJSON)}async process(t){const e=this.rasterFunction.process({extent:n.fromJSON(t.extent),primaryPixelBlocks:t.primaryPixelBlocks.map(o=>o!=null?i.fromJSON(o):null),primaryPixelSizes:t.primaryPixelSizes?.map(o=>o!=null?B.fromJSON(o):null),primaryRasterIds:t.primaryRasterIds});return e!=null?e.toJSON():null}stretch(t){const e=this.symbolizer.simpleStretch(i.fromJSON(t.srcPixelBlock),t.stretchParams);return Promise.resolve(e?.toJSON())}estimateStatisticsHistograms(t){const e=P(i.fromJSON(t.srcPixelBlock));return Promise.resolve(e)}split(t){const e=g(i.fromJSON(t.srcPixelBlock),t.tileSize,t.maximumPyramidLevel??0,t.useBilinear===!1);return e&&e.forEach((o,s)=>{e.set(s,o?.toJSON())}),Promise.resolve(e)}clipTile(t){const e=i.fromJSON(t.pixelBlock),o=k({...t,pixelBlock:e});return Promise.resolve(o?.toJSON())}async mosaicAndTransform(t){const e=t.srcPixelBlocks.map(c=>c?new i(c):null),o=w(e,t.srcMosaicSize,{blockWidths:t.blockWidths,alignmentInfo:t.alignmentInfo,clipOffset:t.clipOffset,clipSize:t.clipSize});let s,r=o;return t.coefs&&(r=v(o,t.destDimension,t.coefs,t.sampleSpacing,t.interpolation)),t.projectDirections&&t.gcsGrid&&(s=b(t.destDimension,t.gcsGrid),r=z(r,t.isUV?"vector-uv":"vector-magdir",s)),{pixelBlock:r?.toJSON(),localNorthDirections:s}}async createFlowMesh(t,e){const o={data:new Float32Array(t.flowData.buffer),mask:new Uint8Array(t.flowData.maskBuffer),width:t.flowData.width,height:t.flowData.height},{vertexData:s,indexData:r}=await D(t.meshType,t.simulationSettings,o,e.signal);return{result:{vertexBuffer:s.buffer,indexBuffer:r.buffer},transferList:[s.buffer,r.buffer]}}async getProjectionOffsetGrid(t){const e=n.fromJSON(t.projectedExtent),o=n.fromJSON(t.srcBufferExtent);let s=null;t.datumTransformationSteps&&(s=new T({steps:t.datumTransformationSteps})),(t.includeGCSGrid||$(e.spatialReference,o.spatialReference,s))&&await F();const r=t.rasterTransform?R(t.rasterTransform):null;return I({...t,projectedExtent:e,srcBufferExtent:o,datumTransformation:s,rasterTransform:r})}}export{Ot as default};
