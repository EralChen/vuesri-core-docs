import{aO as $,iS as O,iT as P,bI as D,iU as q,iV as E,iW as G,iX as U,iF as W,iY as A,a_ as B,bU as H}from"./chunk-CMhy9c9G.js";async function N(t,d,l,b,i){const{elevationProvider:p,renderCoordsHelper:r}=t,{elevationInfo:f}=d,{pointsInFeatures:S,spatialReference:u}=b,g=$.fromJSON(u),h=O(f,!0),y=await P(h,g,i);D(i);const c=[],e=new Set,s=new Set,a=new W,n=q(0,0,0,$.WGS84),o=new A,R=B();n.spatialReference=g;const F=t.elevationProvider.spatialReference??t.spatialReference;for(const{objectId:m,points:v}of S){const I=l(m);if(I==null){for(const w of v)c.push(w.z??0);e.add(m);continue}I.isDraped&&s.add(m);const j=I.graphic.geometry;a.setFromElevationInfo(E(j,f)),a.updateFeatureExpressionInfoContext(y,I.graphic,d);for(const{x:w,y:z,z:C}of v)n.x=w,n.y=z,n.z=C??0,await G(n,R,F,0,{signal:i}),U(R,p,a,r,o),c.push(o.z)}return{elevations:c,drapedObjectIds:s,failedObjectIds:e}}async function T(t,d,l){if(t==null||d.candidates.length===0)return x;const b=t.graphics3DGraphicsByObjectID??t.graphics3DGraphics,i=[],p=[],{renderer:r}=t,f=r!=null&&"arcadeRequired"in r&&r.arcadeRequired?H():null,S=async(e,{graphic:s,graphics3DSymbol:a})=>{const n=await f,o=await t.getRenderingInfoAsync(s,r,n,{signal:l});return o==null?[]:a.queryForSnapping(e,g,o,l)},{candidates:u,spatialReference:g}=d;for(let e=0;e<u.length;++e){const s=u[e],{objectId:a}=s,n=typeof a=="number"?b?.get(a):void 0;if(n==null)continue;const{graphics3DSymbol:o}=n;o.symbologySnappingSupported&&(i.push(S(s,n)),p.push(e))}if(i.length===0)return x;const h=await Promise.all(i);D(l);const y=[],c=[];for(let e=0;e<h.length;++e){const s=h[e],a=p[e];for(const n of s)y.push(n),c.push(a)}return{candidates:y,sourceCandidateIndices:c}}const x={candidates:[],sourceCandidateIndices:[]};export{N as m,T as r};
