import{g1 as Y}from"./chunk-YzRi88Dj.js";import"./chunk-ByM7454y.js";/* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              */var A={};A.defaultNoDataValue=Y(-1/0),A.decode=function(i,t){var o=(t=t||{}).encodedMaskData||t.encodedMaskData===null,e=E(i,t.inputOffset||0,o),c=t.noDataValue!=null?Y(t.noDataValue):A.defaultNoDataValue,n=F(e,t.pixelType||Float32Array,t.encodedMaskData,c,t.returnMask),r={width:e.width,height:e.height,pixelData:n.resultPixels,minValue:e.pixels.minValue,maxValue:e.pixels.maxValue,noDataValue:c};return n.resultMask&&(r.maskData=n.resultMask),t.returnEncodedMask&&e.mask&&(r.encodedMaskData=e.mask.bitset?e.mask.bitset:null),t.returnFileInfo&&(r.fileInfo=b(e,c),t.computeUsedBitDepths&&(r.fileInfo.bitDepths=D(e))),r};var F=function(i,t,o,e,c){var n,r,d=0,u=i.pixels.numBlocksX,k=i.pixels.numBlocksY,y=Math.floor(i.width/u),v=Math.floor(i.height/k),h=2*i.maxZError;o=o||(i.mask?i.mask.bitset:null),n=new t(i.width*i.height),c&&o&&(r=new Uint8Array(i.width*i.height));for(var p,g,x=new Float32Array(y*v),M=0;M<=k;M++){var B=M!==k?v:i.height%k;if(B!==0)for(var I=0;I<=u;I++){var s=I!==u?y:i.width%u;if(s!==0){var P,a,m,w,l=M*i.width*v+I*y,U=i.width-s,f=i.pixels.blocks[d];if(f.encoding<2?(f.encoding===0?P=f.rawData:(S(f.stuffedData,f.bitsPerPixel,f.numValidPixels,f.offset,h,x,i.pixels.maxValue),P=x),a=0):m=f.encoding===2?0:f.offset,o)for(g=0;g<B;g++){for(7&l&&(w=o[l>>3],w<<=7&l),p=0;p<s;p++)7&l||(w=o[l>>3]),128&w?(r&&(r[l]=1),n[l++]=f.encoding<2?P[a++]:m):(r&&(r[l]=0),n[l++]=e),w<<=1;l+=U}else if(f.encoding<2)for(g=0;g<B;g++){for(p=0;p<s;p++)n[l++]=P[a++];l+=U}else for(g=0;g<B;g++)if(n.fill)n.fill(m,l,l+s),l+=s+U;else{for(p=0;p<s;p++)n[l++]=m;l+=U}if(f.encoding===1&&a!==f.numValidPixels)throw"Block and Mask do not match";d++}}}return{resultPixels:n,resultMask:r}},b=function(i,t){return{fileIdentifierString:i.fileIdentifierString,fileVersion:i.fileVersion,imageType:i.imageType,height:i.height,width:i.width,maxZError:i.maxZError,eofOffset:i.eofOffset,mask:i.mask?{numBlocksX:i.mask.numBlocksX,numBlocksY:i.mask.numBlocksY,numBytes:i.mask.numBytes,maxValue:i.mask.maxValue}:null,pixels:{numBlocksX:i.pixels.numBlocksX,numBlocksY:i.pixels.numBlocksY,numBytes:i.pixels.numBytes,maxValue:i.pixels.maxValue,minValue:i.pixels.minValue,noDataValue:t}}},D=function(i){for(var t=i.pixels.numBlocksX*i.pixels.numBlocksY,o={},e=0;e<t;e++){var c=i.pixels.blocks[e];c.encoding===0?o.float32=!0:c.encoding===1?o[c.bitsPerPixel]=!0:o[0]=!0}return Object.keys(o)},E=function(i,t,o){var e={},c=new Uint8Array(i,t,10);if(e.fileIdentifierString=String.fromCharCode.apply(null,c),e.fileIdentifierString.trim()!="CntZImage")throw"Unexpected file identifier string: "+e.fileIdentifierString;t+=10;var n=new DataView(i,t,24);if(e.fileVersion=n.getInt32(0,!0),e.imageType=n.getInt32(4,!0),e.height=n.getUint32(8,!0),e.width=n.getUint32(12,!0),e.maxZError=n.getFloat64(16,!0),t+=24,!o)if(n=new DataView(i,t,16),e.mask={},e.mask.numBlocksY=n.getUint32(0,!0),e.mask.numBlocksX=n.getUint32(4,!0),e.mask.numBytes=n.getUint32(8,!0),e.mask.maxValue=n.getFloat32(12,!0),t+=16,e.mask.numBytes>0){var r=new Uint8Array(Math.ceil(e.width*e.height/8)),d=(n=new DataView(i,t,e.mask.numBytes)).getInt16(0,!0),u=2,k=0;do{if(d>0)for(;d--;)r[k++]=n.getUint8(u++);else{var y=n.getUint8(u++);for(d=-d;d--;)r[k++]=y}d=n.getInt16(u,!0),u+=2}while(u<e.mask.numBytes);if(d!==-32768||k<r.length)throw"Unexpected end of mask RLE encoding";e.mask.bitset=r,t+=e.mask.numBytes}else e.mask.numBytes|e.mask.numBlocksY|e.mask.maxValue||(r=new Uint8Array(Math.ceil(e.width*e.height/8)),e.mask.bitset=r);n=new DataView(i,t,16),e.pixels={},e.pixels.numBlocksY=n.getUint32(0,!0),e.pixels.numBlocksX=n.getUint32(4,!0),e.pixels.numBytes=n.getUint32(8,!0),e.pixels.maxValue=n.getFloat32(12,!0),t+=16;var v=e.pixels.numBlocksX,h=e.pixels.numBlocksY,p=v+(e.width%v>0?1:0),g=h+(e.height%h>0?1:0);e.pixels.blocks=new Array(p*g);for(var x=1e9,M=0,B=0;B<g;B++)for(var I=0;I<p;I++){var s=0,P=i.byteLength-t;n=new DataView(i,t,Math.min(10,P));var a={};e.pixels.blocks[M++]=a;var m=n.getUint8(0);if(s++,a.encoding=63&m,a.encoding>3)throw"Invalid block encoding ("+a.encoding+")";if(a.encoding!==2){if(m!==0&&m!==2){if(m>>=6,a.offsetType=m,m===2)a.offset=n.getInt8(1),s++;else if(m===1)a.offset=n.getInt16(1,!0),s+=2;else{if(m!==0)throw"Invalid block offset type";a.offset=n.getFloat32(1,!0),s+=4}if(x=Math.min(a.offset,x),a.encoding===1)if(m=n.getUint8(s),s++,a.bitsPerPixel=63&m,m>>=6,a.numValidPixelsType=m,m===2)a.numValidPixels=n.getUint8(s),s++;else if(m===1)a.numValidPixels=n.getUint16(s,!0),s+=2;else{if(m!==0)throw"Invalid valid pixel count type";a.numValidPixels=n.getUint32(s,!0),s+=4}}var w;if(t+=s,a.encoding!=3){if(a.encoding===0){var l=(e.pixels.numBytes-1)/4;if(l!==Math.floor(l))throw"uncompressed block has invalid length";w=new ArrayBuffer(4*l),new Uint8Array(w).set(new Uint8Array(i,t,4*l));for(var U=new Float32Array(w),f=0;f<U.length;f++)x=Math.min(x,U[f]);a.rawData=U,t+=4*l}else if(a.encoding===1){var V=Math.ceil(a.numValidPixels*a.bitsPerPixel/8),X=Math.ceil(V/4);w=new ArrayBuffer(4*X),new Uint8Array(w).set(new Uint8Array(i,t,V)),a.stuffedData=new Uint32Array(w),t+=V}}}else t++,x=Math.min(x,0)}return e.pixels.minValue=x,e.eofOffset=t,e},S=function(i,t,o,e,c,n,r){var d,u,k,y=(1<<t)-1,v=0,h=0,p=Math.ceil((r-e)/c),g=4*i.length-Math.ceil(t*o/8);for(i[i.length-1]<<=8*g,d=0;d<o;d++){if(h===0&&(k=i[v++],h=32),h>=t)u=k>>>h-t&y,h-=t;else{var x=t-h;u=(k&y)<<x&y,u+=(k=i[v++])>>>(h=32-x)}n[d]=u<p?e+u*c:r}return n};const T=A.decode;class O{_decode(t){const o=T(t.buffer,t.options);return Promise.resolve({result:o,transferList:[o.pixelData.buffer]})}}function he(){return new O}export{he as default};
