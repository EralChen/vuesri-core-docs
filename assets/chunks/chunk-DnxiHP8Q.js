import{dH as O,s as I,dG as Q,gj as Z,gi as A,dI as k,gl as C,dJ as $,gk as P,gm as E,fF as F,gn as _,go as w,gp as G,gq as H,dO as S,du as v}from"./chunk-CMhy9c9G.js";import{t as L,n as W}from"./chunk-BmFjqQA3.js";import{m as z}from"./chunk-T1pEzEga.js";import{V as U}from"./chunk-Dcn2W9Gp.js";import{j as B,f as h,p as T,d as j,y as D}from"./chunk-DnHOHhsE.js";import"./chunk-ByM7454y.js";/* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              */import"./chunk-CUOUzi7D.js";import"./chunk-_StMwdLk.js";import"./chunk-D1fDIYeK.js";import"./chunk-8Y4oRjrd.js";import"./chunk-CvgiXnaQ.js";import"./chunk-DcUppS74.js";import"./chunk-YA9YD_OS.js";import"./chunk-O5eRSE6e.js";const J=S,N={xmin:-180,ymin:-90,xmax:180,ymax:90,spatialReference:S},V={hasAttachments:!1,capabilities:"query, editing, create, delete, update",useStandardizedQueries:!0,supportsCoordinatesQuantization:!0,supportsReturningQueryGeometry:!0,advancedQueryCapabilities:{supportsQueryAttachments:!1,supportsStatistics:!0,supportsPercentileStatistics:!0,supportsReturningGeometryCentroid:!0,supportsQueryWithDistance:!0,supportsDistinct:!0,supportsReturningQueryExtent:!0,supportsReturningGeometryProperties:!1,supportsHavingClause:!0,supportsOrderBy:!0,supportsPagination:!0,supportsQueryWithResultType:!0,supportsSqlExpression:!0,supportsDisjointSpatialRel:!0,supportsQueryWithCacheHint:!0}};function K(g){return v(g)?g.z!=null:!!g.hasZ}function X(g){return v(g)?g.m!=null:!!g.hasM}class ze{constructor(){this._queryEngine=null,this._nextObjectId=null}destroy(){this._queryEngine?.destroy(),this._queryEngine=this._createDefaultAttributes=null}async load(e){const s=[],{features:a}=e,n=this._inferLayerProperties(a,e.fields),l=e.fields||[],u=e.hasM!=null?e.hasM:!!n.hasM,c=e.hasZ!=null?e.hasZ:!!n.hasZ,p=!e.spatialReference&&!n.spatialReference,d=p?J:e.spatialReference||n.spatialReference,y=p?N:null,f=e.geometryType||n.geometryType,o=!f;let t=e.objectIdField||n.objectIdField,r=e.timeInfo;const m=new O(l);if(!o&&(p&&s.push({name:"feature-layer:spatial-reference-not-found",message:"Spatial reference not provided or found in features. Defaults to WGS84"}),!f))throw new I("feature-layer:missing-property","geometryType not set and couldn't be inferred from the provided features");if(!t)throw new I("feature-layer:missing-property","objectIdField not set and couldn't be found in the provided fields");if(n.objectIdField&&t!==n.objectIdField&&(s.push({name:"feature-layer:duplicated-oid-field",message:`Provided objectIdField "${t}" doesn't match the field name "${n.objectIdField}", found in the provided fields`}),t=n.objectIdField),t&&!n.objectIdField){const i=m.get(t);i?(t=i.name,i.type="esriFieldTypeOID",i.editable=!1,i.nullable=!1):l.unshift({alias:t,name:t,type:"esriFieldTypeOID",editable:!1,nullable:!1})}for(const i of l){if(i.name==null&&(i.name=i.alias),i.alias==null&&(i.alias=i.name),!i.name)throw new I("feature-layer:invalid-field-name","field name is missing",{field:i});if(i.name===t&&(i.type="esriFieldTypeOID"),!Q.jsonValues.includes(i.type))throw new I("feature-layer:invalid-field-type",`invalid type for field "${i.name}"`,{field:i});i.length==null&&(i.length=Z(i))}const b={};for(const i of l)if(i.type!=="esriFieldTypeOID"&&i.type!=="esriFieldTypeGlobalID"){const q=A(i);q!==void 0&&(b[i.name]=q)}if(r){if(r.startTimeField){const i=m.get(r.startTimeField);i?(r.startTimeField=i.name,i.type="esriFieldTypeDate"):r.startTimeField=null}if(r.endTimeField){const i=m.get(r.endTimeField);i?(r.endTimeField=i.name,i.type="esriFieldTypeDate"):r.endTimeField=null}if(r.trackIdField){const i=m.get(r.trackIdField);i?r.trackIdField=i.name:(r.trackIdField=null,s.push({name:"feature-layer:invalid-timeInfo-trackIdField",message:"trackIdField is missing",details:{timeInfo:r}}))}r.startTimeField||r.endTimeField||(s.push({name:"feature-layer:invalid-timeInfo",message:"startTimeField and endTimeField are missing or invalid",details:{timeInfo:r}}),r=null)}const x=m.dateFields.length?{timeZoneIANA:e.dateFieldsTimeZone??k}:null;this._createDefaultAttributes=C(b,t);const R={warnings:s,featureErrors:[],layerDefinition:{...V,drawingInfo:$(f),templates:P(b),extent:y,geometryType:f,objectIdField:t,fields:l,hasZ:c,hasM:u,timeInfo:r,dateFieldsTimeReference:x},assignedObjectIds:{}};if(this._queryEngine=new U({fieldsIndex:O.fromLayerJSON({fields:l,timeInfo:r,dateFieldsTimeReference:x}),geometryType:f,hasM:u,hasZ:c,objectIdField:t,spatialReference:d,featureStore:new z({geometryType:f,hasM:u,hasZ:c}),timeInfo:r}),!a?.length)return this._nextObjectId=L,R;const M=W(t,a);return this._nextObjectId=M+1,await E(a,d),this._loadInitialFeatures(R,a)}async applyEdits(e){const{spatialReference:s,geometryType:a}=this._queryEngine;return await Promise.all([B(s,a),E(e.adds,s),E(e.updates,s)]),this._applyEdits(e)}queryFeatures(e,s={}){return this._queryEngine.executeQuery(e,s.signal)}queryFeatureCount(e,s={}){return this._queryEngine.executeQueryForCount(e,s.signal)}queryObjectIds(e,s={}){return this._queryEngine.executeQueryForIds(e,s.signal)}queryExtent(e,s={}){return this._queryEngine.executeQueryForExtent(e,s.signal)}querySnapping(e,s={}){return this._queryEngine.executeQueryForSnapping(e,s.signal)}_inferLayerProperties(e,s){let a,n,l=null,u=null,c=null;for(const p of e){const d=p.geometry;if(d!=null&&(l||(l=F(d)),u||(u=d.spatialReference),a==null&&(a=K(d)),n==null&&(n=X(d)),l&&u&&a!=null&&n!=null))break}if(s&&s.length){let p=null;s.some(d=>{const y=d.type==="esriFieldTypeOID",f=!d.type&&d.name&&d.name.toLowerCase()==="objectid";return p=d,y||f})&&(c=p.name)}return{geometryType:l,spatialReference:u,objectIdField:c,hasM:n,hasZ:a}}async _loadInitialFeatures(e,s){const{geometryType:a,hasM:n,hasZ:l,objectIdField:u,spatialReference:c,featureStore:p,fieldsIndex:d}=this._queryEngine,y=[];for(const t of s){if(t.uid!=null&&(e.assignedObjectIds[t.uid]=-1),t.geometry&&a!==F(t.geometry)){e.featureErrors.push(h("Incorrect geometry type."));continue}const r=this._createDefaultAttributes(),m=T(d,r,t.attributes,!0);m?e.featureErrors.push(m):(this._assignObjectId(r,t.attributes,!0),t.attributes=r,t.uid!=null&&(e.assignedObjectIds[t.uid]=t.attributes[u]),t.geometry!=null&&(t.geometry=_(t.geometry,t.geometry.spatialReference,c)),y.push(t))}p.addMany(w([],y,a,l,n,u));const{fullExtent:f,timeExtent:o}=await this._queryEngine.fetchRecomputedExtents();if(e.layerDefinition.extent=f,o){const{start:t,end:r}=o;e.layerDefinition.timeInfo.timeExtent=[t,r]}return e}async _applyEdits(e){const{adds:s,updates:a,deletes:n}=e,l={addResults:[],deleteResults:[],updateResults:[],uidToObjectId:{}};if(s?.length&&this._applyAddEdits(l,s),a?.length&&this._applyUpdateEdits(l,a),n?.length){for(const p of n)l.deleteResults.push(j(p));this._queryEngine.featureStore.removeManyById(n)}const{fullExtent:u,timeExtent:c}=await this._queryEngine.fetchRecomputedExtents();return{extent:u,timeExtent:c,featureEditResults:l}}_applyAddEdits(e,s){const{addResults:a}=e,{geometryType:n,hasM:l,hasZ:u,objectIdField:c,spatialReference:p,featureStore:d,fieldsIndex:y}=this._queryEngine,f=[];for(const o of s){if(o.geometry&&n!==F(o.geometry)){a.push(h("Incorrect geometry type."));continue}const t=this._createDefaultAttributes(),r=T(y,t,o.attributes);if(r)a.push(r);else{if(this._assignObjectId(t,o.attributes),o.attributes=t,o.uid!=null){const m=o.attributes[c];e.uidToObjectId[o.uid]=m}if(o.geometry!=null){const m=o.geometry.spatialReference??p;o.geometry=_(D(o.geometry,m),m,p)}f.push(o),a.push(j(o.attributes[c]))}}d.addMany(w([],f,n,u,l,c))}_applyUpdateEdits({updateResults:e},s){const{geometryType:a,hasM:n,hasZ:l,objectIdField:u,spatialReference:c,featureStore:p,fieldsIndex:d}=this._queryEngine;for(const y of s){const{attributes:f,geometry:o}=y,t=f?.[u];if(t==null){e.push(h(`Identifier field ${u} missing`));continue}if(!p.has(t)){e.push(h(`Feature with object id ${t} missing`));continue}const r=G(p.getFeature(t),a,l,n);if(o!=null){if(a!==F(o)){e.push(h("Incorrect geometry type."));continue}const m=o.spatialReference??c;r.geometry=_(D(o,m),m,c)}if(f){const m=T(d,r.attributes,f);if(m){e.push(m);continue}}p.add(H(r,a,l,n,u)),e.push(j(t))}}_assignObjectId(e,s,a=!1){const n=this._queryEngine.objectIdField;a&&s&&isFinite(s[n])?e[n]=s[n]:e[n]=this._nextObjectId++}}export{ze as default};
