import{s as f,cz as L,cA as G,cB as k,e as C,Q as j,j as E}from"./chunk-YzRi88Dj.js";import{t as O}from"./chunk-BThIXeMZ.js";import{l as T,a as R,n as v,u as J,i as N,c as z,s as S,t as b,r as A,e as $}from"./chunk-B7yUdB1Q.js";import{populateGroupLayer as B}from"./chunk-C9q_oAx_.js";import{t as Q}from"./chunk-Dty_lum0.js";import"./chunk-ByM7454y.js";/* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              */async function Nt(t,a){const r=t.instance.portalItem;if(r?.id)return await r.load(a),q(t),t.validateItem&&t.validateItem(r),H(t,a)}function q(t){const a=t.instance.portalItem;if(!a?.type||!t.supportedTypes.includes(a.type))throw new f("portal:invalid-layer-item-type","Invalid layer item type '${type}', expected '${expectedType}'",{type:a?.type,expectedType:t.supportedTypes.join(", ")})}async function H(t,a){const r=t.instance,e=r.portalItem;if(!e)return;const{url:n,title:i}=e,o=L(e,"portal-item");if(r.type==="group")return K(r,o,t);n&&r.type!=="media"&&r.read({url:n},o);const s=new $,l=await M(t,s,a);return l&&r.read(l,o),r.resourceReferences={portalItem:e,paths:o.readResourcePaths??[]},r.type!=="subtype-group"&&r.read({title:i},o),G(r,o)}async function K(t,a,r){const e=t.portalItem;if(!t.sourceIsPortalItem)return;const{title:n,type:i}=e;if(i==="Group Layer"){if(!k(e,"Map"))throw new f("portal:invalid-layer-item-typekeyword","'Group Layer' item without 'Map' type keyword is not supported");return U(t)}return t.read({title:n},a),V(t,r)}async function U(t){const a=t.portalItem,r=await a.fetchData("json");if(!r)return;const e=L(a,"web-map");t.read(r,e),await B(t,r,{context:e}),t.resourceReferences={portalItem:a,paths:e.readResourcePaths??[]}}async function V(t,a){let r;const{portalItem:e}=t;if(!e)return;const n=e.type,i=a.layerModuleTypeMap;switch(n){case"Feature Service":case"Feature Collection":r=i.FeatureLayer;break;case"Stream Service":r=i.StreamLayer;break;case"Scene Service":r=i.SceneLayer;break;default:throw new f("portal:unsupported-item-type-as-group",`The item type '${n}' is not supported as a 'IGroupLayer'`)}const o=new $;let[s,l]=await Promise.all([r(),M(a,o)]),p=()=>s;if(n==="Feature Service"){const P=T(l)?.customParameters;l=e.url?await R(l,e.url,o):{};const d=v(l),h=J(l),F=N(l),u=[];if(d.length||h?.length){d.length&&u.push("SubtypeGroupLayer"),h?.length&&u.push("OrientedImageryLayer"),F?.length&&u.push("CatalogLayer");const w=[];for(const c of u){const y=i[c];w.push(y())}const D=await Promise.all(w),g=new Map;u.forEach((c,y)=>{g.set(c,D[y])}),p=c=>c.layerType?g.get(c.layerType)??s:s}const x=await tt(e.url,{customParameters:P,loadContext:o});return await m(t,p,l,x)}return n==="Scene Service"&&e.url&&(l=await z(e,l,o)),S(l)>0?await m(t,p,l):await W(t,p)}async function W(t,a){const{portalItem:r}=t;if(!r?.url)return;const e=await Q(r.url);e&&m(t,a,{layers:e.layers?.map(b),tables:e.tables?.map(b)})}async function m(t,a,r,e){let n=r.layers||[];const i=r.tables||[];if(t.portalItem?.type==="Feature Collection"?(n.forEach((o,s)=>{o.id=s,o?.layerDefinition?.type==="Table"&&i.push(o)}),n=n.filter(o=>o?.layerDefinition?.type!=="Table")):(n.reverse(),i.reverse()),n.forEach(o=>{const s=e?.(o);if(s||!e){const l=I(t,a(o),r,o,s);t.add(l)}}),i.length){const o=await C.FeatureLayer();i.forEach(s=>{const l=e?.(s);if(l||!e){const p=I(t,o,r,s,l);t.tables.add(p)}})}}function I(t,a,r,e,n){const i=t.portalItem,o={portalItem:i.clone(),layerId:e.id};e.url!=null&&(o.url=e.url);const s=new a(o);if("sourceJSON"in s&&(s.sourceJSON=n),s.type!=="subtype-group"&&s.type!=="catalog"&&(s.sublayerTitleMode="service-name"),i.type==="Feature Collection"){const l={origin:"portal-item",portal:i.portal||j.getDefault()};s.read(e,l);const p=r.showLegend;p!=null&&s.read({showLegend:p},l)}return s}async function M(t,a,r){if(t.supportsData===!1)return;const e=t.instance,n=e.portalItem;if(!n)return;let i=null;try{i=await n.fetchData("json",r)}catch{}if(Z(e)){let o=null;const s=await X(n,i,a);if((i?.layers||i?.tables)&&s>0){if(e.layerId==null){const l=v(i);e.layerId=e.type==="subtype-group"?l?.[0]:A(i)}o=Y(i,e),o&&i.showLegend!=null&&(o.showLegend=i.showLegend)}return s>1&&"sublayerTitleMode"in e&&e.sublayerTitleMode!=="service-name"&&(e.sublayerTitleMode="item-title-and-service-name"),o}return i}async function X(t,a,r){if(a?.layers&&a?.tables)return S(a);const e=E(t.url);if(!e)return 1;const n=await r.fetchServiceMetadata(e.url.path,{customParameters:T(a)?.customParameters}).catch(()=>null);return(a?.layers?.length??n?.layers?.length??0)+(a?.tables?.length??n?.tables?.length??0)}function Y(t,a){const{layerId:r}=a,e=t.layers?.find(n=>n.id===r)||t.tables?.find(n=>n.id===r);return e&&_(e,a)?e:null}function Z(t){return t.type!=="stream"&&"layerId"in t}function _(t,a){return!(a.type==="feature"&&"layerType"in t&&t.layerType==="SubtypeGroupLayer"||a.type==="subtype-group"&&!("layerType"in t))}async function tt(t,a){const{layersJSON:r}=await O(t,a);if(!r)return null;const e=[...r.layers,...r.tables];return n=>e.find(i=>i.id===n.id)}export{Nt as load};
