import{bM as $,j$ as F,k0 as O,dh as j,k1 as P,k2 as q,k3 as E,k4 as G,k5 as N,k6 as A,cN as B,cZ as H}from"./chunk-nmd5K2Af.js";async function M(t,d,l,b,o){const{elevationProvider:p,renderCoordsHelper:i}=t,{elevationInfo:f}=d,{pointsInFeatures:m,spatialReference:u}=b,g=$.fromJSON(u),h=F(f,!0),y=await O(h,g,o);j(o);const c=[],e=new Set,s=new Set,a=new N,n=P(0,0,0,$.WGS84),r=new A,S=B();n.spatialReference=g;const x=t.elevationProvider.spatialReference??t.spatialReference;for(const{objectId:w,points:v}of m){const I=l(w);if(I==null){for(const R of v)c.push(R.z??0);e.add(w);continue}I.isDraped&&s.add(w);const D=I.graphic.geometry;a.setFromElevationInfo(q(D,f)),a.updateFeatureExpressionInfoContext(y,I.graphic,d);for(const{x:R,y:z,z:C}of v)n.x=R,n.y=z,n.z=C??0,await E(n,S,x,0,{signal:o}),G(S,p,a,i,r),c.push(r.z)}return{elevations:c,drapedObjectIds:s,failedObjectIds:e}}async function U(t,d,l){if(t==null||d.candidates.length===0)return k;const b=t.graphics3DGraphicsByObjectID??t.graphics3DGraphics,o=[],p=[],{renderer:i}=t,f=i!=null&&"arcadeRequired"in i&&i.arcadeRequired?H():null,m=async(e,{graphic:s,graphics3DSymbol:a})=>{const n=await f,r=await t.getRenderingInfoAsync(s,i,n,{signal:l});return r==null?[]:a.queryForSnapping(e,g,r,l)},{candidates:u,spatialReference:g}=d;for(let e=0;e<u.length;++e){const s=u[e],{objectId:a}=s,n=typeof a=="number"?b?.get(a):void 0;if(n==null)continue;const{graphics3DSymbol:r}=n;r.symbologySnappingSupported&&(o.push(m(s,n)),p.push(e))}if(o.length===0)return k;const h=await Promise.all(o);j(l);const y=[],c=[];for(let e=0;e<h.length;++e){const s=h[e],a=p[e];for(const n of s)y.push(n),c.push(a)}return{candidates:y,sourceCandidateIndices:c}}const k={candidates:[],sourceCandidateIndices:[]};export{M as m,U as r};
