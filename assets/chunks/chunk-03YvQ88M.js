import{e3 as S,fz as R,bZ as $,fG as f,al as q,A as U,am as I,ag as A,cL as E,a1 as h,a2 as w,a4 as H}from"./chunk-YzRi88Dj.js";import{v as L}from"./chunk-D2q3xEmi.js";import{m as W}from"./chunk-D8_ge4Pb.js";import"./chunk-ByM7454y.js";/* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              */let o=class extends W(S(R($))){constructor(){super(...arguments),this.bitmapContainer=new f}supportsSpatialReference(t){return this.layer.serviceSupportsSpatialReference(t)}update(t){this.strategy.update(t).catch(e=>{q(e)||U.getLogger(this).error(e)})}attach(){const{layer:t}=this,{imageMaxHeight:e,imageMaxWidth:r}=t;this.bitmapContainer=new f,this.container.addChild(this.bitmapContainer),this.strategy=new L({container:this.bitmapContainer,fetchSource:this.fetchImage.bind(this),requestUpdate:this.requestUpdate.bind(this),imageMaxHeight:e,imageMaxWidth:r,imageRotationSupported:!1,imageNormalizationSupported:!1,hidpi:!1}),this.addAttachHandles(I(()=>this.exportImageVersion,()=>this.requestUpdate()))}detach(){this.strategy=A(this.strategy),this.container.removeAllChildren()}moveStart(){}viewChange(){}moveEnd(){this.requestUpdate()}createFetchPopupFeaturesQuery(t){const{view:e,bitmapContainer:r}=this,{x:a,y:s}=t,{spatialReference:v}=e;let i,p=0,d=0;if(r.children.some(M=>{const{width:c,height:g,resolution:l,x:m,y:n}=M,y=m+l*c,x=n-l*g;return a>=m&&a<=y&&s<=n&&s>=x&&(i=new E({xmin:m,ymin:x,xmax:y,ymax:n,spatialReference:v}),p=c,d=g,!0)}),!i)return null;const u=i.width/p,b=Math.round((a-i.xmin)/u),C=Math.round((i.ymax-s)/u);return{extent:i,width:p,height:d,x:b,y:C}}async doRefresh(){this.requestUpdate()}isUpdating(){return this.strategy.updating||this.updateRequested}fetchImage(t,e,r,a){return this.layer.fetchImageBitmap(t,e,r,{timeExtent:this.timeExtent,...a})}};h([w()],o.prototype,"strategy",void 0),h([w()],o.prototype,"updating",void 0),o=h([H("esri.views.2d.layers.WMSLayerView2D")],o);const xt=o;export{xt as default};
