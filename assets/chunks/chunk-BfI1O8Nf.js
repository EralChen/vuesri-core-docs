import{a1 as h,a2 as y,a4 as ie,E as ge,a5 as je,bA as g,As as Oe,cl as et,cV as be,aO as tt,fP as rt,ga as Z,b0 as it,u5 as st,s as D,z as q,$ as at,fH as ne,bI as nt,x as de,fI as B,fJ as ot,om as ze,c8 as lt,d4 as ut,mq as ct,CS as T,fj as He,CT as dt,hj as Q,ey as ve,a6 as Qe,aX as pt,aY as ht,CU as oe,CV as ft,Cq as J,CW as le,CX as yt,mr as mt,y as se,i8 as he,eA as pe,kl as gt,CY as Te,e7 as bt,g5 as St,bF as vt,eg as $e,ex as W,O as _t,r$ as Me,l5 as wt,V as Vt,F as It,ar as Ae,aH as xt,an as me,a0 as Ft,ag as Et,as as qe,CZ as Rt,gq as Pe,C_ as ke,am as Ne,C$ as Ct}from"./chunk-CMhy9c9G.js";import{i as Ot}from"./chunk-DjDIt6nn.js";import{i as Ue,r as Be,n as zt}from"./chunk-CjSui6k2.js";import{T as v,d as Y,M as F,e as ue,h as P,f as ee,g as _e,x as fe,c as we,j as $,k as Tt,b as $t}from"./chunk-CLknGTw1.js";import{e as Ve}from"./chunk-iAha9nPY.js";import{t as Ge}from"./chunk-CujHzHWW.js";import{e as I}from"./chunk-Caulfaw_.js";import{e as G,o as Mt,m as At}from"./chunk-CD9yU3wS.js";import{a as qt}from"./chunk-DJ3DTnMt.js";import{e as Pt}from"./chunk-Czi-fdpx.js";import{_ as kt}from"./chunk-BxRfZC3M.js";let ce=class extends ge{constructor(){super(...arguments),this.isAggregate=!0}getEffectivePopupTemplate(e=!1){if(this.popupTemplate)return this.popupTemplate;const t=this.sourceLayer?.featureReduction;return t&&"popupTemplate"in t&&t.popupEnabled?t.popupTemplate:null}getObjectId(){return this.attributes.aggregateId}};h([y({type:Boolean})],ce.prototype,"isAggregate",void 0),ce=h([ie("esri.AggregateGraphic")],ce);const Ie=ce;let w=class extends je{constructor(e){super(e),this._filter=null,this.duration=g("mapview-transitions-duration"),this._excludedEffectView=new Oe(e),this._includedEffectView=new Oe(e)}get excludedEffects(){return this._excludedEffectView.effects}set featureEffect(e){this._get("featureEffect")!==e&&this._transitionTo(e)}get filter(){return this._filter||this.featureEffect?.filter||null}get hasEffects(){return this._excludedEffectView.hasEffects||this._includedEffectView.hasEffects}get includedEffects(){return this._includedEffectView.effects}set scale(e){this._set("scale",e),this._excludedEffectView.scale=e,this._includedEffectView.scale=e}get transitioning(){return this._excludedEffectView.transitioning||this._includedEffectView.transitioning}get transitioningToEmpty(){return!this._excludedEffectView.final&&!this._includedEffectView.final}transitionStep(e,t){this._set("scale",t),this.transitioning?(this._includedEffectView.transitionStep(e,t),this._excludedEffectView.transitionStep(e,t),this.transitioning||(this._filter=null)):(this._excludedEffectView.scale=t,this._includedEffectView.scale=t)}endTransition(){this._includedEffectView.endTransition(),this._excludedEffectView.endTransition(),this._filter=null}_transitionTo(e){const t=this._get("featureEffect"),i=e,s=i?.includedEffect,a=i?.excludedEffect,n=this._includedEffectView.canTransitionTo(s)&&this._excludedEffectView.canTransitionTo(a);this._includedEffectView.effect=s,this._excludedEffectView.effect=a,this._set("featureEffect",i),this._filter=i?.filter||t?.filter||null,n||this.endTransition()}};h([y()],w.prototype,"_filter",void 0),h([y()],w.prototype,"_excludedEffectView",void 0),h([y()],w.prototype,"_includedEffectView",void 0),h([y()],w.prototype,"duration",void 0),h([y()],w.prototype,"excludedEffects",null),h([y()],w.prototype,"featureEffect",null),h([y()],w.prototype,"filter",null),h([y()],w.prototype,"hasEffects",null),h([y()],w.prototype,"includedEffects",null),h([y({value:0})],w.prototype,"scale",null),h([y()],w.prototype,"transitioning",null),h([y()],w.prototype,"transitioningToEmpty",null),w=h([ie("esri.layers.effects.FeatureEffectView")],w);const Nt=w;let X=class extends be{constructor(){super(...arguments),this.features=[]}readFeatures(e,t){const i=tt.fromJSON(t.spatialReference),s=[];for(let a=0;a<e.length;a++){const n=e[a],o=Ie.fromJSON(n),l=n.geometry?.spatialReference;o.geometry==null||l||(o.geometry.spatialReference=i);const c=n.aggregateGeometries,d=o.aggregateGeometries;if(c&&d!=null)for(const u in d){const p=d[u],f=c[u],m=f?.spatialReference;p==null||m||(p.spatialReference=i)}s.push(o)}return s}};h([y({type:[Ie],json:{write:!0}})],X.prototype,"features",void 0),h([et("features")],X.prototype,"readFeatures",null),X=h([ie("esri.rest.support.AggregateFeatureSet")],X);const Ut=X;let Bt=class{constructor(){this._instanceById=new Map}destroy(){this._instanceById.clear()}get size(){return this._instanceById.size}entries(){return this._instanceById.entries()}updateStart(){this._instanceByIdNext=new Map}updateEnd(){if(!this._instanceByIdNext)throw new Error("InternalError: Found updateEnd call without corresponding updateStart");for(const e of this._instanceById.keys())this._instanceByIdNext.has(e)||this._instanceById.delete(e);for(const[e,t]of this._instanceByIdNext.entries()){const i=this._instanceById.get(e);i?i.setInput(t.getInput()):this._instanceById.set(e,t)}this._instanceByIdNext=null}values(){return this._instanceById.values()}ensureInstance(e,t){let i;if(typeof t=="object"&&"optionalAttributes"in t&&"uniforms"in t){i=`${e.type}${JSON.stringify(t.optionalAttributes)}`;const a=t.uniforms;if(typeof a=="object")for(const n in a)i+=`${n}.${a[n]!=null}`}else i=`${e.type}.${JSON.stringify(t)}`;const s=rt(i);if(this._instanceByIdNext){const a=new Ue(Be(s),e,t);return this._instanceByIdNext.set(s,a),a}if(!this._instanceById.has(s)){const a=new Ue(Be(s),e,t);this._instanceById.set(s,a)}return this._instanceById.get(s)}getInstance(e){return this._instanceById.get(e)}};const Lt=1e3;let Dt=class{constructor(e,t,i,s){this.getStage=e,this.getSubscriptionVersion=t,this.version=i,this._tileInfoView=s,this._pendingUpdates=new Ge(Lt),this._locked=!1,this._tiles=new Map}destroy(){for(const e of this.tiles())e.destroy();this._pendingUpdates.clear(),this._tiles.clear()}tiles(){return this._tiles.values()}size(){return this._tiles.size}setTiles(e){this._tiles.clear();for(const t of e)this._tiles.set(t.key.id,t)}lockUploads(){this._locked=!0}unlockUploads(){this._locked=!1,this.flush()}enqueueUpdate(e){this._pendingUpdates.enqueue(e)}update(e){if(!this._locked)for(;this._pendingUpdates.size;){const t=this._pendingUpdates.peek();if(t==null||t.inner.attributeEpoch>e)break;this._updateTile(t),this._pendingUpdates.dequeue()}}removeTile(e){const t=this._tiles.get(e);g("esri-2d-update-debug")&&console.debug(`Tile[${e}] RenderState.removeTile`),t?.destroy(),this._tiles.delete(e)}isTileDone(e){const t=this._tiles.get(e.id);return!!t&&t.isReady}flush(){for(;this._pendingUpdates.size;){const e=this._pendingUpdates.dequeue();e!=null&&this._updateTile(e)}for(const e of this._tiles.values())e.upload()}_updateTile(e){const{inner:t,objectIdMap:i}=e,s=this.getSubscriptionVersion(t.id);if(s!==t.subscriptionVesrion){if(g("esri-2d-update-debug")){const l=`${t.subscriptionVesrion} != ${s}`;console.debug(`Version[${l}] Tile[${t.id}] FeatureContainer - Dropping message, outdated version]`,t)}return}if(g("esri-2d-update-debug")){const l=t.debugInfo?.chunkId??"<EnsureEnd>";console.debug(`Version[${t.version}] Tile[${t.id}] Chunk[${l}] RenderState.updateTile [${t.type}]`,t)}const a=this._ensureTile(t.id);if(t.type==="update"){const[l,...c]=t.modify;a.onMessage({type:"update",modify:l,remove:t.remove,end:t.end,attributeEpoch:t.attributeEpoch,objectIdMap:i});for(const d of c){const u=this._tiles.get(d.tileId);u&&u.onMessage({type:"update",modify:d,remove:t.remove,end:!1,isPixelBuffer:!0,attributeEpoch:null,objectIdMap:i})}return}if(t.append==null)return void a.onMessage({type:"append",clear:t.clear,debugInfo:t.debugInfo,end:t.end,attributeEpoch:t.attributeEpoch,objectIdMap:i});const[n,...o]=t.append;a.onMessage({type:"append",clear:t.clear,append:n,debugInfo:t.debugInfo,end:t.end,attributeEpoch:t.attributeEpoch,objectIdMap:i});for(const l of o){const c=this._tiles.get(l.tileId);c&&c.onMessage({type:"update",modify:l,remove:[],sort:!1,end:!1,isPixelBuffer:!0,attributeEpoch:null,objectIdMap:i})}}_ensureTile(e){if(!this._tiles.has(e)){const t=this._createTile(e);this._copyPixelBufferedEntitiesInto(t),this._tiles.set(e,t)}return this._tiles.get(e)}_createTile(e){g("esri-2d-update-debug")&&console.debug(`Version[${this.version}] Tile[${e}] RenderState.createTile`);const t=new Z(e),i=this._tileInfoView.getTileBounds(it(),t),s=this._tileInfoView.getTileResolution(t.level),a=new st(t,s,i[0],i[3],!0);if(a.stage=this.getStage(),!a.stage){const n=new D("featurelayerview:webgl","Cannot create tile with empty stage");q.getLogger("esri.views.2d.layers.features.RenderState").error(n)}return a}_copyPixelBufferedEntitiesInto(e){let t=7;const i=this._tileInfoView.getLODInfoAt(e.key);for(let s=-1;s<=1;s++)for(let a=-1;a<=1;a++){if(s===0&&a===0)continue;const n=e.key.getNormalizedNeighbor(a,s,i).id,o=this._tiles.get(n);if(o!=null){const l=1<<t;e.copyPixelBufferedEntitesFrom(o,l,a,s)}t--}}},Jt=class{constructor(e,t){this.id=e,this.version=t,this._resolver=de(),this._done=!1}get done(){return this._done}get promise(){return this._resolver.promise}end(){this._resolver.resolve(),this._done=!0}destroy(){this._resolver.reject()}},jt=class extends zt{constructor(e){super(e.view.featuresTilingScheme),this.updatingHandles=new at,this._hitTestsRequests=[],this._store=new Bt,this._visibleTiles=new Set,this._subscriptions=new Map,this._updateStatisticsRequests=[],this._lockStatisticUpdates=!1,this._layerView=e,this.addTransitionable(this._layerView.featureEffectView)}renderChildren(e){if(this._updateAttributeView(),this._renderState?.update(this.attributeView.currentEpoch),this._renderState){const t=Array.from(this._renderState.tiles()).filter(i=>i.needsUpload);t.length&&(t[Math.floor(Math.random()*t.length)].upload(),t.length>=2&&this.requestRender());for(const i of this._renderState.tiles())i.tryReady(this.attributeView.currentEpoch)&&(this._subscriptions.get(i.key.id)?.end(),this._layerView.requestUpdate(),this.hasLabels&&this._layerView.view.labelManager.requestUpdate(),this.requestRender())}for(const t of this.children)t.setTransform(e.state);switch(super.renderChildren(e),e.drawPhase){case ne.MAP:return this._renderMapPhase(e);case ne.HIGHLIGHT:return this._renderHighlightPhase(e);case ne.LABEL:return this._renderLabelPhase(e)}}subscriptions(){return this._subscriptions.values()}get _instanceStore(){return this._store}get instanceStore(){return this._store}get layerView(){return this._layerView}get hasLabels(){return this._layerView.labelingCollisionInfos.length>0}get hasHighlight(){return this._layerView.hasHighlight()}get _layer(){return this._layerView.layer}_getHeatmapInstance(e){if(this._instanceStore==null||!(e.drawPhase&v.heatmap.drawPhase))return null;for(const t of this._instanceStore.values())if(Ht(t))return t;return null}get children(){return this._renderState?Array.from(this._renderState.tiles()).filter(e=>this._visibleTiles.has(e.key.id)):[]}updateAttributeView(e){this.requestRender(),this.attributeView.requestUpdate(e),this.hasLabels&&this._layerView.view.labelManager.requestUpdate()}updateSubscriptions(e){for(const{tileId:t,version:i}of e.subscribe)if(this._subscriptions.has(t))this._subscriptions.get(t).version=i;else{const s=new Jt(t,i);this._subscriptions.set(t,s),this.updatingHandles.addPromise(s.promise)}for(const t of e.unsubscribe)this._subscriptions.get(t)?.destroy(),this._subscriptions.delete(t),this.removeTile(t)}isDone(e){return!!this._renderState&&this._renderState.isTileDone(e)}async updateRenderState(e){g("esri-2d-update-debug")&&console.debug(`Version[${e}] FeatureContainer.updateRenderState`),this._renderStateNext=new Dt(()=>this._stage,t=>this._subscriptions.get(t)?.version,e,this.tileInfoView)}getDisplayStatistics(e,t){const i=this._statisticsByLevel.get(e);return i?i.get(t):null}updateStatistics(e,t){if(this._lockStatisticUpdates)return void this._updateStatisticsRequests.push({level:e,statistics:t});let i=this._statisticsByLevel.get(e);i||(i=new Map,this._statisticsByLevel.set(e,i));for(const s of t)i.set(s.fieldName,{minValue:s.minValue,maxValue:s.maxValue})}editStart(){this._renderState?.lockUploads(),this.attributeView.lockTextureUploads(),this._lockStatisticUpdates=!0}editEnd(){this._renderState?.unlockUploads(),this.attributeView.unlockTextureUploads(),this._lockStatisticUpdates=!1;for(const e of this._updateStatisticsRequests)this.updateStatistics(e.level,e.statistics);this._updateStatisticsRequests=[],this.requestRender()}swapRenderState(){this._renderStateNext&&(g("esri-2d-update-debug")&&console.debug(`Version[${this._renderStateNext.version}] FeatureContainer.update.swapRenderState`),this._renderState?.destroy(),this._renderState=this._renderStateNext,this._renderStateNext=null),this._renderState&&this._renderState.flush(),this.requestRender()}setVisibleTiles(e){this._visibleTiles=e}async onMessage(e,t){nt(t);const i=e.inner;if(!this._subscriptions.has(i.id))return;const s=this._subscriptions.get(i.id);if(s.version!==i.subscriptionVesrion){if(g("esri-2d-update-debug")){const n=`${i.subscriptionVesrion} != ${s.version}`;console.debug(`Version[${n}] Tile[${i.id}] FeatureContainer - Dropping message, outdated version]`,i)}return}const a=this._renderStateNext??this._renderState;if(!a)throw new Error("InternalError: No renderState defined");a.version!==i.version&&console.error(`InternalError: Version mismatch. [renderState: ${a.version}, message: ${i.version}]`),a.enqueueUpdate(e),this.requestRender(),this._layerView.view.labelManager.requestUpdate(),this._layerView.requestUpdate()}removeTile(e){(this._renderState||this._renderStateNext)&&(this._renderState&&this._renderState.removeTile(e),this._renderStateNext&&this._renderStateNext.removeTile(e))}hitTest(e){let t=this._hitTestsRequests.find(({x:s,y:a})=>s===e.x&&a===e.y);const i=de();return t?t.resolvers.push(i):(t={x:e.x,y:e.y,resolvers:[i]},this._hitTestsRequests.push(t)),this.requestRender(),i.promise}getSortKeys(e){const t=new Set(e),i=new Map;for(const s of this.children)if(s.getSortKeys(t).forEach((a,n)=>i.set(n,a)),i.size===t.size)break;return i}get hasAnimation(){return this.hasLabels}doRender(e){const{minScale:t,maxScale:i}=this._layer.effectiveScaleRange,s=e.state.scale;s<=(t||1/0)&&s>=i&&super.doRender(e)}afterRender(e){super.afterRender(e),this._hitTestsRequests.length&&this.requestRender()}setStencilReference(e){if(this._getHeatmapInstance(e)==null)super.setStencilReference(e);else for(const t of this.children)t.stencilRef=v.heatmap.getStencilReference(t)}_renderMapPhase(e){this._layerView.featureEffectView.hasEffects?(this._renderOutsideEffect(e),this._renderInsideEffect(e)):this._renderFeatures(e,B.All),this._hitTestsRequests.length>0&&this._renderHittest(e)}_renderHighlightPhase(e){this.hasHighlight&&ot(e,!1,t=>{this._renderFeatures(t,B.Highlight)})}_renderLabelPhase(e){this._renderFeatures(e,B.All)}_renderInsideEffect(e){const t=e.painter.effects.insideEffect;t.bind(e),this._renderFeatures(e,B.InsideEffect),t.draw(e,this._layerView.featureEffectView.includedEffects),t.unbind()}_renderOutsideEffect(e){const t=e.painter.effects.outsideEffect;t.bind(e),this._renderFeatures(e,B.OutsideEffect),t.draw(e,this._layerView.featureEffectView.excludedEffects),t.unbind()}_renderHittest(e){const{context:t}=e,i=e.painter.effects.hittest,s=t.getBoundFramebufferObject(),a=t.getViewport(),n=e.passOptions,o=e.drawPhase;i.bind(e),e.passOptions=i.createOptions(e,this._hitTestsRequests),e.drawPhase=ne.HITTEST;const{distance:l,smallSymbolDistance:c}=e.passOptions,d=Math.max(l,c);for(const u of this.children)u.visible&&u.containsScreenPoint(e.state,e.passOptions.position,2*d)&&this._renderTile(u,e,B.All);i.draw(e),i.unbind(),t.bindFramebuffer(s),t.restoreViewport(a),e.passOptions=n,e.drawPhase=o}_renderFeatures(e,t){const i=this._getHeatmapInstance(e);i!=null?this._renderHeatmapFeatures(e,t,i):this._renderGeometryFeatures(e,t)}_renderGeometryFeatures(e,t){for(const i of this.children)i.visible&&this._renderTile(i,e,t)}_renderHeatmapFeatures(e,t,i){for(const s of this.children)s.visible&&this._renderTile(s,e,t,Ve.Heatmap);i.techniqueRef.renderResolvePass(e,i)}_renderTile(e,t,i,s){const a=g("featurelayer-force-marker-text-draw-order")?ze.STRICT_MARKERS_AND_TEXT:ze.BATCHING,n=e.getDisplayList(this._instanceStore,a);t.selection=i,n?.render(t,s)}};function Ht(r){return r.techniqueRef.type===Ve.Heatmap}async function Qt(r){const e=await lt("FeaturePipelineWorker",{client:r,strategy:"dedicated"});return new Gt(e)}let Gt=class{constructor(e){this._connection=e,this.pipeline=this._connection.createInvokeProxy(),this.features=this._connection.createInvokeProxy("features"),this.aggregates=this._connection.createInvokeProxy("aggregates"),this.streamMessenger=this._connection.createInvokeProxy("streamMessenger")}destroy(){this._connection.destroy()}get closed(){return this._connection.closed}};const Wt=10;let C=class extends je{constructor(){super(...arguments),this.events=new ut,this._updatingStrategy=!0,this._tileToEvent=new ct,this._fetchStatus={outstanding:0,done:0}}get hasAllFeatures(){return this._hasAllData()&&(this._strategyInfo?.willQueryAllFeatures??!1)}get hasAllFeaturesInView(){return this._hasAllData()}get hasFullGeometries(){return this._hasAllData()&&(this._strategyInfo?.willQueryFullResolutionGeometry??!1)}onEvent(e){switch(e.type){case"subscribe":case"unsubscribe":case"loaded":case"error":this._handleTileEvent(e);break;case"updateStrategyStart":this._updatingStrategy=!0,this._fetchStatus={done:0,outstanding:0},this._strategyInfo=e.about;break;case"updateStrategyEnd":this._updatingStrategy=!1;break;case"updateFieldsStart":this._fetchStatus={done:0,outstanding:0};break;case"updateFieldsEnd":break;case"updateFieldsError":this.events.emit("error",e);break;case"fetchStart":this._fetchStatus.outstanding+=1,this.events.emit("status",this._fetchStatus);break;case"fetchEnd":this._fetchStatus.done+=1,this.events.emit("status",this._fetchStatus),e.done&&(this._fetchStatus={done:0,outstanding:0})}}_hasAllData(){return!this._updatingStrategy&&this._hasAllTileData()}_hasAllTileData(){for(const e of this._tileToEvent.values())if(e.peekLast()?.type!=="loaded")return!1;return!0}_handleTileEvent(e){switch(e.type){case"subscribe":{const t=new Ge(Wt);t.enqueue(e),this._tileToEvent.set(e.tile,t);break}case"unsubscribe":this._tileToEvent.delete(e.tile);break;case"loaded":{const t=this._tileToEvent.get(e.tile);if(!t)return;t.enqueue(e),this._tileToEvent.set(e.tile,t);break}case"error":{const t=this._tileToEvent.get(e.tile);if(!t)return;t.enqueue(e),this._tileToEvent.set(e.tile,t),this.events.emit("error",e);break}}}};h([y({readOnly:!0})],C.prototype,"hasAllFeatures",null),h([y({readOnly:!0})],C.prototype,"hasAllFeaturesInView",null),h([y({readOnly:!0})],C.prototype,"hasFullGeometries",null),h([y()],C.prototype,"_updatingStrategy",void 0),h([y()],C.prototype,"_strategyInfo",void 0),h([y()],C.prototype,"_tileToEvent",void 0),C=h([ie("esri.views.2d.layers.features.FeatureSourceEventLog")],C);function E(r){switch(r.geometryType){case"point":return"esriGeometryPoint";case"polyline":return"esriGeometryPolyline";case"polygon":return"esriGeometryPolygon";case"multipatch":return"esriGeometryMultiPatch";case"multipoint":return"esriGeometryMultipoint";default:return null}}const Kt=Math.PI;function We(r,e){switch(e.transformationType){case T.Additive:return Zt(r,e);case T.Constant:return Xt(e,r);case T.ClampedLinear:return Yt(r,e);case T.Proportional:return er(r,e);case T.Stops:return tr(r,e);case T.RealWorldSize:return rr(r,e);case T.Identity:return r;case T.Unknown:return null}}function x(r,e){return typeof r=="number"?r:We(e,r)}function Zt(r,e){return r+(x(e.minSize,r)||e.minDataValue)}function Xt(r,e){const t=r.stops;let i=t?.length&&t[0].size;return i==null&&(i=r.minSize),x(i,e)}function Yt(r,e){const t=e.minDataValue,i=e.maxDataValue,s=(r-t)/(i-t),a=x(e.minSize,r),n=x(e.maxSize,r);return r<=t?a:r>=i?n:a+s*(n-a)}function er(r,e){const t=r/e.minDataValue,i=x(e.minSize,r),s=x(e.maxSize,r);let a=null;return a=t*i,He(a,i,s)}function tr(r,e){const[t,i,s]=ir(r,e.cache.ipData);if(t===i)return x(e.stops[t].size,r);{const a=x(e.stops[t].size,r);return a+(x(e.stops[i].size,r)-a)*s}}function rr(r,e){const t=dt[e.valueUnit],i=x(e.minSize,r),s=x(e.maxSize,r),{valueRepresentation:a}=e;let n=null;return n=a==="area"?2*Math.sqrt(r/Kt)/t:a==="radius"||a==="distance"?2*r/t:r/t,He(n,i,s)}function ir(r,e){if(!e)return;let t=0,i=e.length-1;return e.some((s,a)=>r<s?(i=a,!0):(t=a,!1)),[t,i,(r-e[t])/(e[i]-e[t])]}function z(r){return(r.labelsVisible&&r.labelingInfo?.every(e=>e.deconflictionStrategy!=="none"))??!1}function k(r,e){const t=I(r,e);if(t?.labelsVisible&&t.labelingInfo?.length)return t.labelingInfo.every(i=>i.deconflictionStrategy!=="none")}function sr(r){return e=>Q(We(e,r))}function M(r){const e=r!=null&&"visualVariables"in r&&r.visualVariables;if(!e)return null;for(const t of e)if(t.type==="size")return sr(t);return null}function N(r,e,t,i){const s=r.subtypeCode!=null?`${r.subtypeField} = ${r.subtypeCode}`:null,a=ve(r.definitionExpression,s),n=r.customParameters??{};return i&&(n.token=i),{type:"feature",mutable:{sourceRefreshVersion:t,availableFields:e.availableFields,dataFilter:{queryScaleRanges:r.queryScaleRanges??[],definitionExpression:a,gdbVersion:r.gdbVersion,historicMoment:r.historicMoment?.getTime(),timeExtent:r.timeExtent?.toJSON(),customParameters:n}}}}function ar(r,e,t=0){if(e==null)return r[t]=0,r[t+1]=0,r[t+2]=0,void(r[t+3]=0);const{r:i,g:s,b:a,a:n}=e;r[t]=i*n/255,r[t+1]=s*n/255,r[t+2]=a*n/255,r[t+3]=n}async function O(r,e){if(!r)return[];switch(r.type){case"simple-fill":return Se(r,e);case"picture-fill":return yr(r,e);case"simple-marker":return Le(r,e);case"picture-marker":return ur(r,e);case"simple-line":return j(r,e,!1);case"text":return dr(r,e);case"label":return pr(r,e);case"cim":return Y(r.data,e);case"web-style":{const t=await r.fetchCIMSymbol();return Y(t.data,e)}case"line-3d":return q.getLogger("esri.views.layers.FeatureLayerView").warn("unsupported-symbol",`Symbol of type "${r.type}" unsupported in MapView. Defaulting to simple-line`),j(new ht,e,!1);case"point-3d":return q.getLogger("esri.views.layers.FeatureLayerView").warn("unsupported-symbol",`Symbol of type "${r.type}" unsupported in MapView. Defaulting to simple-marker`),Le(new pt,e);case"polygon-3d":return q.getLogger("esri.views.layers.FeatureLayerView").warn("unsupported-symbol",`Symbol of type "${r.type}" unsupported in MapView. Defaulting to simple-fill`),Se(new Qe,e);case"mesh-3d":case"label-3d":return q.getLogger("esri.views.layers.FeatureLayerView").warn("unsupported-symbol",`Symbol of type "${r.type}" unsupported in MapView. Ignoring`),[];case"CIMSymbolReference":throw new Error("InternalError: CIMSymbolReference should already be resolved")}}async function nr(r,e){const{schemaOptions:t}=e,{store:i}=t,s=new Array(oe),a=new Array(oe/4);for(let u=0;u<oe;u++){const p=u<r.attributes.length?r.attributes[u].color:null;s[u]=[0,0,0,0],ar(s[u],p)}for(let u=0;u<oe/4;u++)a[u]=[0,0,0,0],a[u][0]=4*u<r.attributes.length?1:0,a[u][1]=4*u+1<r.attributes.length?1:0,a[u][2]=4*u+2<r.attributes.length?1:0,a[u][3]=4*u+3<r.attributes.length?1:0;const n={uniforms:{isActive:a,colors:s,dotValue:r.dotValue,dotScale:r.referenceScale,blending:r.dotBlendingEnabled,dotSize:r.dotSize,seed:r.seed},optionalAttributes:{}},o=i.ensureInstance(v.dotDensity,n).createMeshInfo({effects:null}),l=[],c=new Qe({color:r.backgroundColor??[0,0,0,0],outline:null}),d=await O(c,e);if(l.push(...d),l.push(o),r.outline){const u=j(r.outline,e,!0);l.push(...u)}return l}async function or(r,e){const{store:t}=e,{radius:i,minDensity:s,maxDensity:a,referenceScale:n,field:o,valueExpression:l,colorStops:c}=r,d=ft(c);return[t.ensureInstance(v.heatmap,{uniforms:{radius:Q(i),minDensity:s,maxDensity:a,referenceScale:n,isFieldActive:!(!o&&!l),gradient:d,gradientHash:d.join(",")},optionalAttributes:{}}).createMeshInfo({effects:null})]}async function lr(r,e){const{store:t}=e,i=r.outline?.width||0,s=F(r),a=t.ensureInstance(v.pieChart,{uniforms:{shader:{outlineWidth:Math.round(Q(i)),defaultColor:ue(r.defaultColor),outlineColor:ue(r.outline?.color),othersColor:ue(r.othersCategory?.color),donutRatio:r.holePercentage,sectorThreshold:r.othersCategory?.threshold||0,colors:r.attributes.map(n=>ue(n.color)),visualVariableOpacity:s.visualVariableOpacity,visualVariableSizeMinMaxValue:s.visualVariableSizeMinMaxValue,visualVariableSizeScaleStops:s.visualVariableSizeScaleStops,visualVariableSizeStops:s.visualVariableSizeStops,visualVariableSizeUnitValue:s.visualVariableSizeUnitValue,hittestUniforms:null},numberOfFields:r.attributes.length},optionalAttributes:{}}).createMeshInfo({size:r.size,outlineWidth:i,effects:null,scaleInfo:null,minPixelBuffer:P(s)});return[...r.backgroundFillSymbol?await Se(r.backgroundFillSymbol,{schemaOptions:e,path:"",uniforms:fe}):[],a]}function Ke(r){if(r.style==="path"){if(r.path==null)throw new Error("Symbol with a style of type path must define a path");return{type:"sprite-rasterization-param",overrides:[],resource:{type:"path",path:r.path,asFill:!0}}}const e=G.fromSimpleMarker(r);if("outline"in r&&r.outline&&r.outline.style!=="none"&&r.outline.style!=="solid"){if(!e||!e.symbolLayers)throw new Error("Error handling marker! ");return{type:"sprite-rasterization-param",resource:e.symbolLayers[0],overrides:[]}}return{type:"sprite-rasterization-param",resource:qt(e),overrides:[]}}async function Le(r,e){const{uniforms:t,schemaOptions:i}=e,{store:s}=i;if(r.style==="path"||r.outline&&r.outline.style!=="solid"&&r.outline.style!=="none"){const p=G.fromSimpleMarker(r);if(!p||!p.symbolLayers)throw new Error("Error handling marker! ");if(t.visualVariableRotation&&(p.angleAlignment="Map"),r.style!=="path"){const f=p.symbolLayers[0];if(ee(e.uniforms)){const m=P(e.uniforms,0,1);if(m>f.size){const _=m/f.size;f.size=m;const b=f.markerGraphics?.[0].symbol;(b.symbolLayers&&b.symbolLayers[0]).width*=_}}}return Y({type:"CIMSymbolReference",symbol:p},e)}const a=s.ensureInstance(v.marker,{uniforms:{visualVariableColor:t.visualVariableColor,visualVariableOpacity:t.visualVariableOpacity,visualVariableSizeMinMaxValue:t.visualVariableSizeMinMaxValue,visualVariableSizeScaleStops:t.visualVariableSizeScaleStops,visualVariableSizeStops:t.visualVariableSizeStops,visualVariableSizeUnitValue:t.visualVariableSizeUnitValue,visualVariableRotation:t.visualVariableRotation},optionalAttributes:{zoomRange:!1}}),n=Ke(r);let o=r.color?.toArray()??[0,0,0,0];n.resource.type==="CIMVectorMarker"&&(o=[255,255,255,255]);const l=r.style==="triangle"?124/116:1,c=r.size,d=c*l,u=t.visualVariableColor!=null&&(r.style==="cross"||r.style==="x");return[a.createMeshInfo({type:"simple",color:o,height:c,width:d,offsetX:r.xoffset,offsetY:r.yoffset,angle:r.angle,alignment:_e(t)?J.MAP:J.SCREEN,outlineColor:r.outline?.color?.toArray()??[0,0,0,0],outlineSize:r.outline?.width??1,referenceSize:c,sprite:n,overrideOutlineColor:u,hasSizeVV:ee(t),placement:null,effects:null,transforms:null,scaleInfo:null,minPixelBuffer:P(t)})]}function ur(r,e){const{uniforms:t,schemaOptions:i}=e,{store:s}=i,a=s.ensureInstance(v.marker,{uniforms:{visualVariableColor:t.visualVariableColor,visualVariableOpacity:t.visualVariableOpacity,visualVariableSizeMinMaxValue:t.visualVariableSizeMinMaxValue,visualVariableSizeScaleStops:t.visualVariableSizeScaleStops,visualVariableSizeStops:t.visualVariableSizeStops,visualVariableSizeUnitValue:t.visualVariableSizeUnitValue,visualVariableRotation:t.visualVariableRotation},optionalAttributes:{zoomRange:!1}}),n=G.createPictureMarkerRasterizationParam(r);return n?[a.createMeshInfo({type:"picture",color:[255,255,255,255],height:r.height,width:r.width,offsetX:r.xoffset,offsetY:r.yoffset,angle:r.angle,alignment:_e(t)?J.MAP:J.SCREEN,outlineColor:null,outlineSize:0,referenceSize:r.height,sprite:n,overrideOutlineColor:!1,hasSizeVV:ee(t),placement:null,effects:null,transforms:null,scaleInfo:null,minPixelBuffer:P(t)})]:[]}function cr(r,e,t){const{uniforms:i,schemaOptions:s}=t,{store:a}=s,n=a.ensureInstance(v.marker,{uniforms:{visualVariableColor:i.visualVariableColor,visualVariableOpacity:i.visualVariableOpacity,visualVariableSizeMinMaxValue:i.visualVariableSizeMinMaxValue,visualVariableSizeScaleStops:i.visualVariableSizeScaleStops,visualVariableSizeStops:i.visualVariableSizeStops,visualVariableSizeUnitValue:i.visualVariableSizeUnitValue,visualVariableRotation:i.visualVariableRotation},optionalAttributes:{zoomRange:!1}}),o=Ke(r),l=6,c=l*e.width,d=c,u=r.color?.toArray()??e.color?.toArray()??[0,0,0,0],p=r.style==="cross"||r.style==="x";let f;switch(r.placement){case"begin-end":f=le.Both;break;case"begin":f=le.JustBegin;break;case"end":f=le.JustEnd;break;default:f=le.None}const m={type:"cim-marker-placement-param",placement:{type:"CIMMarkerPlacementAtExtremities",angleToLine:!0,offset:0,extremityPlacement:f,offsetAlongLine:0},overrides:[]};return[n.createMeshInfo({type:"simple",color:u,height:d,width:c,offsetX:0,offsetY:0,angle:0,alignment:_e(i)?J.MAP:J.SCREEN,outlineColor:u,outlineSize:p?e.width:0,referenceSize:d/l,sprite:o,overrideOutlineColor:p&&i.visualVariableColor!=null,hasSizeVV:ee(i),placement:m,transforms:null,effects:null,scaleInfo:null,minPixelBuffer:P(i)})]}function dr(r,e){const{uniforms:t,schemaOptions:i}=e,{store:s}=i;return[s.ensureInstance(v.text,{uniforms:{visualVariableColor:t.visualVariableColor,visualVariableOpacity:t.visualVariableOpacity,visualVariableRotation:t.visualVariableRotation,visualVariableSizeMinMaxValue:t.visualVariableSizeMinMaxValue,visualVariableSizeScaleStops:t.visualVariableSizeScaleStops,visualVariableSizeStops:t.visualVariableSizeStops,visualVariableSizeUnitValue:t.visualVariableSizeUnitValue},optionalAttributes:{zoomRange:!1,clipAngle:!1,referenceSymbol:!1}}).createMeshInfo({boxBackgroundColor:r.backgroundColor?.toArray(),boxBorderLineColor:r.borderLineColor?.toArray(),boxBorderLineSize:r.borderLineSize??0,color:r.color?.toArray()??[0,0,0,0],offsetX:r.xoffset,offsetY:r.yoffset,postAngle:r.angle,fontSize:r.font.size,decoration:r.font.decoration,haloColor:r.haloColor?.toArray()??[0,0,0,0],haloSize:r.haloSize??0,outlineColor:[0,0,0,0],outlineSize:0,lineWidth:r.lineWidth,lineHeightRatio:r.lineHeight,horizontalAlignment:r.horizontalAlignment,verticalAlignment:r.verticalAlignment,useCIMAngleBehavior:!1,glyphs:{type:"text-rasterization-param",resource:{type:"text",font:r.font.toJSON(),textString:r.text,symbol:G.createCIMTextSymbolfromTextSymbol(r)},overrides:[]},referenceSize:null,effects:null,placement:null,scaleInfo:null,transforms:null,scaleFactor:1,minPixelBuffer:P(t),repeatLabel:null,repeatLabelDistance:null,allowOverrun:null,labelPosition:null})]}function pr(r,e){const{schemaOptions:t,uniforms:i}=e,{store:s}=t,a=r.symbol,{allowOverrun:n,repeatLabel:o,repeatLabelDistance:l}=r,c={maxScale:r.maxScale??0,minScale:r.minScale??0},d=s.ensureInstance(v.label,{uniforms:{visualVariableColor:null,visualVariableOpacity:null,visualVariableRotation:i.visualVariableRotation,visualVariableSizeMinMaxValue:i.visualVariableSizeMinMaxValue,visualVariableSizeScaleStops:i.visualVariableSizeScaleStops,visualVariableSizeStops:i.visualVariableSizeStops,visualVariableSizeUnitValue:i.visualVariableSizeUnitValue},optionalAttributes:{zoomRange:!0,clipAngle:!0,referenceSymbol:!0}}),u=r.labelPlacement,[p,f]=Mt(u);return[d.createMeshInfo({boxBackgroundColor:a.backgroundColor?.toArray(),boxBorderLineColor:a.borderLineColor?.toArray(),boxBorderLineSize:a.borderLineSize??0,color:a.color?.toArray()??[0,0,0,0],offsetX:a.xoffset,offsetY:a.yoffset,postAngle:a.angle,fontSize:a.font.size,decoration:a.font.decoration,outlineColor:[0,0,0,0],outlineSize:0,haloColor:a.haloColor?.toArray()??[0,0,0,0],haloSize:a.haloSize??0,lineWidth:a.lineWidth,lineHeightRatio:a.lineHeight,horizontalAlignment:p,verticalAlignment:f,repeatLabel:o,repeatLabelDistance:Q(l),allowOverrun:n,labelPosition:r.labelPosition,scaleInfo:c,minPixelBuffer:P(i),useCIMAngleBehavior:!1,glyphs:{type:"text-rasterization-param",resource:{type:"text",font:a.font.toJSON(),textString:a.text,symbol:G.createCIMTextSymbolfromTextSymbol(a),primitiveName:"label-override"},useLegacyLabelEvaluationRules:r.labelExpressionInfo?.expression==null,overrides:[{type:"CIMPrimitiveOverride",valueExpressionInfo:{type:"CIMExpressionInfo",expression:r.labelExpressionInfo?.expression??r.labelExpression,returnType:"String"},primitiveName:"label-override",propertyName:"textString",defaultValue:""}]},referenceSize:null,effects:null,placement:null,transforms:null,scaleFactor:1})]}function xe(r,e){const t=r.width;return{outlineColor:r.color?.toArray()||[0,0,0,1],width:t,referenceWidth:t,capType:r.cap??"round",joinType:r.join??"round",miterLimit:r.miterLimit,hasSizeVV:e}}function hr(r,e){const{uniforms:t,schemaOptions:i}=e,{store:s}=i,a=r.color?.toArray()??[0,0,0,0],n={type:"sprite-rasterization-param",resource:{type:"fill-style",style:r.style},overrides:[]};if(r.outline?.style==="solid")return[s.ensureInstance(v.patternOutlineFill,{uniforms:{visualVariableColor:t.visualVariableColor,visualVariableOpacity:t.visualVariableOpacity,visualVariableSizeScaleStops:t.visualVariableSizeOutlineScaleStops,visualVariableSizeMinMaxValue:null,visualVariableSizeStops:null,visualVariableSizeUnitValue:null},optionalAttributes:{zoomRange:!1}}).createMeshInfo({color:a,...xe(r.outline,!!t.visualVariableSizeOutlineScaleStops),sprite:n,scaleInfo:null,effects:null})];const o=[],l=s.ensureInstance(v.patternFill,{uniforms:{visualVariableColor:t.visualVariableColor,visualVariableOpacity:t.visualVariableOpacity},optionalAttributes:{zoomRange:!1}}).createMeshInfo({color:r.color?.toArray()??[0,0,0,0],sprite:n,scaleInfo:null,effects:null});return o.push(l),r.outline&&o.push(...j(r.outline,e,!0)),o}function fr(r,e){const{uniforms:t,schemaOptions:i}=e,{store:s}=i,a=r.color?.toArray()??[0,0,0,0];if(r.style!=="none"&&r.outline?.style==="solid")return[s.ensureInstance(v.outlineFill,{uniforms:{visualVariableColor:t.visualVariableColor,visualVariableOpacity:t.visualVariableOpacity,visualVariableSizeScaleStops:t.visualVariableSizeOutlineScaleStops,visualVariableSizeMinMaxValue:null,visualVariableSizeStops:null,visualVariableSizeUnitValue:null},optionalAttributes:{zoomRange:!1}}).createMeshInfo({color:a,...xe(r.outline,!!t.visualVariableSizeOutlineScaleStops),scaleInfo:null,effects:null})];const n=[];if(r.style!=="none"){const o=s.ensureInstance(v.fill,{uniforms:{visualVariableColor:t.visualVariableColor,visualVariableOpacity:t.visualVariableOpacity},optionalAttributes:{zoomRange:!1}}).createMeshInfo({color:a,scaleInfo:null,effects:null});n.push(o)}return r.outline&&n.push(...j(r.outline,e,!0)),n}async function Se(r,e){if(r.type==="cim")return Y(r.data,e);const{style:t}=r;return t&&t!=="none"&&t!=="solid"?hr(r,e):fr(r,e)}function yr(r,e){const{outline:t}=r,{uniforms:i,schemaOptions:s}=e,{store:a}=s,n=[],o=G.createPictureFillRasterizationParam(r);if(!o)return[];const{width:l,height:c,xoffset:d,yoffset:u,xscale:p,yscale:f}=r,m={color:[255,255,255,255],sprite:o,height:c,aspectRatio:l/c,offsetX:d,offsetY:u,scaleX:p,scaleY:f,angle:0,applyRandomOffset:!1,sampleAlphaOnly:!1,scaleProportionally:!1,effects:null,scaleInfo:null};if(t?.style==="solid")return[a.ensureInstance(v.complexOutlineFill,{uniforms:{visualVariableColor:i.visualVariableColor,visualVariableOpacity:i.visualVariableOpacity,visualVariableSizeScaleStops:i.visualVariableSizeOutlineScaleStops,visualVariableSizeMinMaxValue:null,visualVariableSizeStops:null,visualVariableSizeUnitValue:null},optionalAttributes:{zoomRange:!1}}).createMeshInfo({...m,...xe(t,!!i.visualVariableSizeOutlineScaleStops)})];const _=a.ensureInstance(v.complexFill,{uniforms:{visualVariableColor:i.visualVariableColor,visualVariableOpacity:i.visualVariableOpacity},optionalAttributes:{zoomRange:!1}});return n.push(_.createMeshInfo(m)),t&&n.push(...j(t,e,!0)),n}function j(r,e,t){const{color:i,style:s,width:a,cap:n,join:o}=r,{schemaOptions:l}=e,{store:c}=l,d=[],u=t?{...fe,visualVariableSizeScaleStops:e.uniforms.visualVariableSizeOutlineScaleStops}:e.uniforms,p={uniforms:{visualVariableColor:u.visualVariableColor,visualVariableOpacity:u.visualVariableOpacity,visualVariableSizeMinMaxValue:u.visualVariableSizeMinMaxValue,visualVariableSizeScaleStops:u.visualVariableSizeScaleStops,visualVariableSizeStops:u.visualVariableSizeStops,visualVariableSizeUnitValue:u.visualVariableSizeUnitValue},optionalAttributes:{zoomRange:!1}},f={color:i?.toArray()??[0,0,0,0],width:a,referenceWidth:a,capType:n,joinType:o,miterLimit:r.miterLimit,hasSizeVV:ee(u),effects:null,scaleInfo:null};if(s==null||s==="solid"){const m=c.ensureInstance(v.line,p).createMeshInfo(f);d.push(m)}else if(s!=="none"){const m=c.ensureInstance(v.texturedLine,p).createMeshInfo({...f,offsetAlongLine:0,shouldScaleDash:!0,shouldSampleAlphaOnly:!1,isSDF:!0,sprite:{type:"sprite-rasterization-param",resource:{type:"dash",dashTemplate:At(s,n)},overrides:[]}});d.push(m)}return r.marker!=null&&d.push(...cr(r.marker,r,e)),d}async function te(r,e,t){const i=e.labelsVisible&&e.labelingInfo||[],s=E(e),a=yt(i,s);return{type:"label",classes:await Promise.all(a.map((n,o)=>mr(r,n,o,t)))}}async function mr(r,e,t,i){const s=await O(e,{path:`${t}`,schemaOptions:r,uniforms:i});return{maxScale:e.maxScale,minScale:e.minScale,expression:e.labelExpressionInfo?.expression??e.labelExpression,where:e.where,meshes:s}}async function re(r,e){if(!e)return{type:"simple",meshes:[]};switch(e.type){case"simple":return gr(r,e);case"dot-density":return br(r,e);case"class-breaks":return Sr(r,e);case"unique-value":return vr(r,e);case"dictionary":return _r(e);case"heatmap":return wr(r,e);case"pie-chart":return Vr(r,e)}}async function gr(r,e){const t=e.getSymbols(),i=t.length?t[0]:null,s=F(e);return{type:"simple",meshes:await O(i,{schemaOptions:r,uniforms:s,path:"renderer.symbol"})}}async function br(r,e){const t=F(e);return{type:"dot-density",meshes:await nr(e,{schemaOptions:r,uniforms:t,path:"renderer.symbol"})}}async function Sr(r,e){const t=F(e),i=e.backgroundFillSymbol,s=e.normalizationType,a=s==="log"?"esriNormalizeByLog":s==="percent-of-total"?"esriNormalizeByPercentOfTotal":s==="field"?"esriNormalizeByField":null,n=e.classBreakInfos.map(async d=>({meshes:await O(d.symbol,{path:`renderer-stop-${d.minValue}-${d.maxValue}`,schemaOptions:r,uniforms:t}),min:d.minValue,max:d.maxValue})),o=(await Promise.all(n)).sort((d,u)=>d.min-u.min),l=await O(i,{schemaOptions:r,path:"renderer.backgroundFill",uniforms:{...fe,visualVariableSizeOutlineScaleStops:t.visualVariableSizeOutlineScaleStops}}),c=await O(e.defaultSymbol,{schemaOptions:r,path:"renderer.defaultSymbol",uniforms:t});return{type:"interval",field:e.field,expression:e.valueExpression,backgroundFill:l,defaultSymbol:c,intervals:o,normalizationField:e.normalizationField,normalizationTotal:e.normalizationTotal,normalizationType:a,isMaxInclusive:e.isMaxInclusive}}async function vr(r,e){const t=[],i=F(e),s=await O(e.backgroundFillSymbol,{schemaOptions:r,path:"renderer.backgroundFill",uniforms:{...fe,visualVariableSizeOutlineScaleStops:i.visualVariableSizeOutlineScaleStops}}),a=await O(e.defaultSymbol,{schemaOptions:r,path:"renderer.defaultSymbol",uniforms:i});for(const n of e.uniqueValueInfos??[]){const o=await O(n.symbol,{path:`renderer-unique-value-${n.value}`,schemaOptions:r,uniforms:i});t.push({value:""+n.value,symbol:o})}return{type:"map",field:e.field,expression:e.valueExpression,field2:e.field2,field3:e.field3,fieldDelimiter:e.fieldDelimiter,backgroundFill:s,defaultSymbol:a,map:t}}function _r(r){const e=F(r),t=r.scaleExpression,i=t!=null&&t!=="1"?{valueExpressionInfo:{type:"CIMExpressionInfo",expression:r.scaleExpression,returnType:"Numeric"},defaultValue:1}:void 0;return{type:"dictionary",fieldMap:r.fieldMap,scaleExpression:i,visualVariableUniforms:e}}async function wr(r,e){return{type:"heatmap",meshes:await or(e,r)}}async function Vr(r,e){return{type:"pie-chart",meshes:await lr(e,r)}}async function Ir(r,e){const t=e.renderer,i=F(t);return{symbology:await re(r,t),labels:await te(r,e,i)}}async function A(r,e,t,i){const s=t.featureReduction;if(s)switch(s.type){case"binning":return Fr(s,r,e,t,i);case"cluster":return Er(s,r,e,t,i)}const a=Rr(t.orderBy,t.renderer,t.objectIdField),n=we(t.renderer,e.filters),o=await Ir(r,t),l=Fe(o.symbology);return{storage:n,mesh:{properties:{sortKey:a,timeZone:e.timeZone,returnMeshObjectId:l,displayRefreshVersion:i},strategy:{type:"feature"},factory:o}}}function Ze(r,e){return r.fields.map(t=>({...t.toJSON(),type:xr(t,e)}))}function xr(r,e){const{onStatisticExpression:t,onStatisticField:i,statisticType:s}=r;switch(s){case"min":case"max":case"avg":case"avg_angle":case"sum":case"count":return"esriFieldTypeDouble";case"mode":{if(t){const{returnType:n}=t;return n?n==="string"?"esriFieldTypeString":"esriFieldTypeDouble":"esriFieldTypeString"}const a=e.find(n=>n.name===i);return a?a.type:"esriFieldTypeString"}}}async function Fr(r,e,t,i,s){const a=Ze(r,i.fields),n=r.renderer,o=await re(e,n),l=we(n,[null,null]),c=F(n),d=await te(e,{geometryType:"polygon",labelingInfo:r.labelingInfo,labelsVisible:r.labelsVisible},c),u=Fe(o),p=r.binType==="geohash"?{type:"geohash",fixBinLevel:r.fixedBinLevel??3}:{type:"grid",size:Q(r.size),fixedBinLevel:r.fixedBinLevel};return{storage:l,mesh:{properties:{sortKey:null,timeZone:t.timeZone,returnMeshObjectId:u,displayRefreshVersion:s},strategy:{type:"binning",fields:a,index:p,featureFilter:t.filters[0]},factory:{labels:d,symbology:o}}}}async function Er(r,e,t,i,s){const a=Ze(r,i.fields),n={type:"cluster",feature:await re(e,r.effectiveFeatureRenderer),cluster:await re(e,r.effectiveClusterRenderer)},o=F(r.effectiveFeatureRenderer),l={type:"cluster",feature:await te(e,i,o),cluster:await te(e,{geometryType:"point",labelingInfo:r.labelingInfo,labelsVisible:r.labelsVisible},o)},c=we(r.effectiveFeatureRenderer,[null,null]),d=Fe(n);return{storage:c,mesh:{properties:{sortKey:null,timeZone:t.timeZone,displayRefreshVersion:s,returnMeshObjectId:d},strategy:{type:"cluster",fields:a,featureFilter:t.filters[0],clusterRadius:Q(r.clusterRadius/2)},factory:{labels:l,symbology:n}}}}function Rr(r,e,t){const i=e!=null&&e.type==="unique-value"&&e.orderByClassesEnabled;if(r!=="default"||i||(r=[new mt({field:t,order:"descending"})]),r!=="default"&&r?.length){r.length;const s=r[0],a=s.order==="ascending"?"asc":"desc";return s.field?{field:s.field,order:a}:s.valueExpression?{expression:s.valueExpression,order:a}:null}return i?{byRenderer:!0,order:"asc"}:null}function K(r){return r.techniqueType===Ve.AnimatedMarker}function Fe(r){return!!(r.type==="simple"&&r.meshes.some(K)||r.type==="interval"&&(r.intervals.some(e=>e.meshes.some(K))||r.backgroundFill.some(K))||r.type==="map"&&(r.map.some(e=>e.symbol.some(K))||r.backgroundFill.some(K)))}let Cr=class{constructor(e){this.layer=e}getLabelingDeconflictionInfo(e){const t=this.layer,i=z(t);return[{vvEvaluators:{0:M(t.renderer)},deconflictionEnabled:i}]}async createServiceOptions(e){const t=this.layer,{capabilities:i,editingInfo:s,objectIdField:a,globalIdField:n,datesInUnknownTimezone:o,orderBy:l,parsedUrl:c}=t,d=t.fieldsIndex.toJSON(),u=E(t),p=t.timeInfo?.toJSON(),f=t.spatialReference.toJSON(),m=se(c);let _=a;if(l?.length){const b=!l[0].valueExpression&&l[0].field;b&&(_=b)}return{type:"feature-service",source:m,isSourceHosted:he(m.path),orderByFields:_,outSpatialReference:e.spatialReference.toJSON(),metadata:{timeReferenceUnknownClient:o,globalIdField:n,fieldsIndex:d,geometryType:u,objectIdField:a,timeInfo:p,spatialReference:f,subtypeField:null,subtypes:null,typeIdField:null,types:null},queryMetadata:{maxRecordCount:i.query.maxRecordCount,supportsCompactGeometry:i.query.supportsCompactGeometry,supportsDefaultSpatialReference:i.query.supportsDefaultSpatialReference,supportsFormatPBF:i.query.supportsFormatPBF,supportsMaxRecordCountFactor:i.query.supportsMaxRecordCountFactor,supportsQuantization:i.query.supportsQuantization,lastEditDate:s?.lastEditDate?.getTime(),snapshotInfo:null}}}createSourceSchema(e,t){const{definitionExpression:i,customParameters:s,timeExtent:a,apiKey:n}=this.layer;return N({definitionExpression:i,customParameters:s,timeExtent:a},e,t,n)}createProcessorSchema(e,t,i){const{fields:s,geometryType:a,orderBy:n,objectIdField:o,renderer:l,labelingInfo:c,labelsVisible:d}=this.layer,u={featureReduction:null,fields:s.map(p=>p.toJSON()),geometryType:a,labelingInfo:c,labelsVisible:d,objectIdField:o,orderBy:n??"default",renderer:l?.clone()};return A(e,t,u,i)}get hasRequiredSupport(){return $(this.layer.renderer)}get timeOptions(){return this.layer}getUpdateHashProperties(e){const t=this.layer,{definitionExpression:i,apiKey:s,renderer:a}=t,n=this.layer.labelsVisible?this.layer.labelingInfo:null,o=JSON.stringify(t.customParameters),l=JSON.stringify(t.orderBy);return{outFields:this.layer.outFields,apiKey:s,customParameters:o,definitionExpression:i,labelingInfo:n,orderBy:l,renderer:a}}setGraphicOrigin(e){e.origin={type:"catalog",layer:this.layer}}};function Ee(r,e){const t=r.extent,i=e?.clone().intersection(t),s=i!=null?i.width*i.height:0,a=e?e.width*e.height:0,n=a===0?0:s/a,o=g("featurelayer-snapshot-point-coverage");return!isNaN(n)&&n>=o}function H(r,e){return r.floorInfo!=null&&(r.floorInfo.viewAllLevelIds.length>0||e.floors.length>0)}function Re(r,e,t){const i=Or(r,e?.where,t);return i&&(e??=new pe,e.where=i),e}function Or(r,e,t){if(r.floorInfo==null||!t.floors?.length)return e;let i=t.floors;const{floorField:s,viewAllLevelIds:a}=r.floorInfo;a.length&&(i=a);const n=i.filter(l=>l!=="").map(l=>"'"+l+"'");if(n.push("''"),e?.includes(s)){let l=new RegExp("AND \\("+s+".*NULL\\)","g");e=e.replace(l,""),l=new RegExp("\\("+s+".*NULL\\)","g"),e=(e=e.replace(l,"")).replaceAll(/\s+/g," ").trim()}let o="("+s+" IN ({ids}) OR "+s+" IS NULL)";return o=o.replace("{ids}",n.join(", ")),ve(e,o)}let zr=class{constructor(e){this.layer=e}getLabelingDeconflictionInfo(e){const t=this.layer,i=k(t,e)??z(t);return[{vvEvaluators:{0:M(t.renderer)},deconflictionEnabled:i}]}async createServiceOptions(e){const t=this.layer,{capabilities:i,editingInfo:s,objectIdField:a,typeIdField:n,globalIdField:o,datesInUnknownTimezone:l,orderBy:c,subtypeField:d,refreshInterval:u}=t,p=t.fieldsIndex.toJSON(),f=E(t),m=t.timeInfo?.toJSON(),_=t.spatialReference.toJSON(),b=t.types?.map(U=>U.toJSON()),R=se(this.layer.parsedUrl);this.layer.dynamicDataSource&&(R.query={layer:JSON.stringify({source:this.layer.dynamicDataSource})});let ae=this.layer.objectIdField;if(c?.length){const U=!c[0].valueExpression&&c[0].field;U&&(ae=U)}const ye=s?.lastEditDate==null&&u>0,Ce=!!g("featurelayer-snapshot-enabled")&&t.geometryType==="point"&&i?.query.supportsPagination&&!i?.operations.supportsEditing&&!ye,Ye=Ce&&Ee(e,t.fullExtent);return{type:"feature-service",source:R,isSourceHosted:he(R.path),orderByFields:ae,outSpatialReference:e.spatialReference.toJSON(),metadata:{typeIdField:n??void 0,types:b,timeReferenceUnknownClient:l,subtypeField:d,globalIdField:o,fieldsIndex:p,geometryType:f,objectIdField:a,timeInfo:m,spatialReference:_,subtypes:this.layer.subtypes?.map(U=>U.toJSON())},queryMetadata:{maxRecordCount:i.query.maxRecordCount,supportsCompactGeometry:i.query.supportsCompactGeometry,supportsDefaultSpatialReference:i.query.supportsDefaultSpatialReference,supportsFormatPBF:i.query.supportsFormatPBF,supportsMaxRecordCountFactor:i.query.supportsMaxRecordCountFactor,supportsQuantization:i.query.supportsQuantization,lastEditDate:s?.lastEditDate?.getTime(),snapshotInfo:{supportsSnapshotMinThreshold:Ce,supportsSnapshotMaxThreshold:Ye,snapshotCountThresholds:{min:g("featurelayer-snapshot-point-min-threshold"),max:g("featurelayer-snapshot-point-max-threshold")}}}}}createSourceSchema(e,t){const{definitionExpression:i,customParameters:s,gdbVersion:a,historicMoment:n,subtypeCode:o,subtypeField:l,timeExtent:c,apiKey:d}=this.layer;return N({definitionExpression:i,customParameters:s,gdbVersion:a,historicMoment:n,subtypeCode:o,subtypeField:l,timeExtent:c},e,t,d)}createProcessorSchema(e,t,i){const{fields:s,renderer:a,geometryType:n,labelingInfo:o,labelsVisible:l,orderBy:c,objectIdField:d}=this.layer,u={fields:s.map(p=>p.toJSON()),renderer:a?.clone(),featureReduction:I(this.layer,t),geometryType:n,labelingInfo:o,labelsVisible:l,objectIdField:d,orderBy:c??"default"};return A(e,t,u,i)}get hasRequiredSupport(){return $(this.layer.renderer)}get timeOptions(){return this.layer}hasFilters(e){return H(this.layer,e)}addFilters(e,t){return Re(this.layer,e,t)}getUpdateHashProperties(e){const t=this.layer,{definitionExpression:i,renderer:s,gdbVersion:a,apiKey:n,subtypeCode:o}=t,l=this.layer.labelsVisible?this.layer.labelingInfo:null,c=t.historicMoment?.getTime()??void 0,d=JSON.stringify(t.customParameters),u=I(t,e),p=JSON.stringify(t.orderBy),f=H(this.layer,e)?e.floors:null;return{outFields:this.layer.outFields,apiKey:n,customParameters:d,definitionExpression:i,featureReduction:u,floors:f,gdbVersion:a,historicMoment:c,labelingInfo:l,orderBy:p,renderer:s,subtypeCode:o}}};function Tr(r){if(!("openPorts"in r))throw new D("source-not-supported")}class De{constructor(e){this.layer=e}getLabelingDeconflictionInfo(e){const t=this.layer,i=k(t,e)??z(t);return[{vvEvaluators:{0:M(t.renderer)},deconflictionEnabled:i}]}async createServiceOptions(e){const t=this.layer,{capabilities:i,objectIdField:s}=t,a=t.fieldsIndex.toJSON(),n=E(t),o=t.timeInfo?.toJSON(),l=t.spatialReference.toJSON();return Tr(t.source),{type:"memory",source:await t.source.openPorts(),orderByFields:s,outSpatialReference:e.spatialReference.toJSON(),metadata:{fieldsIndex:a,geometryType:n,objectIdField:s,timeInfo:o,spatialReference:l,subtypes:null,subtypeField:null,globalIdField:null,typeIdField:null,types:null,timeReferenceUnknownClient:null},queryMetadata:{maxRecordCount:i.query.maxRecordCount,supportsCompactGeometry:i.query.supportsCompactGeometry,supportsDefaultSpatialReference:i.query.supportsDefaultSpatialReference,supportsFormatPBF:i.query.supportsFormatPBF,supportsMaxRecordCountFactor:i.query.supportsMaxRecordCountFactor,supportsQuantization:i.query.supportsQuantization,lastEditDate:null,snapshotInfo:null}}}createSourceSchema(e,t){const{definitionExpression:i,timeExtent:s}=this.layer;return N({definitionExpression:i,timeExtent:s,customParameters:null},e,t,null)}createProcessorSchema(e,t,i){const{fields:s,renderer:a,geometryType:n,labelingInfo:o,labelsVisible:l,orderBy:c,objectIdField:d}=this.layer,u={fields:s.map(p=>p.toJSON()),renderer:a?.clone(),featureReduction:I(this.layer,t),geometryType:n,labelingInfo:o,labelsVisible:l,objectIdField:d,orderBy:c??"default"};return A(e,t,u,i)}get hasRequiredSupport(){return $(this.layer.renderer)}get timeOptions(){return this.layer}getUpdateHashProperties(e){const t=this.layer,{definitionExpression:i,renderer:s}=t,a=this.layer.labelsVisible?this.layer.labelingInfo:null,n=I(t,e),o=JSON.stringify(t.orderBy);return{outFields:this.layer.outFields,orderBy:o,definitionExpression:i,renderer:s,labelingInfo:a,featureReduction:n}}}class $r{constructor(e){this.layer=e}getLabelingDeconflictionInfo(e){const t=this.layer,i=k(t,e)??z(t);return[{vvEvaluators:{0:M(t.renderer)},deconflictionEnabled:i}]}async createServiceOptions(e){const t=this.layer,{capabilities:i,objectIdField:s}=t,a=t.fieldsIndex.toJSON(),n=E(t),o=t.spatialReference.toJSON();return{type:"memory",source:await t.source.openPorts(),orderByFields:s,outSpatialReference:e.spatialReference.toJSON(),metadata:{fieldsIndex:a,geometryType:n,objectIdField:s,spatialReference:o,globalIdField:null,subtypeField:null,subtypes:null,timeInfo:t.timeInfo?.toJSON(),timeReferenceUnknownClient:null,typeIdField:null,types:null},queryMetadata:{maxRecordCount:i.query.maxRecordCount,supportsCompactGeometry:i.query.supportsCompactGeometry,supportsDefaultSpatialReference:i.query.supportsDefaultSpatialReference,supportsFormatPBF:i.query.supportsFormatPBF,supportsMaxRecordCountFactor:i.query.supportsMaxRecordCountFactor,supportsQuantization:i.query.supportsQuantization,lastEditDate:null,snapshotInfo:null}}}createSourceSchema(e,t){const{definitionExpression:i}=this.layer;return N({definitionExpression:i,customParameters:null},e,t,null)}createProcessorSchema(e,t,i){const{fields:s,renderer:a,geometryType:n,labelingInfo:o,labelsVisible:l,objectIdField:c}=this.layer,d={fields:s.map(u=>u.toJSON()),renderer:a?.clone(),featureReduction:I(this.layer,t),geometryType:n,labelingInfo:o,labelsVisible:l,objectIdField:c,orderBy:"default"};return A(e,t,d,i)}get hasRequiredSupport(){return $(this.layer.renderer)}get timeOptions(){return this.layer}getUpdateHashProperties(e){const t=this.layer,{definitionExpression:i,renderer:s}=t;return{definitionExpression:i,renderer:s,labelingInfo:this.layer.labelsVisible?this.layer.labelingInfo:null,featureReduction:I(t,e)}}}let Mr=class{constructor(e){this.layer=e}getLabelingDeconflictionInfo(e){const t=this.layer,i=k(t,e)??z(t);return[{vvEvaluators:{0:M(t.renderer)},deconflictionEnabled:i}]}async createServiceOptions(e){const t=this.layer,{capabilities:i,objectIdField:s}=t,a=t.fieldsIndex.toJSON(),n=E(t),o=t.timeInfo?.toJSON(),l=t.spatialReference.toJSON(),c=t.source.getSource(),d=this.layer.objectIdField,u=se(i);return u.query.maxRecordCount=c.maxRecordCount,{type:"ogc",source:c,orderByFields:d,outSpatialReference:e.spatialReference.toJSON(),metadata:{fieldsIndex:a,geometryType:n,objectIdField:s,timeInfo:o,spatialReference:l,globalIdField:null,subtypeField:null,subtypes:null,timeReferenceUnknownClient:null,typeIdField:null,types:null},queryMetadata:{maxRecordCount:u.query.maxRecordCount,supportsCompactGeometry:u.query.supportsCompactGeometry,supportsDefaultSpatialReference:u.query.supportsDefaultSpatialReference,supportsFormatPBF:u.query.supportsFormatPBF,supportsMaxRecordCountFactor:u.query.supportsMaxRecordCountFactor,supportsQuantization:u.query.supportsQuantization,lastEditDate:null,snapshotInfo:null}}}createSourceSchema(e,t){const{customParameters:i,timeExtent:s,apiKey:a}=this.layer;return N({customParameters:i,timeExtent:s},e,t,a)}createProcessorSchema(e,t,i){const{fields:s,renderer:a,geometryType:n,labelingInfo:o,labelsVisible:l,orderBy:c,objectIdField:d}=this.layer,u={fields:s.map(p=>p.toJSON()),renderer:a?.clone(),featureReduction:I(this.layer,t),geometryType:n,labelingInfo:o,labelsVisible:l,objectIdField:d,orderBy:c??"default"};return A(e,t,u,i)}get hasRequiredSupport(){return $(this.layer.renderer)}get timeOptions(){return this.layer}getUpdateHashProperties(e){const t=this.layer,{renderer:i,apiKey:s}=t,a=this.layer.labelsVisible?this.layer.labelingInfo:null;return{apiKey:s,customParameters:JSON.stringify(t.customParameters),featureReduction:I(t,e),labelingInfo:a,orderBy:JSON.stringify(t.orderBy),renderer:i}}},Ar=class{constructor(e){this.layer=e}getLabelingDeconflictionInfo(e){const t=this.layer,i=k(t,e)??z(t);return[{vvEvaluators:{0:M(t.renderer)},deconflictionEnabled:i}]}async createServiceOptions(e){const t=this.layer,{capabilities:i,objectIdField:s,globalIdField:a,orderBy:n,refreshInterval:o}=t,l=t.fieldsIndex.toJSON(),c=E(t),d=t.timeInfo?.toJSON(),u=t.spatialReference.toJSON(),p=se(this.layer.parsedUrl);let f=this.layer.objectIdField;if(n?.length){const R=!n[0].valueExpression&&n[0].field;R&&(f=R)}const m=o>0,_=!!g("featurelayer-snapshot-enabled")&&t.geometryType==="point"&&i?.query.supportsPagination&&!i?.operations.supportsEditing&&!m,b=_&&Ee(e,t.fullExtent);return{type:"feature-service",source:p,isSourceHosted:he(p.path),orderByFields:f,outSpatialReference:e.spatialReference.toJSON(),metadata:{globalIdField:a,fieldsIndex:l,geometryType:c,objectIdField:s,timeInfo:d,spatialReference:u,timeReferenceUnknownClient:!1,subtypeField:null,subtypes:null,typeIdField:null,types:null},queryMetadata:{maxRecordCount:i.query.maxRecordCount,supportsCompactGeometry:i.query.supportsCompactGeometry,supportsDefaultSpatialReference:i.query.supportsDefaultSpatialReference,supportsFormatPBF:i.query.supportsFormatPBF,supportsMaxRecordCountFactor:i.query.supportsMaxRecordCountFactor,supportsQuantization:i.query.supportsQuantization,lastEditDate:null,snapshotInfo:{supportsSnapshotMinThreshold:_,supportsSnapshotMaxThreshold:b,snapshotCountThresholds:{min:g("featurelayer-snapshot-point-min-threshold"),max:g("featurelayer-snapshot-point-max-threshold")}}}}}createSourceSchema(e,t){const{definitionExpression:i,customParameters:s,timeExtent:a}=this.layer;return N({definitionExpression:i,customParameters:s,timeExtent:a},e,t,null)}createProcessorSchema(e,t,i){const{fields:s,renderer:a,geometryType:n,labelingInfo:o,labelsVisible:l,orderBy:c,objectIdField:d}=this.layer,u={fields:s.map(p=>p.toJSON()),renderer:a?.clone(),featureReduction:I(this.layer,t),geometryType:n,labelingInfo:o,labelsVisible:l,objectIdField:d,orderBy:c??"default"};return A(e,t,u,i)}get hasRequiredSupport(){return $(this.layer.renderer)}get timeOptions(){return this.layer}hasFilters(e){return H(this.layer,e)}addFilters(e,t){return Re(this.layer,e,t)}getUpdateHashProperties(e){const t=this.layer,{definitionExpression:i,renderer:s,outFields:a}=t,n=this.layer.labelsVisible?this.layer.labelingInfo:null,o=JSON.stringify(t.customParameters),l=I(t,e);return{outFields:a,orderBy:JSON.stringify(t.orderBy),definitionExpression:i,renderer:s,labelingInfo:n,featureReduction:l,customParameters:o,floors:H(this.layer,e)?e.floors:null}}},qr=class{constructor(e){this.layer=e}get hasRequiredSupport(){return $(this.layer.renderer)}get timeOptions(){return null}getLabelingDeconflictionInfo(e){const t=this.layer,i=k(t,e)??z(t);return[{vvEvaluators:{0:M(t.renderer)},deconflictionEnabled:i}]}getUpdateHashProperties(e){const t=this.layer,{renderer:i}=t,s=this.layer.labelsVisible?this.layer.labelingInfo:null,a=JSON.stringify(t.customParameters),n=I(t,e),o=JSON.stringify(t.orderBy);return{outFields:this.layer.outFields,labelingInfo:s,featureReduction:n,customParameters:a,orderBy:o,renderer:i}}async createServiceOptions(e){const t=E(this.layer);return{type:"parquet",source:{urls:this.layer.urls.items},outSpatialReference:e.spatialReference.toJSON(),geometryInfo:this.layer.source.geometryInfo,metadata:{spatialReference:this.layer.spatialReference,fieldsIndex:this.layer.fieldsIndex.toJSON(),objectIdField:this.layer.objectIdField,geometryType:t,types:null,subtypes:null,timeInfo:null,typeIdField:null,subtypeField:null,globalIdField:null,timeReferenceUnknownClient:null}}}createSourceSchema(e,t){return{type:"parquet",mutable:{sourceRefreshVersion:t,availableFields:e.availableFields,dataFilter:{customParameters:this.layer.customParameters??null}}}}createProcessorSchema(e,t,i){const s={fields:this.layer.fields.map(a=>a.toJSON()),renderer:this.layer.renderer?.clone(),featureReduction:I(this.layer,t),geometryType:this.layer.geometryType,labelingInfo:this.layer.labelingInfo,labelsVisible:this.layer.labelsVisible,objectIdField:this.layer.objectIdField,orderBy:this.layer.orderBy};return A(e,t,s,i)}};class Pr{constructor(e){this.layer=e}getLabelingDeconflictionInfo(e){const t=this.layer,i=k(t,e)??z(t);return[{vvEvaluators:{0:M(t.renderer)},deconflictionEnabled:i}]}async createServiceOptions(e){const t=this.layer,{objectIdField:i}=t,s=E(t),a=t.timeInfo?.toJSON()||null,n=t.spatialReference?t.spatialReference.toJSON():null;return{type:"stream",source:this.layer.parsedUrl,outSpatialReference:e.spatialReference.toJSON(),metadata:{fieldsIndex:this.layer.fieldsIndex.toJSON(),geometryType:s,objectIdField:i,timeInfo:a,timeReferenceUnknownClient:null,spatialReference:n,subtypeField:null,subtypes:null,globalIdField:null,typeIdField:null,types:null}}}createSourceSchema(e,t){const{definitionExpression:i,geometryDefinition:s,customParameters:a}=this.layer;return{type:"stream",mutable:{sourceRefreshVersion:t,availableFields:e.availableFields,dataFilter:{geometryDefinition:s?.toJSON(),definitionExpression:i,customParameters:a??null,maxReconnectionAttempts:this.layer.maxReconnectionAttempts,maxReconnectionInterval:this.layer.maxReconnectionInterval,purgeOptions:this.layer.purgeOptions.toJSON()}}}}createProcessorSchema(e,t,i){const{fields:s,renderer:a,geometryType:n,labelingInfo:o,labelsVisible:l,objectIdField:c}=this.layer,d={fields:s.map(u=>u.toJSON()),renderer:a?.clone(),featureReduction:I(this.layer,t),geometryType:n,labelingInfo:o,labelsVisible:l,objectIdField:c,orderBy:"default"};return A(e,t,d,i)}get hasRequiredSupport(){return $(this.layer.renderer)}get timeOptions(){return this.layer}getUpdateHashProperties(e){const t=this.layer,{definitionExpression:i,renderer:s}=t,a=this.layer.labelsVisible?this.layer.labelingInfo:null,n=JSON.stringify(t.customParameters);return{definitionExpression:i,renderer:s,labelingInfo:a,featureReduction:I(t,e),customParameters:n,geometryDefinition:t.geometryDefinition,definitionExpressoin:t.definitionExpression}}}async function kr(r,{subtypeField:e,sublayers:t}){const i=await Promise.all(t.map(({renderer:s})=>re(r,s)));return{type:"subtype",subtypeField:e,renderers:t.reduce((s,{subtypeCode:a},n)=>({...s,[a]:i[n]}),{})}}function Nr(r,e){const t=gt();return{type:"subtype",filters:r.filters,capabilities:{maxTextureSize:t.maxTextureSize},subtypeField:e.subtypeField,target:"feature",bindings:e.sublayers.reduce((i,{renderer:s,subtypeCode:a})=>{const n=Tt(s);return{...i,[a]:n}},{})}}async function Ur(r,{subtypeField:e,sublayers:t}){const i=await Promise.all(t.map(s=>{const a=F(s.renderer),n={...s,geometryType:s.geometryType??null};return te(r,n,a)}));return{type:"subtype",subtypeField:e,renderers:t.reduce((s,{subtypeCode:a},n)=>({...s,[a]:i[n]}),{})}}async function Br(r,e,t,i){return{storage:Nr(e,t),mesh:{properties:{timeZone:e.timeZone,displayRefreshVersion:i,returnMeshObjectId:!1,sortKey:null},strategy:{type:"feature"},factory:{symbology:await kr(r,t),labels:await Ur(r,t)}}}}class Lr{constructor(e){this.layer=e}getLabelingDeconflictionInfo(e){return[{vvEvaluators:{},deconflictionEnabled:this.layer.sublayers.every(t=>z(t))}]}async createServiceOptions(e){const t=this.layer,{capabilities:i,datesInUnknownTimezone:s,editingInfo:a,globalIdField:n,objectIdField:o,refreshInterval:l,subtypeField:c}=t,d=t.fieldsIndex.toJSON(),u=E(t),p=t.timeInfo?.toJSON(),f=t.spatialReference.toJSON(),m=se(this.layer.parsedUrl),_=o,b=a?.lastEditDate==null&&l>0,R=!!g("featurelayer-snapshot-enabled")&&t.geometryType==="point"&&i?.query.supportsPagination&&!i?.operations.supportsEditing&&!b,ae=R&&Ee(e,t.fullExtent);return{type:"feature-service",source:m,isSourceHosted:he(m.path),orderByFields:_,outSpatialReference:e.spatialReference.toJSON(),metadata:{timeReferenceUnknownClient:s,subtypeField:c,globalIdField:n,fieldsIndex:d,geometryType:u,objectIdField:o,timeInfo:p,spatialReference:f,subtypes:this.layer.subtypes?.map(ye=>ye.toJSON()),typeIdField:null,types:null},queryMetadata:{maxRecordCount:i.query.maxRecordCount,supportsCompactGeometry:i.query.supportsCompactGeometry,supportsDefaultSpatialReference:i.query.supportsDefaultSpatialReference,supportsFormatPBF:i.query.supportsFormatPBF,supportsMaxRecordCountFactor:i.query.supportsMaxRecordCountFactor,supportsQuantization:i.query.supportsQuantization,lastEditDate:a?.lastEditDate?.getTime(),snapshotInfo:{supportsSnapshotMinThreshold:R,supportsSnapshotMaxThreshold:ae,snapshotCountThresholds:{min:g("featurelayer-snapshot-point-min-threshold"),max:g("featurelayer-snapshot-point-max-threshold")}}}}}createSourceSchema(e,t){const{definitionExpression:i,customParameters:s,gdbVersion:a,historicMoment:n,subtypeField:o,timeExtent:l,apiKey:c}=this.layer,d={queryScaleRanges:this.layer.sublayers.items.map(u=>({subtypeCode:u.subtypeCode,minScale:u.minScale,maxScale:u.maxScale})),definitionExpression:i,customParameters:s,gdbVersion:a,historicMoment:n,subtypeField:o,timeExtent:l};return N(d,e,t,c)}createProcessorSchema(e,t,i){const s={subtypeField:this.layer.subtypeField,sublayers:Array.from(this.layer.sublayers,a=>({featureReduction:null,geometryType:this.layer.geometryType,labelingInfo:a.labelingInfo,labelsVisible:a.labelsVisible,renderer:a.renderer,subtypeCode:a.subtypeCode,orderBy:null}))};return Br(e,t,s,i)}hasFilters(e){return H(this.layer,e)||Dr(this.layer,e)}addFilters(e,t){e=Re(this.layer,e,t);const i=this.layer.sublayers.filter(a=>!Xe(a,t)).map(a=>a.subtypeCode);if(!i.length)return e;e??=new pe;const s=`NOT ${this.layer.subtypeField} IN (${i.join(",")})`;return e.where=ve(e.where,s),e}get hasRequiredSupport(){return!0}get timeOptions(){return this.layer}getUpdateHashProperties(e){const t=this.layer,{definitionExpression:i,gdbVersion:s,apiKey:a}=t,n=t.historicMoment?.getTime()??void 0,o=JSON.stringify(t.customParameters),l=H(this.layer,e)?e.floors:null,c=this.layer.sublayers.map(({renderer:d,labelsVisible:u,labelingInfo:p,visible:f})=>({renderer:d,labelsVisible:u,labelingInfo:p,visible:f}));return{outFields:this.layer.outFields,gdbVersion:s,definitionExpression:i,historicMoment:n,customParameters:o,apiKey:a,sublayers:c,floors:l}}setGraphicOrigin(e){const t=this.layer.fieldsIndex.get(this.layer.subtypeField),i=e.attributes[t.name],s=this.layer.sublayers.find(a=>a.subtypeCode===i);e.layer=e.sourceLayer=s}}function Dr(r,e){return r.sublayers.some(t=>!Xe(t,e))}function Xe(r,e){return r.visible&&(r.minScale===0||Te(e.scale,r.minScale)||e.scale<r.minScale)&&(r.maxScale===0||Te(e.scale,r.maxScale)||e.scale>r.maxScale)}async function S(r,e){try{return await r}catch(t){if(t.name!=="no-queryEngine")throw t;return e}}function L(r,e){const t=new Set;for(const i of r instanceof Set?r.values():r.keys())e.has(i)||t.add(i);return t}class Jr{constructor(e,t,i){const s=i?e.getTileCoverage(i,0,!0,"closest"):null,a=e.getTileCoverage(t,0,!0,"closest");if(this._tileKeys=new Map,s)for(const n of s.keys())this._tileKeys.set(n.id,n);if(a)for(const n of a.keys())this._tileKeys.set(n.id,n)}get coverageSet(){return new Set(this._tileKeys.keys())}keys(){return this._tileKeys.values()}}class jr{constructor(e){this.version=e}}class Hr{constructor(e){this._subscriptions=new Map,this._visible=new Set,this._paused=new Set,this._version=0,this._config=e}destroy(){}get _coverageSet(){return this._coverage?.coverageSet??new Set}suspend(){this._suspendedOverage=this._coverage,this._coverage=null,this._updateSubscriptions()}resume(){this._coverage==null&&(this._coverage=this._suspendedOverage,this._suspendedOverage=null,this._updateSubscriptions())}update(e,t){return this._version=(this._version+1)%Number.MAX_SAFE_INTEGER,this._updateCoverage(e,t),this._updateSubscriptions(),new Set(this._visible)}_updateCoverage(e,t){this._coverage=new Jr(this._config.tileInfoView,e,t)}_updateSubscriptions(){const e=this._coverageSet,t=this._updateVisibility(),i=L(t,e),s=L(this._subscriptions,t),a=L(e,this._subscriptions),n=L(s,e),o=L(i,n),l=L(o,this._paused);this._visible=t;for(const c of a.values())this._subscriptions.set(c,new jr(this._version));for(const c of l.values())this._paused.add(c);for(const c of n.values())this._subscriptions.delete(c),this._paused.delete(c);(a.size||n.size||l.size)&&this._sendUpdateSubscriptions(a,n,l)}_sendUpdateSubscriptions(e,t,i){const s=Array.from(e.values()).map(a=>({tileId:a,version:this._subscriptions.get(a).version}));this._config.updateSubscriptions({subscribe:s,unsubscribe:Array.from(t.values()),pause:Array.from(i.values())})}_updateVisibility(){const e=new Set,t=new Set;if(!this._coverage)return e;for(const a of this._coverage.keys()){if(this._config.isDone(a)){e.add(a.id);continue}this._addVisibleParent(e,t,a)||this._addVisibleChildren(e,a)||e.add(a.id)}const i=new Z(0,0,0,0),s=new Z(0,0,0,0);for(const a of t){i.id=a;for(const n of e)s.id=n,i.containsChild(s)&&e.delete(n)}return e}_addVisibleParent(e,t,i){let s=!1;for(const a of this._visible.values())new Z(a).containsChild(i)&&(e.add(a),t.add(a),s=!0);return s}_addVisibleChildren(e,t){let i=!1;for(const s of this._visible.values()){const a=new Z(s);t.containsChild(a)&&(e.add(s),i=!0)}return i}}function Qr(r,e){const t=new Set;return r&&r.forEach(i=>t.add(i)),e&&e.forEach(i=>t.add(i)),t.has("*")?["*"]:Array.from(t)}const Je=4294967294;let V=class extends kt(bt(St(vt))){constructor(){super(...arguments),this._commandsQueue=new $t({process:r=>{switch(r.type){case"edit-by-feature":case"edit-by-id":return this._doEdit(r);case"update":return this._doUpdate();case"highlight":return this._updateHighlights()}}}),this._visibilityOverrides=new Set,this._highlightCounter=new Pt,this._lastAvailableFields=[],this._lastTargetState=null,this.eventLog=new C,this._sourceRefreshVersion=1,this._displayRefreshVersion=1,this._pipelineUpdating=!1,this._fields=null,this.featureEffectView=new Nt}destroy(){this._workerProxy?.destroy(),this._workerAttached.reject($e()),this._commandsQueue.destroy()}initialize(){this._workerAttached=de(),W(this._workerAttached.promise),this.addResolvingPromise(this._initProxy()),this.featureEffectView.featureEffect=this.featureEffect,this.featureEffectView.endTransition()}async _initProxy(){const r=this.layer;if("isTable"in r&&r.isTable)throw new D("featurelayerview:table-not-supported","table feature layer can't be displayed",{layer:r});if(r.geometryType==="mesh")throw new D("featurelayerview:geometry-type-not-supported",`Geometry type of ${r.geometryType} is not supported`,{layer:r});if((r.type==="feature"||r.type==="subtype-group")&&_t(r)?.operations.supportsQuery===!1)throw new D("featurelayerview:query-not-supported","layer view requires a layer with query capability",{layer:r});this._workerProxy&&this._workerProxy.destroy();const e=this._createClientOptions();this._workerProxy=await Qt(e)}async _attachProxy(){const r={service:await this.layerAdapter.createServiceOptions(this.view),tileInfoJSON:this.view?.featuresTilingScheme?.tileInfo?.toJSON()};let e=[];Array.isArray(r.service.source)&&(e=r.service.source);try{await this._workerProxy.pipeline.onAttach(r,{transferList:e}),this._workerAttached.resolve()}catch(t){this._workerAttached.reject($e()),Me(t)}}async _detachProxy(){return this._workerProxy.pipeline.onDetach()}async getWorker(){return await this._workerAttached.promise,this._workerProxy}get hasAllFeatures(){return this.layer.visible&&!this.suspended&&this.eventLog.hasAllFeatures}get hasAllFeaturesInView(){return this.layer.visible&&!this.suspended&&this.eventLog.hasAllFeaturesInView}get hasFullGeometries(){return this.layer.visible&&!this.suspended&&this.eventLog.hasFullGeometries}get labelingCollisionInfos(){const r=this.layerAdapter.getLabelingDeconflictionInfo(this.view),e=this.layer.geometryType,t=!this.suspended;return r.map(({vvEvaluators:i,deconflictionEnabled:s})=>({container:this.featureContainer,vvEvaluators:i,deconflictionEnabled:s,geometryType:e,visible:t}))}get layerAdapter(){switch(this.layer.type){case"feature":return this.layer.source.type==="memory"?new De(this.layer):new zr(this.layer);case"geojson":case"csv":case"wfs":return new De(this.layer);case"parquet":return new qr(this.layer);case"subtype-group":return new Lr(this.layer);case"ogc-feature":return new Mr(this.layer);case"stream":return new Pr(this.layer);case"oriented-imagery":return new Ar(this.layer);case"knowledge-graph-sublayer":return new $r(this.layer);case"catalog-footprint":return new Cr(this.layer);default:wt(this.layer)}return null}get timeExtent(){return Ot(this.layerAdapter.timeOptions,this.view?.timeExtent,this._get("timeExtent"))}getDisplayStatistics(r,e){return this.featureContainer?.getDisplayStatistics(r,e)}async queryHeatmapStatistics(r){return(await this.getWorker()).pipeline.queryHeatmapStatistics(r)}highlight(r,e="default"){let t;r instanceof ge?t=[r.getObjectId()]:typeof r=="number"||typeof r=="string"?t=[r]:Vt.isCollection(r)&&r.length>0?t=r.map(s=>s?.getObjectId()).toArray():Array.isArray(r)&&r.length>0&&(t=typeof r[0]=="number"||typeof r[0]=="string"?r:r.map(s=>s?.getObjectId()));const i=t?.filter(It);return i?.length?(this._addHighlights(i,e),Ae(()=>this._removeHighlights(i,e))):Ae()}getHighlightIds(){return Array.from(this._highlightCounter.ids())}hasHighlight(){return!this._highlightCounter.empty}async hitTest(r,e){const t=await this.featureContainer.hitTest(e);if(t.length===0)return null;const i=await this.getWorker(),{features:s,aggregates:a}=await i.pipeline.getDisplayFeatures(t),n=this.featureContainer.getSortKeys(t),o=({displayId:l},{displayId:c})=>n.has(l)&&n.has(c)?n.get(l)-n.get(c):l-c;return s.sort(o).reverse(),a.sort(o).reverse(),[...a.map(l=>this._createGraphicHit(r,Ie.fromJSON(l))),...s.map(l=>this._createGraphicHit(r,ge.fromJSON(l)))]}async queryStatistics(){const r=await this.getWorker();return S(r.pipeline.queryStatistics(),{featureCount:0,ringCount:0,vertexCount:0})}async querySummaryStatistics(r,e,t){const i=await this.getWorker(),s={...e,scale:this.view.scale},a=i.features.executeQueryForSummaryStatistics(this._cleanUpQuery(r),s,t);return S(a,{})}async queryAggregateSummaryStatistics(r,e,t){const i={...e,scale:this.view.scale},s=(await this.getWorker()).aggregates.executeQueryForSummaryStatistics(this._cleanUpAggregateQuery(r),i,t);return S(s,{})}async queryUniqueValues(r,e,t){const i=await this.getWorker(),s={...e,scale:this.view.scale},a=i.features.executeQueryForUniqueValues(this._cleanUpQuery(r),s,t);return S(a,{uniqueValueInfos:[]})}async queryAggregateUniqueValues(r,e,t){const i=await this.getWorker(),s={...e,scale:this.view.scale},a=i.aggregates.executeQueryForUniqueValues(this._cleanUpAggregateQuery(r),s,t);return S(a,{uniqueValueInfos:[]})}async queryClassBreaks(r,e,t){const i=await this.getWorker(),s={...e,scale:this.view.scale},a=i.features.executeQueryForClassBreaks(this._cleanUpQuery(r),s,t);return S(a,{classBreakInfos:[]})}async queryAggregateClassBreaks(r,e,t){const i=await this.getWorker(),s={...e,scale:this.view.scale},a=i.aggregates.executeQueryForClassBreaks(this._cleanUpAggregateQuery(r),s,t);return S(a,{classBreakInfos:[]})}async queryHistogram(r,e,t){const i=await this.getWorker(),s={...e,scale:this.view.scale},a=i.features.executeQueryForHistogram(this._cleanUpQuery(r),s,t);return S(a,{bins:[],maxValue:null,minValue:null,normalizationTotal:null})}async queryAggregateHistogram(r,e,t){const i=await this.getWorker(),s={...e,scale:this.view.scale},a=i.aggregates.executeQueryForHistogram(this._cleanUpAggregateQuery(r),s,t);return S(a,{bins:[],maxValue:null,minValue:null,normalizationTotal:null})}queryFeatures(r,e){return this.queryFeaturesJSON(r,e).then(t=>{const i=be.fromJSON(t);return i.features.forEach(s=>this._setLayersForFeature(s)),i})}async queryVisibleFeatures(r,e){const t=(await this.getWorker()).pipeline.queryVisibleFeatures(this._cleanUpQuery(r),e),i=await S(t,{features:[]}),s=be.fromJSON(i);return s.features.forEach(a=>this._setLayersForFeature(a)),s}async queryAggregates(r,e){const t=(await this.getWorker()).aggregates.executeQuery(this._cleanUpAggregateQuery(r),e),i=await S(t,{features:[]}),s=Ut.fromJSON(i);return s.features.forEach(a=>this._setLayersForFeature(a)),s}async queryAggregateIds(r,e){const t=(await this.getWorker()).aggregates.executeQueryForIds(this._cleanUpAggregateQuery(r),e);return S(t,[])}async queryAggregateCount(r,e){const t=(await this.getWorker()).aggregates.executeQueryForCount(this._cleanUpAggregateQuery(r),e);return S(t,0)}async queryAggregateJSON(r,e){const t=(await this.getWorker()).aggregates.executeQuery(this._cleanUpAggregateQuery(r),e);return S(t,{features:[]})}async queryFeaturesJSON(r,e){const t=(await this.getWorker()).features.executeQuery(this._cleanUpQuery(r),e);return S(t,{features:[]})}async queryObjectIds(r,e){const t=(await this.getWorker()).features.executeQueryForIds(this._cleanUpQuery(r),e);return S(t,[])}async queryFeatureCount(r,e){const t=(await this.getWorker()).features.executeQueryForCount(this._cleanUpQuery(r),e);return S(t,0)}async queryExtent(r,e){const t=(await this.getWorker()).features.executeQueryForExtent(this._cleanUpQuery(r),e),i=await S(t,{count:0,extent:null});return{count:i.count,extent:xt.fromJSON(i.extent)}}async getSampleFeatures(r){return(await this.getWorker()).pipeline.getSampleFeatures(r)}setVisibility(r,e){e?this._visibilityOverrides.delete(r):this._visibilityOverrides.add(r),this._update()}update(r){if(!this._subscriptionManager)return;this.view.animation&&!this._lastTargetState&&(this._lastTargetState=r.state.clone()),!this.view.animation&&this._lastTargetState&&(this._lastTargetState=null);const e=this._subscriptionManager.update(r.targetState,this._lastTargetState);this.featureContainer.setVisibleTiles(e)}attach(){g("esri-2d-update-debug")&&console.debug("FeatureLayerView2D.attach"),W(this._updatingHandles.addPromise(this._workerAttached.promise)),W(this._attachProxy()),this.featureContainer=new jt(this),this.container.addChild(this.featureContainer),this.view.timeline.record(`${this.layer.title} (FeatureLayer) Attach`),this._subscriptionManager=new Hr({tileInfoView:this.view.featuresTilingScheme,updateSubscriptions:r=>{this.featureContainer.updateSubscriptions(r),W(this._updatingHandles.addPromise(this.getWorker().then(e=>e.pipeline.updateSubscriptions(r))))},isDone:r=>this.featureContainer.isDone(r)}),this.requestUpdate(),this.addAttachHandles([me(()=>JSON.stringify({displayRefreshVersion:this._displayRefreshVersion,timeExtent:this.timeExtent,clips:this.clips,filter:this.filter,featureEffect:this.featureEffect,sourceRefreshVersion:this._sourceRefreshVersion,timeZone:this.view.timeZone,effect:this.featureEffect,...this.layerAdapter.getUpdateHashProperties(this.view)}),()=>this._update(),Ft),me(()=>this.updateSuspended,r=>{r||(this._subscriptionManager.resume(),this.view.labelManager.requestUpdate())}),me(()=>this.visible,r=>{this.view.labelManager.requestUpdate()})]),this.layer.type!=="stream"&&this.layer.type!=="parquet"&&this.layer.type!=="catalog-footprint"&&this.addAttachHandles(this.layer.on("edits",r=>this._edit(r)))}detach(){g("esri-2d-update-debug")&&console.debug("FeatureLayerView2D.detach"),this._detachProxy(),this._fields=null,this.featureContainer.destroy(),this.featureContainer=null,this._commandsQueue.clear(),this.container.removeAllChildren(),this._subscriptionManager=Et(this._subscriptionManager),this._workerProxy.pipeline.onDetach(),this._workerAttached=de(),W(this._workerAttached.promise),this._lastAvailableFields=[],this._lastSchema=null}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}isUpdating(){const r="renderer"in this.layer&&this.layer.renderer!=null,e=this._commandsQueue.updateTracking.updating,t=this._updatingRequiredFieldsPromise!=null,i=this.featureContainer.updatingHandles.updating,s=this.updateRequested||r&&(e||t)||i||this._pipelineUpdating||this.dataUpdating;if(g("esri-2d-log-updating")){console.log(`Updating FLV2D (${this.layer.id}): ${s}
  -> updateRequested ${this.updateRequested}
  -> hasRenderer ${r}
  -> updatingRequiredFields ${t}
  -> hasPendingCommand ${e}
  -> dataUpdating ${this.dataUpdating}
  -> processing ${this._pipelineUpdating}
  -> updatingContainer ${i}
`);for(const a of this.featureContainer.subscriptions())console.log(`    -> Tile[${a.id}] Done: ${a.done}`)}return s}_createClientOptions(){const r=this;return{get container(){return r.featureContainer},setUpdating:e=>{this._set("_pipelineUpdating",e.pipeline),this._set("dataUpdating",e.data)},emitEvent:e=>{this.emit(e.name,e.event)},get eventLog(){return r.eventLog},fetch:e=>Promise.all(e.map(t=>r.view.stage.painter.textureManager.rasterizeItem(t))),fetchDictionary:e=>Promise.all(e.map(t=>this._fetchDictionaryRequest(t)))}}async _fetchDictionaryRequest(r){try{if(this.layer.type==="subtype-group")throw new Error("InternalError: SubtypeGroupLayer does not support dictionary renderer");const e=this.layer.renderer;if(!e||e.type!=="dictionary")throw new Error("InternalError: Expected layer to have a DictionaryRenderer");const t=this._lastSchema.processor.mesh.factory.symbology;if(t.type!=="dictionary")throw new Error("InternalError: Expected schema to be of type 'dictionary'");const i={cimAnalyzer:this.view.stage.cimAnalyzer,cimResourceManager:this.view.stage.painter.textureManager.resourceManager,store:this.featureContainer.instanceStore,scaleExpression:t.scaleExpression};this._fields||(this._fields=this.layer.fields.map(n=>n.toJSON()));const s=t.visualVariableUniforms,a=await e.getSymbolAsync(r.feature,{fields:this._fields});return!a||!a.data?{type:"dictionary-response",meshes:[]}:{type:"dictionary-response",meshes:await Y(a.data,{uniforms:s,path:"renderer",schemaOptions:i})}}catch{return{type:"dictionary-response",meshes:[]}}}_cleanUpQuery(r){const e=qe.from(r)||this.createQuery();return e.outSpatialReference||(e.outSpatialReference=this.view.spatialReference),e.toJSON()}_cleanUpAggregateQuery(r){const e=qe.from(r)||this.createAggregateQuery();e.outSpatialReference||(e.outSpatialReference=this.view.spatialReference);const t=e.objectIds??[];for(const i of e.aggregateIds??[])t.push(i);return e.objectIds=t,e.aggregateIds=[],e.toJSON()}async _update(){return this._commandsQueue.push({type:"update"})}async _edit(r){if(this.updateSuspended)return void this._subscriptionManager.suspend();const e=this._getEffectiveEdit(r);return e?this._commandsQueue.push(e).catch(Me):void 0}async doRefresh(r){this.attached&&(this.updateSuspended&&r||(r?this.incrementSourceRefreshVersion():this.incrementDisplayRefreshVersion()))}incrementSourceRefreshVersion(){this._sourceRefreshVersion=(this._sourceRefreshVersion+1)%Je+1}incrementDisplayRefreshVersion(){this._displayRefreshVersion=(this._displayRefreshVersion+1)%Je+1}_getEffectiveEdit(r){const e="globalIdField"in this.layer&&this.layer.globalIdField,t=r.deletedFeatures.some(o=>o.objectId===-1||!o.objectId),i=e&&this.availableFields.includes(e);if(t&&!i)return q.getLogger(this).error(new D("mapview-apply-edits",`Editing the specified service requires the layer's globalIdField, ${e} to be included the layer's outFields for updates to be reflected on the map`)),null;const s=this.layer,a=r.historicMoment?.getTime()??null,n="layerId"in s&&r.editedFeatures?.find(o=>o.layerId===s.layerId);if(n&&this._canEditByFeature(n)){const c=Rt(this.layer.geometryType),{adds:d,deletes:u,updates:p}=n.editedFeatures,f=this.layer.objectIdField,m=d.map(b=>Pe(b,c,!1,!1)),_=p.map(b=>Pe(b.current,c,!1,!1));return{type:"edit-by-feature",added:m,removed:u.map(b=>"attributes"in b?{globalId:e?b.attributes[e]:null,objectId:f?b.attributes[f]:null}:b),updated:_,historicMoment:a}}return{type:"edit-by-id",added:r.addedFeatures,updated:r.updatedFeatures,removed:r.deletedFeatures,historicMoment:a}}_canEditByFeature(r){const{adds:e,updates:t}=r.editedFeatures;return e.every(i=>this.view.spatialReference.equals(i.geometry?.spatialReference))&&t.every(i=>this.view.spatialReference.equals(i.current.geometry?.spatialReference))}async _doUpdate(){"featureReduction"in this.layer&&this.layer.featureReduction&&this.layer.featureReduction!==this._lastFeatureReduction&&(this.layer.featureReduction=this.layer.featureReduction?.clone(),this._lastFeatureReduction=this.layer.featureReduction);try{if(await this._updateRequiredFields(),this.destroyed||!this.layerAdapter?.hasRequiredSupport||!this._subscriptionManager)return;const r=this.featureContainer.instanceStore;this.featureContainer.attributeView.lockTextureUploads(),r.updateStart();const e=this.featureEffect,t={store:r,cimAnalyzer:this.view.stage.cimAnalyzer,cimResourceManager:this.view.stage.painter.textureManager.resourceManager,scaleExpression:void 0},i=this._createViewSchemaConfig(),s={source:this.layerAdapter.createSourceSchema(i,this._sourceRefreshVersion),processor:await this.layerAdapter.createProcessorSchema(t,i,this._displayRefreshVersion)},a=ke(this._lastSchema?.source.mutable,s.source.mutable)||ke(this._lastSchema?.processor,s.processor);if(!a)return this.featureContainer.requestRender(),this.featureContainer.attributeView.unlockTextureUploads(),r.updateEnd(),void(this.featureEffectView.featureEffect=e);this._lastSchema=s,this._fields=null;const n=Math.round(performance.now());g("esri-2d-update-debug")&&console.debug(`Id[${this.layer.uid}] Version[${n}] FeatureLayerView2D._doUpdate`,{changes:a}),await(await this.getWorker()).pipeline.updateSchema(s,n),r.updateEnd(),this.featureEffectView.featureEffect=e,this.featureEffectView.endTransition(),this.featureContainer.restartAllAnimations(),this.featureContainer.attributeView.unlockTextureUploads(),this.featureContainer.swapRenderState(),this.featureContainer.requestRender(),g("esri-2d-update-debug")&&console.debug(`Version[${n}] FeatureLayerView2D.updateEnd`),this.requestUpdate()}catch(r){g("esri-2d-update-debug")&&console.error("Encountered an error during update",r)}}async _doEdit(r){const e=await this.getWorker();try{this.featureContainer.editStart(),await e.pipeline.onEdits(r),this.featureContainer.editEnd()}catch(t){Ne(t)}}get hasFilter(){const r=this.layerAdapter.hasFilters?.(this.view)??!1;return this.filter!=null||this.timeExtent!=null||this._visibilityOverrides.size>0||r}_getEffectiveAvailableFields(r){const e=Qr(this._lastAvailableFields,r);return this._lastAvailableFields=e,Ct(this.layer.fieldsIndex,e)}_createViewSchemaConfig(){const r=[Gr(this.view,this.layerAdapter,this.timeExtent,this._visibilityOverrides,this.filter),this.featureEffect?.filter?.toJSON()??null];return{availableFields:this._getEffectiveAvailableFields(this.availableFields),filters:r,scale:this.view.scale,timeZone:this.view.timeZone}}_addHighlights(r,e){this._highlightCounter.addGroup(r,e),this._commandsQueue.push({type:"highlight"})}_removeHighlights(r,e){this._highlightCounter.deleteGroup(r,e),this._commandsQueue.push({type:"highlight"})}async _updateHighlights(){const r=[];for(const i of this._highlightCounter.ids()){const s=this._highlightCounter.getHighlightGroups(i),a=this._getHighlightBits(s);r.push({objectId:i,highlightFlags:a})}const e=await this.getWorker();if(this.destroyed)return;const t=e.pipeline.updateHighlight({highlights:r}).catch(i=>{Ne(i)||q.getLogger(this).error(i)});this._updatingHandles.addPromise(t)}_setLayersForFeature(r){r.layer=r.sourceLayer=this.layer,this.layerAdapter.setGraphicOrigin&&this.layerAdapter.setGraphicOrigin(r)}_createGraphicHit(r,e){return this._setLayersForFeature(e),e.geometry!=null&&(e.geometry.spatialReference=this.view.spatialReference),{type:"graphic",graphic:e,layer:this.layer,mapPoint:r}}};function Gr(r,e,t,i,s){s&&(s=s.clone());const a=s!=null?s.timeExtent:null,n=t!=null&&a!=null?t.intersection(a):t||a;n&&(s??=new pe,s.timeExtent=n),s=e.addFilters?.(s,r)??s;let o=s?.toJSON()??null;return i.size&&(o??=new pe().toJSON(),o.hiddenIds=Array.from(i)),o}h([y()],V.prototype,"_commandsQueue",void 0),h([y()],V.prototype,"_sourceRefreshVersion",void 0),h([y()],V.prototype,"_displayRefreshVersion",void 0),h([y({readOnly:!0})],V.prototype,"_pipelineUpdating",void 0),h([y({readOnly:!0})],V.prototype,"hasAllFeatures",null),h([y({readOnly:!0})],V.prototype,"hasAllFeaturesInView",null),h([y({readOnly:!0})],V.prototype,"hasFullGeometries",null),h([y()],V.prototype,"featureEffectView",void 0),h([y()],V.prototype,"labelingCollisionInfos",null),h([y()],V.prototype,"layerAdapter",null),h([y({readOnly:!0})],V.prototype,"timeExtent",null),h([y()],V.prototype,"updating",void 0),V=h([ie("esri.views.2d.layers.FeatureLayerView2D")],V);const Wr=V,_i=Object.freeze(Object.defineProperty({__proto__:null,default:Wr},Symbol.toStringTag,{value:"Module"}));export{_i as F,S as n,Wr as r};
