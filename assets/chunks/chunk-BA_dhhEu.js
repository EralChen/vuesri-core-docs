import{s as u,c9 as f,ca as S,cb as T,e as L,q as v,j as F}from"./chunk-CMhy9c9G.js";import{a as M,t as P}from"./chunk-C5OhRf_W.js";import{l as y,a as $,o as G,u as w,t as m,c as x,n as D,i as k,e as h}from"./chunk-DK9PG-QZ.js";import{populateGroupLayer as j}from"./chunk-DLixgRys.js";import"./chunk-ByM7454y.js";/* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              */async function Ge(t,a){const r=t.instance.portalItem;if(r?.id)return await r.load(a),C(t),t.validateItem&&t.validateItem(r),E(t,a)}function C(t){const a=t.instance.portalItem;if(!a?.type||!t.supportedTypes.includes(a.type))throw new u("portal:invalid-layer-item-type","Invalid layer item type '${type}', expected '${expectedType}'",{type:a?.type,expectedType:t.supportedTypes.join(", ")})}async function E(t,a){const r=t.instance,e=r.portalItem;if(!e)return;const{url:n,title:i}=e,o=f(e,"portal-item");if(r.type==="group")return A(r,o,t);n&&r.type!=="media"&&r.read({url:n},o);const l=new h,s=await I(t,l,a);return s&&r.read(s,o),r.resourceReferences={portalItem:e,paths:o.readResourcePaths??[]},r.type!=="subtype-group"&&r.read({title:i},o),S(r,o)}async function A(t,a,r){const e=t.portalItem;if(!t.sourceIsPortalItem)return;const{title:n,type:i}=e;if(i==="Group Layer"){if(!T(e,"Map"))throw new u("portal:invalid-layer-item-typekeyword","'Group Layer' item without 'Map' type keyword is not supported");return O(t)}return t.read({title:n},a),R(t,r)}async function O(t){const a=t.portalItem,r=await a.fetchData("json");if(!r)return;const e=f(a,"web-map");t.read(r,e),await j(t,r,{context:e}),t.resourceReferences={portalItem:a,paths:e.readResourcePaths??[]}}async function R(t,a){let r;const{portalItem:e}=t;if(!e)return;const n=e.type,i=a.layerModuleTypeMap;switch(n){case"Feature Service":case"Feature Collection":r=i.FeatureLayer;break;case"Stream Service":r=i.StreamLayer;break;case"Scene Service":r=i.SceneLayer;break;default:throw new u("portal:unsupported-item-type-as-group",`The item type '${n}' is not supported as a 'IGroupLayer'`)}const o=new h;let[l,s]=await Promise.all([r(),I(a,o)]),p=()=>l;if(n==="Feature Service"){const b=y(s)?.customParameters;s=e.url?await $(s,e.url,o):{},p=await K(s,i)||p;const g=await H(e.url,{customParameters:b,loadContext:o});return await c(t,p,s,g)}return n==="Scene Service"&&e.url&&(s=await G(e,s,o)),w(s)>0?await c(t,p,s):await J(t,p)}async function J(t,a){const{portalItem:r}=t;if(!r?.url)return;const e=await M(r.url);e&&c(t,a,{layers:e.layers?.map(m),tables:e.tables?.map(m)})}async function c(t,a,r,e){let n=r.layers||[];const i=r.tables||[];if(t.portalItem?.type==="Feature Collection"?(n.forEach((o,l)=>{o.id=l,o?.layerDefinition?.type==="Table"&&i.push(o)}),n=n.filter(o=>o?.layerDefinition?.type!=="Table")):(n.reverse(),i.reverse()),n.forEach(o=>{const l=e?.(o);if(l||!e){const s=d(t,a(o),r,o,l);t.add(s)}}),i.length){const o=await L.FeatureLayer();i.forEach(l=>{const s=e?.(l);if(s||!e){const p=d(t,o,r,l,s);t.tables.add(p)}})}}function d(t,a,r,e,n){const i=t.portalItem,o={portalItem:i.clone(),layerId:e.id};e.url!=null&&(o.url=e.url);const l=new a(o);if("sourceJSON"in l&&(l.sourceJSON=n),l.type!=="subtype-group"&&l.type!=="catalog"&&(l.sublayerTitleMode="service-name"),i.type==="Feature Collection"){const s={origin:"portal-item",portal:i.portal||v.getDefault()};l.read(e,s);const p=r.showLegend;p!=null&&l.read({showLegend:p},s)}return l}async function I(t,a,r){if(t.supportsData===!1)return;const e=t.instance,n=e.portalItem;if(!n)return;let i=null;try{i=await n.fetchData("json",r)}catch{}if(z(e)){let o=null;const l=await N(n,i,a);if((i?.layers||i?.tables)&&l>0){if(e.layerId==null){const s=x(e.type),p=s?D(i,s)[0]:y(i);p&&(e.layerId=p.id)}o=q(i,e),o?.layerType==="OrientedImageryLayer"&&e.type==="oriented-imagery"&&e.supportedSourceTypes.add("Feature Layer"),o&&i.showLegend!=null&&(o.showLegend=i.showLegend)}return l>1&&"sublayerTitleMode"in e&&e.sublayerTitleMode!=="service-name"&&(e.sublayerTitleMode="item-title-and-service-name"),o}return i}async function N(t,a,r){if(a?.layers&&a?.tables)return w(a);const e=F(t.url);if(!e)return 1;const n=await r.fetchServiceMetadata(e.url.path,{customParameters:y(a)?.customParameters}).catch(()=>null);return(a?.layers?.length??n?.layers?.length??0)+(a?.tables?.length??n?.tables?.length??0)}function q(t,a){const{layerId:r}=a,e=t.layers?.find(n=>n.id===r)||t.tables?.find(n=>n.id===r);return e&&B(e,a)?e:null}function z(t){return t.type!=="stream"&&"layerId"in t}function B(t,a){const r="layerType"in t&&t.layerType,{type:e}=a;return!(e==="feature"&&r&&t.layerType!=="ArcGISFeatureLayer"||e==="catalog"&&!r||e==="oriented-imagery"&&!r||e==="subtype-group"&&!r)}async function H(t,a){const{layersJSON:r}=await P(t,a);if(!r)return null;const e=[...r.layers,...r.tables];return n=>e.find(i=>i.id===n.id)}async function K(t,a){const{layers:r}=t;if(!r?.length)return;const e=new Set,n=[];for(const{layerType:l}of r){const s=l??"ArcGISFeatureLayer";if(e.has(s))continue;e.add(s);const p=a[k(s)];n.push(p())}const i=await Promise.all(n),o=new Map;return Array.from(e).forEach((l,s)=>{o.set(l,i[s])}),({layerType:l})=>{const s=l??"ArcGISFeatureLayer";return o.get(s)}}export{Ge as load};
