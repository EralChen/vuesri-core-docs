import{gp as T,s as g,bM as m,dp as E,dq as q,cn as P,y,cS as _,gq as I,aj as R,gr as f,dl as b,dt as j,G as $,dv as M,du as N}from"./chunk-fHrNL0KE.js";import{m as O}from"./chunk-a5AyQhTB.js";import{x as Q,j as k}from"./chunk-x1OpTvfG.js";import{$ as L}from"./chunk-7Erbr4Ho.js";import{p as U}from"./chunk-4ru3QxeR.js";import"./chunk-0wTVHGNT.js";import"./chunk-iRHYTMro.js";import"./chunk-3foBDDFQ.js";import"./chunk-UhiuGvkl.js";import"./chunk-47D7e9N5.js";import"./chunk-v6EOeNTY.js";import"./chunk-C_1WI3lk.js";import"./chunk-eQlbMzId.js";const x="esri.layers.WFSLayer";class te{constructor(){this._customParameters=null,this._queryEngine=null,this._supportsPagination=!0}destroy(){this._queryEngine?.destroy(),this._queryEngine=null}async load(t,e={}){const{getFeatureUrl:r,getFeatureOutputFormat:o,fields:i,geometryType:u,featureType:s,maxRecordCount:n,maxTotalRecordCount:c,maxPageCount:C,objectIdField:d,customParameters:F}=t,{spatialReference:h,getFeatureSpatialReference:p}=T(r,s,t.spatialReference);try{await Q(p,h)}catch{throw new g("unsupported-projection","Projection not supported",{inSpatialReference:p,outSpatialReference:h})}m(e),this._customParameters=F,this._featureType=s,this._fieldsIndex=E.fromLayerJSON({fields:i,dateFieldsTimeReference:i.some(S=>S.type==="esriFieldTypeDate")?{timeZoneIANA:q}:null}),this._geometryType=u,this._getFeatureUrl=r,this._getFeatureOutputFormat=o,this._getFeatureSpatialReference=p,this._maxRecordCount=n,this._maxTotalRecordCount=c,this._maxPageCount=C,this._objectIdField=d,this._spatialReference=h;let l=await this._snapshotFeatures(e);if(l.errors.length>0&&(this._supportsPagination=!1,l=await this._snapshotFeatures(e),l.errors.length>0))throw l.errors[0];return this._queryEngine=new L({fieldsIndex:this._fieldsIndex,geometryType:u,hasM:!1,hasZ:!1,objectIdField:d,spatialReference:h,timeInfo:null,featureStore:new O({geometryType:u,hasM:!1,hasZ:!1})}),this._queryEngine.featureStore.addMany(l.features),{warnings:w(l),extent:(await this._queryEngine.fetchRecomputedExtents()).fullExtent}}async applyEdits(){throw new g("wfs-source:editing-not-supported","applyEdits() is not supported on WFSLayer")}async queryFeatures(t={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQuery(t,e.signal)}async queryFeatureCount(t={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForCount(t,e.signal)}async queryObjectIds(t={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForIds(t,e.signal)}async queryExtent(t={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForExtent(t,e.signal)}async querySnapping(t,e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForSnapping(t,e.signal)}async refresh(t){return this._customParameters=t.customParameters,this._maxRecordCount=t.maxRecordCount,this._maxTotalRecordCount=t.maxTotalRecordCount,this._maxPageCount=t.maxPageCount,this._snapshotTask?.abort(),this._snapshotTask=P(e=>this._snapshotFeatures({signal:e})),this._snapshotTask.promise.then(e=>{this._queryEngine.featureStore.clear(),this._queryEngine.featureStore.addMany(e.features);for(const r of w(e))y.getLogger(x).warn(new _("wfs-layer:refresh-warning",r.message,r.details));e.errors?.length&&y.getLogger(x).warn(new _("wfs-layer:refresh-error","Refresh completed with errors",{errors:e.errors}))},()=>{this._queryEngine.featureStore.clear()}),await this._waitSnapshotComplete(),{extent:(await this._queryEngine.fetchRecomputedExtents()).fullExtent}}async _waitSnapshotComplete(){if(this._snapshotTask&&!this._snapshotTask.finished){try{await this._snapshotTask.promise}catch{}return this._waitSnapshotComplete()}}async _snapshotFeatures(t){const e=t?.signal,r=this._maxTotalRecordCount,o=this._maxPageCount,i=this._supportsPagination?await I(this._getFeatureUrl,this._featureType.typeName,{customParameters:this._customParameters,signal:e}):void 0;let u=[];const s=[];if(i==null)try{u=await this._singleQuery(e)}catch(n){R(n)||s.push(n)}else{const n=Math.min(i,r),c=Z(this,Math.max(1,Math.min(Math.ceil(n/this._maxRecordCount),o)),e);await Promise.allSettled(Array.from({length:10}).map(()=>v(c,u,s)))}return m(e),{features:u,totalRecordCount:i,maxTotalRecordCount:r,maxPageCount:o,errors:s}}async _singleQuery(t){const e=await f(this._getFeatureUrl,this._featureType.typeName,this._getFeatureSpatialReference,this._getFeatureOutputFormat,{customParameters:this._customParameters,signal:t});return this._processGeoJSON(e,{signal:t})}async _pageQuery(t,e){const r=t*this._maxRecordCount,o=await f(this._getFeatureUrl,this._featureType.typeName,this._getFeatureSpatialReference,this._getFeatureOutputFormat,{customParameters:this._customParameters,startIndex:r,count:this._maxRecordCount,signal:e});return this._processGeoJSON(o,{startIndex:r,signal:e})}_processGeoJSON(t,e){b(t,this._getFeatureSpatialReference.wkid);const{startIndex:r,signal:o}=e;m(o);const i=j(t,{geometryType:this._geometryType,hasZ:!1,objectIdField:this._objectIdField});if(!$(this._spatialReference,this._getFeatureSpatialReference))for(const s of i)s.geometry!=null&&(s.geometry=M(k(N(s.geometry,this._geometryType,!1,!1),this._getFeatureSpatialReference,this._spatialReference)));let u=r??1;for(const s of i){const n={};U(this._fieldsIndex,n,s.attributes,!0),s.attributes=n,n[this._objectIdField]==null&&(s.objectId=n[this._objectIdField]=u++)}return i}}function*Z(a,t,e){for(let r=0;r<t;r++)yield a._pageQuery(r,e)}async function v(a,t,e){let r=a.next();for(;!r.done;){try{const o=await r.value;t.push(...o)}catch(o){R(o)||e.push(o)}r=a.next()}}function w(a){const t=[];return a.totalRecordCount!=null&&(a.features.length<a.totalRecordCount&&t.push({name:"wfs-layer:maxRecordCount-too-low",message:`Could only fetch ${a.features.length} of ${a.totalRecordCount} in ${a.maxPageCount} queries. Try increasing the value of WFSLayer.maxRecordCount.`,details:{recordCount:a.features.length,totalRecordCount:a.totalRecordCount}}),a.totalRecordCount>a.maxTotalRecordCount&&t.push({name:"wfs-layer:large-dataset",message:`The number of ${a.totalRecordCount} features exceeds the maximum allowed of ${a.maxTotalRecordCount}.`,details:{recordCount:a.features.length,totalRecordCount:a.totalRecordCount,maxTotalRecordCount:a.maxTotalRecordCount}})),t}export{te as default};
