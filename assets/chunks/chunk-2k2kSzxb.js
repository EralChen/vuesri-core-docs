import{gS as E,lm as O,np as B,gY as k,lB as m,c6 as F,gZ as _,h2 as w,oD as j,sH as A,gT as i,ly as S,gX as T,lD as $,h7 as H,g$ as M,h8 as V,ha as C,h5 as G,lF as L,oB as N,hb as I,hi as D}from"./chunk-Id6bT2Sz.js";import{u as U}from"./chunk-Hg0ijuo1.js";import"./chunk-dLiZYYWx.js";import{u as X}from"./chunk-zf8qcgyw.js";import{u as Y}from"./chunk-bd1jBHeZ.js";function Z(){const e=E("vaSketch");if(!e)throw new Error("The component which use useSketch() must be in a Sketch component");return e}const v={modelValue:{type:[Array,Object],default:()=>[]},multiple:{type:Boolean,default:!0}},q=O(v),p={"update:modelValue":e=>e,complete:e=>e,update:e=>!0,create:e=>!0},x=B(p),z={...v,defaultOptions:{type:Object,default:()=>({})},availableCreatureTools:{type:Array,default:void 0},position:{type:String,default:"top-right"},orphan:{type:Boolean,default:!1},modelValueInitFrom:{type:String,default:"modelValue"},viewModelPointSymbol:{type:Object},viewModelPolygonSymbol:{type:Object},viewModelPolylineSymbol:{type:Object},viewModelActiveFillSymbol:{type:Object},visibleElements:{type:Object,default:void 0}},J=q,K={load:e=>e,...p},Q=x,R=k({props:v,emits:p,setup(e,{emit:a}){const s=Z(),n=X(),l=s.on("create",o=>{a("create",o),o.state==="start"?e.multiple||n.removeAll():o.state==="complete"&&(!e.multiple&&n.graphics.length>1&&o.graphic.geometry.type==="point"&&n.remove(n.graphics.getItemAt(0)),a("update:modelValue",[...n.graphics]),a("complete",o))});m(()=>{l.remove()});const c=s.on("update",o=>{a("update",o),o.state==="complete"&&(a("update:modelValue",[...n.graphics]),a("complete",o))});return m(()=>{c.remove()}),()=>null}}),W=k({name:"VaSketch",components:{Events:R},props:z,emits:K,setup(e,{emit:a}){const s=U(),n=s.map;let l=E("vaGraphicsLayer",null);l||(l=new F,n.add(l),m(()=>{n.remove(l)}));const c=J(e),o=Q(a);function h(t){l.removeAll(),l.addMany(t)}_(()=>e.modelValue,(t,r)=>{let u=!1;if(t.length===r.length){for(let d=0;d<t.length;d++)if(t[d]!==r[d]){u=!0;break}}else u=!0;u&&h([...t])}),e.modelValueInitFrom==="layerGraphics"?a("update:modelValue",l.graphics):h(e.modelValue);const f=w(),g=w(!1);class P extends T{toggleVisible(){n.ground.layers.forEach(r=>{r.visible=!r.visible})}add(){this.toggleVisible(),this.removeHandler=this.toggleVisible.bind(this)}}const b=new P;return j(()=>{const t=new A({container:f.value,view:s,layer:l,creationMode:"single",...e.defaultOptions});i(()=>{e.visibleElements&&(t.visibleElements=e.visibleElements)}),i(()=>{e.viewModelPointSymbol&&(t.viewModel.pointSymbol=e.viewModelPointSymbol)}),i(()=>{e.viewModelPolylineSymbol&&(t.viewModel.polylineSymbol=e.viewModelPolylineSymbol)}),i(()=>{e.viewModelPolygonSymbol&&(t.viewModel.polygonSymbol=e.viewModelPolygonSymbol)}),i(()=>{e.viewModelActiveFillSymbol&&(t.viewModel.activeFillSymbol=e.viewModelActiveFillSymbol)}),i(()=>{e.availableCreatureTools&&(t.availableCreateTools=e.availableCreatureTools)}),m(()=>{t.destroy()}),Y(s.ui,t,e),S("vaGraphicsLayer",l),S("vaSketch",t),g.value=!0,b.add(),t.when(()=>{b.remove()}),a("load",{sketch:t,view:s})}),{eventsBindProps:c,eventsOnEmits:o,sketchNode:f,ready:g}}}),ee={ref:"sketchNode"};function te(e,a,s,n,l,c){const o=H("Events");return M(),V("div",ee,[e.ready?(M(),V(C,{key:0},[G(o,L(e.eventsBindProps,N(e.eventsOnEmits)),null,16),I(e.$slots,"default")],64)):D("",!0)],512)}const y=$(W,[["render",te]]);y.install=e=>{e.component(y.name,y)};export{y as V};
