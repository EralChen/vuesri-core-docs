import{V as k}from"./chunk-CWuugisY.js";import{g$ as B,h9 as S,ha as N,h2 as T,hb as j,h7 as a,h4 as s,h6 as y,hc as A,h8 as D,hd as F,cL as v}from"./chunk-YzRi88Dj.js";import{V as U,b as z,u as V}from"./chunk-BjlDaQPD.js";import{u as I}from"./chunk-DGYRbKE9.js";import"./chunk-DZ3w8ZOu.js";import"./chunk-BX1wMDvx.js";import"./chunk-DlgRifwZ.js";import"./chunk-MXvXirnR.js";import"./chunk-Clcwg9Qm.js";import"./chunk-CVnttSzt.js";import"./chunk-BlTBh7Wn.js";import"./chunk-DltoMSe1.js";import"./chunk-C9tqeO9j.js";import"./chunk-BkUj7kCJ.js";import"./chunk-lA_W8v3a.js";import"./chunk-CheEsZui.js";import"./chunk-CLQIQQkk.js";import"./chunk-CD3FIDfI.js";import"./chunk-DjXdGIkr.js";import"./chunk-BeMirVWN.js";import"./chunk-CtOsnhEP.js";import"./chunk-Dsi4UQrI.js";import"./chunk-D83kxBTm.js";import{V as L}from"./chunk-CMTIf1CS.js";import"./chunk-DhQzXLKM.js";import"./chunk-Dw_nTs4K.js";import"./chunk-FEB8T15a.js";import"./chunk-BRnY4uVr.js";import"./chunk--uKKWstj.js";import"./chunk-Bv-gq04m.js";import"./chunk-DNuFRK75.js";import"./chunk-BBWE_Ghm.js";import"./chunk-CpRg--ys.js";import"./chunk-CvEYJb1U.js";import"./chunk-CyteEnia.js";import"./chunk-DunbwQDX.js";import"./chunk-CFGc4D18.js";import"./chunk-CfNfXr3t.js";import"./chunk-B40jiAhY.js";import"./chunk-BwNtFsQb.js";import"./chunk-BVXbP2w4.js";import{V as W,s as $}from"./chunk-SyfkAsIp.js";import"./chunk-DjOIj6-o.js";const q={class:"bg-white pa-m"},K="https://ows.terrestris.de/osm/service?width=1072&height=1072&bbox=-20037508.342787%2C-20037508.342781033%2C20037508.342781033%2C20037508.342787&srs=EPSG%3A900913&format=image%2Fpng&request=GetMap&service=WMS&styles=&transparent=TRUE&version=1.1.1&layers=OSM-WMS&_ts=1712122845938",Dt=B({__name:"jpg-layer",setup(O){const u="/vuesri/data/1.jpg",R="/vuesri/images/thanks/zzlogo.png",i=S({gridRatio:100,url:u}),_=[{templateType:"VkfInputNumber",label:"GridRatio",prop:"gridRatio"},{templateType:"VkfRadio",label:"Url",prop:"url",options:[{label:"Service1MB",value:K},{label:"2MB",value:u},{label:"50KB",value:R}]}],e=I();class b{}class G{constructor(t=100){this.gridRatio=100,this.grids=[],this.gridRatio=t,this.createGrid()}createGrid(){const t=Math.round(e.width/this.gridRatio),o=Math.round(e.height/this.gridRatio),n=(e.extent.xmax-e.extent.xmin)/t,x=(e.extent.ymax-e.extent.ymin)/o;this.grids=[];let p,h,l,f;for(let c=0;c<t;c++){p=e.extent.xmin+n*c,h=p+n;for(let d=0;d<o;d++){l=e.extent.ymin+x*d,f=l+x;const E=new v({xmin:p,ymin:l,xmax:h,ymax:f,spatialReference:e.spatialReference}),w=new b;w.extent=E,this.grids.push(w)}}}}const g=r=>new z({image:r,georeference:new V({extent:new v({xmin:-20037508342787e-6,ymin:-20037508342781033e-9,xmax:20037508342781033e-9,ymax:20037508342787e-6,spatialReference:{wkid:3857}})})}),M=Array.from({length:1},()=>g(i.url)),m=new U({elements:M}),C=()=>{const r=new G(i.gridRatio);m.elements.removeAll(),window.alert(`生成网格${r.grids.length}`),r.grids.forEach(t=>{const o=g(i.url);o.georeference=new V({extent:t.extent}),m.elements.add(o)})};return(r,t)=>{const o=N("ElButton");return T(),j(F,null,[a(s(k),{source:s(m)},null,8,["source"]),a(s(L),null,{default:y(()=>[A("div",q,[a(s(W),{"form-items":_,data:i,onSetData:t[0]||(t[0]=n=>s($)(i,n))},null,8,["data"]),a(o,{onClick:C},{default:y(()=>t[1]||(t[1]=[D(" Grid ")])),_:1})])]),_:1})],64)}}});export{Dt as _};
