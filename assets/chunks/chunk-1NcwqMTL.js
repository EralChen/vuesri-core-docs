import{b$ as h,C as y,he as M,h2 as g,lO as f,lP as U,bR as w,lQ as E,gZ as V,lv as $,h8 as z,h0 as N,h9 as O,h6 as C,h4 as b,h5 as v,hb as T}from"./chunk-xMPjLCrx.js";import{u as j}from"./chunk-J9RASU-T.js";import"./chunk-5tsSCYgh.js";import"./chunk-i_6XDy5U.js";import"./chunk-0_GtP_p4.js";import"./chunk-2fXqQPVR.js";import"./chunk-9KZWtd42.js";import"./chunk-JLhCycX3.js";import"./chunk-NfHojIUH.js";import"./chunk-V11zOVoy.js";import"./chunk-solU3qLG.js";import"./chunk-aWq6ArXi.js";import"./chunk-zMsd7moL.js";import"./chunk-QGZQfL-6.js";import"./chunk-bVSt-vq9.js";import"./chunk-w3qa_8IS.js";import"./chunk-KVNnRaiv.js";import"./chunk-HOjhYsx3.js";import"./chunk-Kk-FsYOI.js";import"./chunk-mQiHYxNr.js";import"./chunk-Vp0MFqt1.js";import"./chunk-xRfHx62q.js";import"./chunk-XFUWsSlJ.js";import"./chunk-3YEdJcEN.js";import"./chunk-1SEN342O.js";import"./chunk-FaStYSus.js";import"./chunk-ZZVIt58t.js";import"./chunk-E-RLbiwB.js";import"./chunk-raaMsR-G.js";import"./chunk-qxoGV1yl.js";import"./chunk-Bd5xscMd.js";import"./chunk-rerlXJLz.js";import"./chunk-LE__wJ9I.js";import"./chunk-g6Mu5kDo.js";import"./chunk-um3EVGjc.js";import"./chunk-bavg-2oE.js";import"./chunk-HLnvRq1G.js";import"./chunk-soETSAjW.js";import"./chunk-dR-Xmx-w.js";const A=(m,p)=>{const l=p?.centerControlPointSymbol||new h({color:[255,0,0],size:10,style:"circle",outline:{color:[255,255,255],width:2}}),d=p?.radiusControlPointSymbol||new h({color:[255,0,0],size:10,style:"circle",outline:{color:[255,255,255],width:2}}),t=j(),s=new E,n=new y({symbol:l}),e=new y({symbol:d}),c=M();function P(){const o=g(m);if(!o){console.error("Graphic is not defined");return}const u=o.geometry,x=u.centroid;n.geometry=x,t.graphics.add(n);const R=u.getPoint(0,Math.floor(u.rings[0].length/12));e.geometry=R,t.graphics.add(e);const k=t.on("drag",i=>{c.value&&i.stopPropagation()});s.add(k);const S=t.on("pointer-move",i=>{if(c.value===n){const r=t.toMap({x:i.x,y:i.y});n.geometry=r,o.geometry=new f({...o.geometry,center:r,radius:o.geometry.radius,radiusUnit:o.geometry.radiusUnit});const a=o.geometry.getPoint(0,Math.floor(o.geometry.rings[0].length/12));e.geometry=a}if(c.value===e){const r=t.toMap({x:i.x,y:i.y});e.geometry=r;const a=n.geometry,H=U(new w({latitude:a.latitude,longitude:a.longitude,spatialReference:t.spatialReference}),new w({longitude:r.longitude,latitude:r.latitude,spatialReference:t.spatialReference}),"meters");o.geometry=new f({...o.geometry,center:a,radius:H,radiusUnit:"meters"})}});s.add(S);const B=t.on("pointer-down",i=>{t.hitTest(i).then(r=>{if(r.results.length){const a=r.results[0].graphic;c.value=a}})}),G=t.on("pointer-up",()=>{c.value=void 0});s.add(B),s.add(G)}function _(){s.removeAll(),t.graphics.remove(n),t.graphics.remove(e)}return{start:P,complate:_}},St=V({__name:"update",props:{graphic:{type:Object,default:void 0}},setup(m){const p=m,l=$(()=>p.graphic),{start:d,complate:t}=A(l);return(s,n)=>{const e=z("ElButton");return N(),O(T,null,[C(e,{onClick:g(d)},{default:b(()=>[v(" Start ")]),_:1},8,["onClick"]),C(e,{onClick:g(t)},{default:b(()=>[v(" Complate ")]),_:1},8,["onClick"])],64)}}});export{St as _};
