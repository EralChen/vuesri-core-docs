import{a5 as b,gC as E,am as m,a0 as c,ep as F,gD as V,gE as C,gF as D,c0 as l,a1 as n,a2 as a,a4 as $,gG as A}from"./chunk-YzRi88Dj.js";import{o as I,a as G}from"./chunk-uc_phAyQ.js";import{i as h,r as P,n as d}from"./chunk-DY7-I3N8.js";import"./chunk-ByM7454y.js";/* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              */import"./chunk-CPRPN6po.js";let r=class extends b{get availability(){return 1}get updating(){return this.layerSource.updating}get _snappingElevationAligner(){const{view:e}=this,{layer:t}=this.layerSource,i=e!=null&&e.type==="3d";if(!i||t.type==="subtype-group")return h();const o=async(p,s)=>(await A(e.whenLayerView(t),s)).elevationAlignPointsInFeatures(p,s);return h(i,{elevationInfo:t.elevationInfo,alignPointsInFeatures:o})}get _snappingElevationFilter(){const{view:e}=this,t=e!=null&&e.type==="3d"&&this.layerSource.layer.type!=="subtype-group";return P(t)}get _symbologySnappingFetcher(){const{view:e}=this,{layer:t}=this.layerSource;return e!=null&&e.type==="3d"&&t.type!=="subtype-group"?d(this._symbologySnappingSupported,async(i,o)=>{const p=await e.whenLayerView(t);return l(o),p.queryForSymbologySnapping({candidates:i,spatialReference:e.spatialReference},o)}):d()}get _symbologySnappingSupported(){return this._layerView3D!=null&&this._layerView3D.symbologySnappingSupported}initialize(){const{view:e}=this,{layer:t}=this.layerSource;e!=null&&e.type==="3d"&&t.type!=="subtype-group"&&(e.whenLayerView(t).then(i=>this._layerView3D=i),this.addHandles([e.elevationProvider.on("elevation-change",({context:i})=>{const{elevationInfo:o}=t;E(i,o)&&this._snappingElevationAligner.notifyElevationSourceChange()}),m(()=>t.elevationInfo,()=>this._snappingElevationAligner.notifyElevationSourceChange(),c),m(()=>this._layerView3D!=null?this._layerView3D.processor?.renderer:null,()=>this._symbologySnappingFetcher.notifySymbologyChange(),c),F(()=>this._layerView3D?.layer,["edits","apply-edits","graphic-update"],()=>this._symbologySnappingFetcher.notifySymbologyChange())]))}constructor(e){super(e),this.view=null,this._layerView3D=null,this._memoizedMakeGetGroundElevation=V(I)}refresh(){}async fetchCandidates(e,t){const{layer:i}=this.layerSource,o=i.source;if(!o?.querySnapping)return[];const p=C(i),s=D(e,this.view?.type??"2d",p),v=await o.querySnapping(s,{signal:t});l(t);const g=e.coordinateHelper.spatialReference,y=await this._snappingElevationAligner.alignCandidates(v.candidates,g,t);l(t);const u=await this._symbologySnappingFetcher.fetch(y,t);l(t);const S=u.length===0?y:[...y,...u],w=this._snappingElevationFilter.filter(s,S),_=this._memoizedMakeGetGroundElevation(this.view,g);return w.map(f=>G(f,_))}};n([a({constructOnly:!0})],r.prototype,"layerSource",void 0),n([a({constructOnly:!0})],r.prototype,"view",void 0),n([a()],r.prototype,"_snappingElevationAligner",null),n([a()],r.prototype,"_snappingElevationFilter",null),n([a()],r.prototype,"_symbologySnappingFetcher",null),n([a()],r.prototype,"_layerView3D",void 0),n([a()],r.prototype,"_symbologySnappingSupported",null),r=n([$("esri.views.interactive.snapping.featureSources.FeatureCollectionSnappingSource")],r);export{r as FeatureCollectionSnappingSource};
