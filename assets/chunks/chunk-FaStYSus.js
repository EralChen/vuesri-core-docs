import{gT as E,ln as O,ns as F,gZ as k,lD as m,ci as _,g_ as A,h3 as w,nt as j,sQ as T,gU as i,lA as S,gY as B,lF as $,h8 as C,h0 as M,h9 as V,hb as H,h6 as G,hi as L,oF as N,hc as I,hk as U}from"./chunk-xMPjLCrx.js";import{u as D}from"./chunk-J9RASU-T.js";import"./chunk-xRfHx62q.js";import{u as Q}from"./chunk-FqhRJRvF.js";import{u as Y}from"./chunk-cBu6LOLZ.js";function Z(){const e=E("vaSketch");if(!e)throw new Error("The component which use useSketch() must be in a Sketch component");return e}const v={modelValue:{type:[Array,Object],default:()=>[]},multiple:{type:Boolean,default:!0}},q=O(v),h={"update:modelValue":e=>e,complete:e=>e,update:e=>!0,create:e=>!0},x=F(h),z={...v,defaultOptions:{type:Object,default:()=>({})},availableCreatureTools:{type:Array,default:void 0},position:{type:String,default:"top-right"},orphan:{type:Boolean,default:!1},modelValueInitFrom:{type:String,default:"modelValue"},viewModelPointSymbol:{type:Object},viewModelPolygonSymbol:{type:Object},viewModelPolylineSymbol:{type:Object},viewModelActiveFillSymbol:{type:Object},visibleElements:{type:Object,default:void 0}},J=q,K={load:e=>e,...h},R=x,W=k({props:v,emits:h,setup(e,{emit:a}){const s=Z(),n=Q(),l=s.on("create",o=>{a("create",o),o.state==="start"?e.multiple||n.removeAll():o.state==="complete"&&(!e.multiple&&n.graphics.length>1&&o.graphic.geometry.type==="point"&&n.remove(n.graphics.getItemAt(0)),a("update:modelValue",[...n.graphics]),a("complete",o))});m(()=>{l.remove()});const c=s.on("update",o=>{a("update",o),o.state==="complete"&&(a("update:modelValue",[...n.graphics]),a("complete",o))});return m(()=>{c.remove()}),()=>null}}),X=k({name:"VaSketch",components:{Events:W},props:z,emits:K,setup(e,{emit:a}){const s=D(),n=s.map;let l=E("vaGraphicsLayer",null);l||(l=new _,n.add(l),m(()=>{n.remove(l)}));const c=J(e),o=R(a);function p(t){l.removeAll(),l.addMany(t)}A(()=>e.modelValue,(t,r)=>{let u=!1;if(t.length===r.length){for(let d=0;d<t.length;d++)if(t[d]!==r[d]){u=!0;break}}else u=!0;u&&p([...t])}),e.modelValueInitFrom==="layerGraphics"?a("update:modelValue",l.graphics):p(e.modelValue);const f=w(),b=w(!1);class P extends B{toggleVisible(){n.ground.layers.forEach(r=>{r.visible=!r.visible})}add(){this.toggleVisible(),this.removeHandler=this.toggleVisible.bind(this)}}const g=new P;return j(()=>{const t=new T({container:f.value,view:s,layer:l,creationMode:"single",...e.defaultOptions});i(()=>{e.visibleElements&&(t.visibleElements=e.visibleElements)}),i(()=>{e.viewModelPointSymbol&&(t.viewModel.pointSymbol=e.viewModelPointSymbol)}),i(()=>{e.viewModelPolylineSymbol&&(t.viewModel.polylineSymbol=e.viewModelPolylineSymbol)}),i(()=>{e.viewModelPolygonSymbol&&(t.viewModel.polygonSymbol=e.viewModelPolygonSymbol)}),i(()=>{e.viewModelActiveFillSymbol&&(t.viewModel.activeFillSymbol=e.viewModelActiveFillSymbol)}),i(()=>{e.availableCreatureTools&&(t.availableCreateTools=e.availableCreatureTools)}),m(()=>{t.destroy()}),Y(s.ui,t,e),S("vaGraphicsLayer",l),S("vaSketch",t),b.value=!0,g.add(),t.when(()=>{g.remove()}),a("load",{sketch:t,view:s})}),{eventsBindProps:c,eventsOnEmits:o,sketchNode:f,ready:b}}}),ee={ref:"sketchNode"};function te(e,a,s,n,l,c){const o=C("Events");return M(),V("div",ee,[e.ready?(M(),V(H,{key:0},[G(o,L(e.eventsBindProps,N(e.eventsOnEmits)),null,16),I(e.$slots,"default")],64)):U("",!0)],512)}const y=$(X,[["render",te]]);y.install=e=>{e.component(y.name,y)};export{y as V};
