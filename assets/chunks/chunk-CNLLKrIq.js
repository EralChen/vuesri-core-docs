import{Gu as z,Gp as K,It as ne,GR as M,IB as ce,Gr as x,Gv as U,Gw as Q,Gx as J,Gz as Y,iR as le,bq as ue,Hh as D,qr as de,ht as S,oo as R,a1 as h,a2 as _,a4 as X,IE as he,Io as pe,FG as H,oW as L,op as v,o9 as j,Ht as me,Hu as fe,Ja as _e,oi as ge,oj as Ae,iF as ve,an as C,at as N,ag as k,bt as we,nq as Ee,nr as be,fb as ye,be as Pe,nw as V,bu as T,nx as Te,a_ as Z,bF as Ce}from"./chunk-CMhy9c9G.js";import{l as Ne}from"./chunk-CgSr3-7H.js";import{p as $e,n as xe}from"./chunk-DFMRRUKI.js";import{_ as ee}from"./chunk-ByM7454y.js";/* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              */import"./chunk-O5eRSE6e.js";import"./chunk-DXKJyjzq.js";class F extends z{}function te(){const t=new K;return t.include(ne),t.outputs.add("fragColor","vec4",0),t.fragment.uniforms.add(new M("colorTexture",e=>e.color),new M("focusArea",e=>e.focusArea),new ce("focusAreaEffectMode",e=>e.effect??1)).main.add(x`float mask = texture( focusArea, uv, 0.0 ).r;
vec4 color = texture( colorTexture, uv, 0.0 );
vec4 colorDeSaturate = vec4(color.r * 0.25 + color.g * 0.5 + color.b * 0.25);
if (focusAreaEffectMode == 1) {
fragColor = mask > 0.0 ? color : 0.55 * colorDeSaturate + 0.45;
} else {
fragColor = mask > 0.0 ? color : 0.33 * mix(color, colorDeSaturate, 0.);
}`),t}const Se=Object.freeze(Object.defineProperty({__proto__:null,FocusAreaColorPassParameters:F,build:te},Symbol.toStringTag,{value:"Module"}));class B extends U{constructor(e,r,s){super(e,r,new Q(Se,()=>ee(()=>Promise.resolve().then(()=>qe),void 0)),s)}initializePipeline(){return J({colorWrite:Y})}}class O extends z{constructor(){super(...arguments),this.origin=le}}function se(){const t=new K;return t.attributes.add(ue.POSITION,"vec3"),t.outputs.add("fragColor","vec4",0),t.vertex.uniforms.add(new D("proj",(e,r)=>r.camera.projectionMatrix),new D("view",(e,r)=>de(Re,r.camera.viewMatrix,e.origin))).main.add(x`gl_Position = proj * view * vec4(position, 1.0);`),t.fragment.main.add(x`fragColor = vec4(1., 0., 0., 1.);`),t}const Re=S(),Fe=Object.freeze(Object.defineProperty({__proto__:null,FocusAreaMaskPassParameters:O,build:se},Symbol.toStringTag,{value:"Module"}));class W extends U{constructor(e,r,s){super(e,r,new Q(Fe,()=>ee(()=>Promise.resolve().then(()=>Me),void 0)),s)}initializePipeline(){return J({colorWrite:Y,depthTest:{func:R.LEQUAL}})}}let d=class extends he{constructor(e){super(e),this.consumes={required:["final-color"]},this.produces="final-color",this.focusAreaGeometries=new Array,this._vaos=Array(),this._count=new Array,this._origins=new Array,this._colorParameters=new F,this._maskParameters=new O,e.techniques.precompile(W),e.techniques.precompile(B)}initialize(){this.setExtrudedVolume()}destroy(){this._vaos.forEach(e=>e.dispose()),this._vaos=[],this._count=[],this._origins=[]}render(e){const r=this.techniques.acquire(W),s=this.techniques.acquire(B),i=this.bindParameters,n=e.find(({name:c})=>c==="final-color"),l=n?.getTexture(),p=i.camera,u=p.fullViewport[2],a=p.fullViewport[3],m=this.fboCache.acquire(u,a,"focusArea",pe.RGBA),g=this.fboCache.acquire(u,a,this.produces);if(!r.compiled||!s.compiled||!this._vaos||this.effect===w.NONE)return this.requestRender(),r.release(),s.release(),g.release(),m.release(),n;const o=this.renderingContext;m.attachDepth(n.getAttachment(this.gl.DEPTH_STENCIL_ATTACHMENT)),o.bindFramebuffer(m.fbo),o.clear(H.COLOR|H.STENCIL),o.setViewport(0,0,u,a),o.gl.clearStencil(0),o.gl.clear(o.gl.STENCIL_BUFFER_BIT),o.setClearStencil(0);for(let c=0;c<this._vaos.length;c++){const y=this._vaos[c],A=this._count[c];y&&(this._maskParameters.origin=this._origins[c],o.bindTechnique(r,i,this._maskParameters),o.setFaceCullingEnabled(!1),o.setStencilTestEnabled(!0),o.setStencilWriteMask(255),o.setStencilFunction(R.ALWAYS,0,255),o.setStencilOpSeparate(L.FRONT,v.KEEP,v.INCR_WRAP,v.KEEP),o.setStencilOpSeparate(L.BACK,v.KEEP,v.DECR_WRAP,v.KEEP),o.setDepthWriteEnabled(!1),o.setColorMask(!1,!1,!1,!1),o.bindVAO(y),o.drawArrays(j.TRIANGLES,0,A),o.setFaceCullingEnabled(!1),o.setDepthTestEnabled(!1),o.setStencilFunction(R.NOTEQUAL,0,255),o.setStencilWriteMask(0),o.setColorMask(!0,!0,!0,!0),o.drawArrays(j.TRIANGLES,0,A))}return r.release(),o.gl.clear(o.gl.STENCIL_BUFFER_BIT),o.bindFramebuffer(g.fbo),this._colorParameters.color=l,this._colorParameters.focusArea=m.getTexture(),this._colorParameters.effect=this.effect,o.bindTechnique(s,i,this._colorParameters),o.screen.draw(),m.release(),s.release(),g.attachDepth(n.getAttachment(this.gl.DEPTH_STENCIL_ATTACHMENT)),g}setExtrudedVolume(){const e=this.focusAreaGeometries;this._vaos=[],this._count=[],this._origins=[];for(let r=0;r<e.length;r++){const s=e[r],i=new Array,n=s.indicesBottom;this._origins.push(s.origin);for(let a=0;a<n.length;a++)i.push(s.positions[3*(n[a]-1)]),i.push(s.positions[3*(n[a]-1)+1]),i.push(s.positions[3*(n[a]-1)+2]);const l=s.indicesExtruded;for(let a=0;a<l.length;a++)i.push(s.positions[3*l[a]]),i.push(s.positions[3*l[a]+1]),i.push(s.positions[3*l[a]+2]);const p=new Float32Array(i),u=new me(this.renderingContext,fe,new Map([["geometry",_e]]),new Map([["geometry",ge.createVertex(this.renderingContext,Ae.STATIC_DRAW,p)]]));this._vaos?.push(u),this._count.push(n.length+l.length)}}};h([_()],d.prototype,"consumes",void 0),h([_()],d.prototype,"produces",void 0),h([_({constructOnly:!0})],d.prototype,"techniques",void 0),h([_()],d.prototype,"focusAreaGeometries",void 0),h([_()],d.prototype,"effect",void 0),d=h([X("esri.views.3d.webgl-engine.effects.focusArea.FocusAreaRenderNode")],d);class Oe{constructor(e,r,s,i,n){this.positions=e,this.indicesBottom=r,this.indicesExtruded=s,this.height=i,this.origin=n}}var w;(function(t){t[t.NONE=0]="NONE",t[t.BRIGHT=1]="BRIGHT",t[t.DARK=2]="DARK"})(w||(w={}));const $={none:w.NONE,bright:w.BRIGHT,dark:w.DARK},f=0,Ie=1e4;let b=class extends Ne(Ce){constructor(){super(...arguments),this.type="focusArea-3d",this._elevationContext=new ve,this._geometries=new Array}initialize(){this.addHandles([C(()=>this.layer.geometries,(t,e)=>{e=t,this._extrudePolygons(e),this._setFocusAreaRenderNode()},N),C(()=>this.layer.tmpEffect,(t,e)=>{e=t,this._renderNode&&e&&(this._renderNode.effect=$[e])},N),C(()=>this.layer.visible,(t,e)=>{t?this._renderNode??=new d({view:this.view,techniques:this.view._stage.renderView.techniques,focusAreaGeometries:this._geometries,effect:$[this.layer.tmpEffect??"none"]}):this._renderNode=k(this._renderNode)},N)])}destroy(){this._renderNode=k(this._renderNode),this._geometries=[]}_extrudePolygons(t){this._geometries=[];const e=Ie-f;for(const r of t){const s=S(),i=Z(),n=this.view.renderCoordsHelper.viewingMode===we.Global;n||this.view.renderCoordsHelper.worldUpAtPosition(null,i);const l=Ee(r);if(l==null)return;be(r.spatialReference,[l.x,l.y,0],s,this.view.renderCoordsHelper.spatialReference);const p=ye(Ge,[s[12]-f*i[0],s[13]-f*i[1],s[14]-f*i[2]]),u=S();u[12]=-s[12],u[13]=-s[13],u[14]=-s[14];const a=$e(r,this.view.elevationProvider,this.view.renderCoordsHelper,this._elevationContext),{polygons:m,mapPositions:g,position:o}=a;for(const c of m){const y=c.count,A=Pe(c.mapPositions,c.holeIndices,3);if(A.length===0)continue;const I=A.length,E=6*y,G=V(E+I),q=V(I),P=T(3*E),oe=T(3*E),re=T(3*E),ie=T(E);xe(o,g,A,c,P,re,oe,ie,G,q,e,i,n),Te(P,P,u);const ae=new Oe(P,q,G,e,[s[12]+f*p[0],s[13]+f*p[1],s[14]+f*p[2]]);this._geometries.push(ae)}}}_setFocusAreaRenderNode(){this._renderNode?(this._renderNode.focusAreaGeometries=this._geometries,this._renderNode.setExtrudedVolume()):this._renderNode=new d({view:this.view,techniques:this.view._stage.renderView.techniques,focusAreaGeometries:this._geometries,effect:$[this.layer.tmpEffect??"none"]})}};h([_()],b.prototype,"type",void 0),h([_()],b.prototype,"layer",void 0),b=h([X("esri.views.3d.layers.FocusAreaLayerView3D")],b);const Ge=Z(),yt=b,qe=Object.freeze(Object.defineProperty({__proto__:null,FocusAreaColorPassParameters:F,build:te},Symbol.toStringTag,{value:"Module"})),Me=Object.freeze(Object.defineProperty({__proto__:null,FocusAreaMaskPassParameters:O,build:se},Symbol.toStringTag,{value:"Module"}));export{yt as default};
