import{aX as f,E as h,h3 as H,gN as M,gT as g,lO as w,lP as V,aL as C,kX as N,gO as O,lo as S,gZ as T,gR as X,g_ as $,gW as v,gV as P,gX as R,h0 as j}from"./chunk-CMhy9c9G.js";import{u as z}from"./chunk-Dc5RCiI0.js";import"./chunk-BY_FN4O4.js";import"./chunk-Dx0NO5tE.js";import"./chunk-hcQCkdqJ.js";import"./chunk-BCEYKtyI.js";import"./chunk-DfjCgXDb.js";import"./chunk-DIHKnm4l.js";import"./chunk-TufeK50d.js";import"./chunk-Dck1UqdK.js";import"./chunk-B4Rwpdzs.js";import"./chunk-igt1gBeK.js";import"./chunk-Cj_Zd08g.js";import"./chunk-BG40D5IJ.js";import"./chunk-Dzc4VObD.js";import"./chunk-DjjaYBlz.js";import"./chunk-CM_lIypp.js";import"./chunk-CmV2Xkqf.js";import"./chunk-CbY12eax.js";import"./chunk-BcJWwafW.js";import"./chunk-ClYvIdCO.js";import"./chunk-QvQIJROn.js";import"./chunk-CdctZqhD.js";import"./chunk-DaHzAMiu.js";import"./chunk-C1aYhagP.js";import"./chunk-BU_CQVD8.js";import"./chunk-D_aEPSIR.js";import"./chunk-CAaD5fpi.js";import"./chunk-C0Px4IH5.js";import"./chunk-gN39URxt.js";import"./chunk-HNqUD5wH.js";import"./chunk-3xYMskso.js";import"./chunk-etnkt-xL.js";import"./chunk-oE2be0WM.js";import"./chunk-BnPJJ4xW.js";import"./chunk-DdA8NjGq.js";import"./chunk-scr1RBcv.js";import"./chunk-BVa6-kjc.js";import"./chunk-CIKSIPV2.js";const A=(m,u)=>{const c=new f({color:[255,0,0],size:10,style:"circle",outline:{color:[255,255,255],width:2}}),l=new f({color:[255,0,0],size:10,style:"circle",outline:{color:[255,255,255],width:2}}),t=z(),s=new N,o=new h({symbol:c}),r=new h({symbol:l}),p=H();function x(){const e=g(m);if(!e){console.error("Graphic is not defined");return}const d=e.geometry,_=d.centroid;o.geometry=_,t.graphics.add(o);const k=d.getPoint(0,Math.floor(d.rings[0].length/12));r.geometry=k,t.graphics.add(r);const b=t.on("drag",n=>{p.value&&n.stopPropagation()});s.add(b);const B=t.on("pointer-move",n=>{if(p.value===o){const i=t.toMap({x:n.x,y:n.y});o.geometry=i,e.geometry=new w({...e.geometry,center:i,radius:e.geometry.radius,radiusUnit:e.geometry.radiusUnit});const a=e.geometry.getPoint(0,Math.floor(e.geometry.rings[0].length/12));r.geometry=a}if(p.value===r){const i=t.toMap({x:n.x,y:n.y});r.geometry=i;const a=o.geometry,G=V(new C({latitude:a.latitude,longitude:a.longitude,spatialReference:t.spatialReference}),new C({longitude:i.longitude,latitude:i.latitude,spatialReference:t.spatialReference}),"meters");e.geometry=new w({...e.geometry,center:a,radius:G,radiusUnit:"meters"})}});s.add(B);const U=t.on("pointer-down",n=>{t.hitTest(n).then(i=>{if(i.results.length){const a=i.results[0].graphic;p.value=a}})}),E=t.on("pointer-up",()=>{p.value=void 0});s.add(U),s.add(E)}function y(){s.removeAll(),t.graphics.remove(o),t.graphics.remove(r)}return M(y),{start:x,complete:y}},Ut=O({__name:"update",props:{graphic:{type:Object,default:void 0}},setup(m){const u=m,c=S(()=>u.graphic),{start:l,complete:t}=A(c);return(s,o)=>{const r=T("ElButton");return X(),$(j,null,[v(r,{onClick:g(l)},{default:P(()=>o[0]||(o[0]=[R(" Start ")])),_:1},8,["onClick"]),v(r,{onClick:g(t)},{default:P(()=>o[1]||(o[1]=[R(" Complate ")])),_:1},8,["onClick"])],64)}}});export{Ut as _};
