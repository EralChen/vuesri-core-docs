import{u as n}from"./chunk-D1Jn8WLl.js";import{EdgeInputBufferLayout as u}from"./chunk-DDtA4eik.js";import{f as m,u as p,p as c,d as l,m as d}from"./chunk-55tU-dLC.js";import"./chunk-CMhy9c9G.js";import"./chunk-ByM7454y.js";/* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              */class et{async extract(t){const i=a(t),r=m(i),o=[i.data.buffer];return{result:f(r,o),transferList:o}}async extractComponentsEdgeLocations(t){const i=a(t),r=p(i.data,i.skipDeduplicate,i.indices,i.indicesLength),o=c(r,y),s=[];return{result:n(o.regular.instancesData,s),transferList:s}}async extractEdgeLocations(t){const i=a(t),r=p(i.data,i.skipDeduplicate,i.indices,i.indicesLength),o=c(r,L),s=[];return{result:n(o.regular.instancesData,s),transferList:s}}}function a(e){return{data:u.createView(e.dataBuffer),indices:e.indicesType==="Uint32Array"?new Uint32Array(e.indices):e.indicesType==="Uint16Array"?new Uint16Array(e.indices):e.indices,indicesLength:e.indicesLength,writerSettings:e.writerSettings,skipDeduplicate:e.skipDeduplicate}}function f(e,t){return t.push(e.regular.lodInfo.lengths.buffer),t.push(e.silhouette.lodInfo.lengths.buffer),{regular:{instancesData:n(e.regular.instancesData,t),lodInfo:{lengths:e.regular.lodInfo.lengths.buffer}},silhouette:{instancesData:n(e.silhouette.instancesData,t),lodInfo:{lengths:e.silhouette.lodInfo.lengths.buffer}},averageEdgeLength:e.averageEdgeLength}}class g{allocate(t){return l.createBuffer(t)}trim(t,i){return t.slice(0,i)}write(t,i,r){t.position0.setVec(i,r.position0),t.position1.setVec(i,r.position1)}}class h{allocate(t){return d.createBuffer(t)}trim(t,i){return t.slice(0,i)}write(t,i,r){t.position0.setVec(i,r.position0),t.position1.setVec(i,r.position1),t.componentIndex.set(i,r.componentIndex)}}const L=new g,y=new h;export{et as default};
