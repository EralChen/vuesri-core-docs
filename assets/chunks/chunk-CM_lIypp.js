import{pt as L,gO as v,df as $,gK as u,gP as V,qZ as j,lz as g,lE as O,gZ as I,gR as S,g_ as k,gW as q,qX as w,h1 as C,h0 as H}from"./chunk-CMhy9c9G.js";import{p as R,e as T,u as A,a as B}from"./chunk-PTUe1aNG.js";import{u as M}from"./chunk-Dc5RCiI0.js";import{a as x}from"./chunk-35-ZZMVr.js";import{_ as P,c as U}from"./chunk-B-RuJrXv.js";import{m as X}from"./chunk-DobUN8tB.js";import{s as F}from"./chunk-DHvBO4SR.js";const Z={...R,source:{type:[Object,Array],required:!0,default:()=>[]},fields:{type:Array,required:!0,default:()=>[]},geometryType:{type:String,default:"point",required:!0},objectIdField:{type:String,default:"ObjectID"},forceUpdate:{type:Boolean,default:!1}},_={...T,change:e=>e,load:e=>e},ee=L(_),z=v({name:"VaClientFeatureLayer",components:{VaLayerHitEvents:P},props:Z,emits:_,setup(e,{emit:i}){const n=M(),m=n.map,f=U(i),t=new $({source:e.source,...e.defaultOptions});t[F]=X();const d=t[F];return A(t,e),B(n,t,e),u(()=>{t.geometryType=e.geometryType}),u(()=>{t.objectIdField=e.objectIdField}),u(()=>{t.fields=e.fields}),x(m,t,e),V(()=>e.source,(b,E)=>{j().then(()=>{const s=[],c=b.reduce((a,r)=>{const o=r.attributes[e.objectIdField];return a[o]=r,a},{}),p=E.reduce((a,r)=>{const o=r.attributes[e.objectIdField];return Reflect.has(c,o)?(s.push(r),Reflect.deleteProperty(c,o)):a[o]=r,a},{}),y=[],h=[];for(const a in c)y.push(c[a]);for(const a in p)h.push(p[a]);return{addFeatures:y,deleteFeatures:h,updateFeatures:s}}).then(s=>t.applyEdits(s)).then(()=>(e.forceUpdate&&(t.visible=!1,t.visible=!0),{view:n,layer:t})).then(s=>{d.emit("change",s),i("change",s)})}),g("vaLayer",t),g("vaFeatureLayer",t),i("load",{view:n,layer:t}),{hitEmits:f}}});function D(e,i,n,m,f,t){const d=I("VaLayerHitEvents");return S(),k(H,null,[q(d,w(e.hitEmits),null,16),C(e.$slots,"default")],64)}const l=O(z,[["render",D]]);l.install=e=>{e.component(l.name,l)};export{l as V,ee as c,_ as e};
