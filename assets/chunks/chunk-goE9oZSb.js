import{a6 as P,E as h,h5 as B,g_ as R,h4 as d,a3 as z,lu as E,lv as M,g$ as S,lw as V,ha as D,h2 as U,hb as j,h7 as w,h6 as v,h8 as C,hd as A}from"./chunk-CGsGeN7j.js";import"./chunk-Dr1sALog.js";import"./chunk-Bml1PvVS.js";import"./chunk-_zdR56FH.js";import"./chunk-CWLsUwCD.js";import"./chunk-CZd7Zndo.js";import"./chunk-DlX-zbf9.js";import"./chunk-DyQGuRCQ.js";import"./chunk-Dy98_7B9.js";import"./chunk-BqaLBfJX.js";import"./chunk-D-0JPQv-.js";import"./chunk-CkzawzMq.js";import"./chunk-C9yBD7Cb.js";import"./chunk-C7XbWWq1.js";import"./chunk-C7q-KW3o.js";import"./chunk-9zVPGVP4.js";import"./chunk-C_utqa9G.js";import"./chunk-CW_cxDcB.js";import"./chunk-B3snt2sY.js";import"./chunk-CIQxHwnF.js";import"./chunk-DyD8uEb4.js";import"./chunk-DB3wHNNz.js";import"./chunk-DfWzvhe_.js";import"./chunk-DI0FmvNn.js";import"./chunk-DViVixDW.js";import"./chunk-DPKLMxd7.js";import"./chunk-CiCHXmT9.js";import"./chunk-D9DD00pu.js";import"./chunk-DLws_ICa.js";import"./chunk-XjyAEPTQ.js";import"./chunk-quGueftP.js";import"./chunk-ByqNhg-m.js";import"./chunk-CyhEnEbS.js";import"./chunk-4i9HqfK4.js";import"./chunk-gIQ2rMZF.js";import"./chunk-0FpZiehd.js";import"./chunk-DPAEcZdJ.js";import"./chunk-tqA_bKyq.js";import{u as F}from"./chunk-DgbCwlwU.js";import{u as N}from"./chunk-CQim6q2F.js";function T(m,l={}){const f=l.previewSymbol||new P({color:[255,0,0,0],style:"solid",outline:{color:[255,0,0],width:3,style:"dash"}}),g=l.symbol,e=new h({symbol:f}),t=F(),{viewCursorAdd:i,viewCursorRemove:c}=N("crosshair"),s=new M,u=B(!1);function x(){if(!d(m)){console.error("layerRef is not defined");return}i();const r=t.on("pointer-down",_);s.add(r);const n=t.on("pointer-move",b);s.add(n);const p=t.on("pointer-up",k);s.add(p);const o=t.on("drag",a=>{u.value&&a.stopPropagation()});s.add(o)}function _(r){if(u.value=!0,!t.graphics.includes(e)){const{x:n,y:p}=r,o=t.toMap({x:n,y:p}),a=new z({spatialReference:t.spatialReference,rings:[[[o.x,o.y,o.z],[o.x,o.y,o.z],[o.x,o.y,o.z]]]});e.geometry=a,t.graphics.add(e)}}function b(r){if(!u.value)return;const n=e.geometry,{x:p,y:o}=r,a=t.toMap({x:p,y:o});n.insertPoint(0,n.rings[0].length,a),e.geometry=n.clone()}function k(){y()}function y(){if(u.value=!1,c(),s.removeAll(),!t.graphics.includes(e))return;const r=new h({geometry:E(e.geometry,1e-4),symbol:g});d(m)?.add(r),t.graphics.remove(e)}return R(y),{start:x,complete:y}}const Ro=S({__name:"create",props:{layer:{type:Object,default:void 0}},setup(m){const l=m,f=V(()=>l.layer),{start:g,complete:e}=T(f,{});return(t,i)=>{const c=D("ElButton");return U(),j(A,null,[w(c,{onClick:d(g)},{default:v(()=>i[0]||(i[0]=[C(" Start ")])),_:1},8,["onClick"]),w(c,{onClick:d(e)},{default:v(()=>i[1]||(i[1]=[C(" Complete ")])),_:1},8,["onClick"])],64)}}});export{Ro as _};
