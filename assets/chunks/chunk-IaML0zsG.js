import{V as k}from"./chunk-SZWX9kAq.js";import{gZ as B,h7 as S,h8 as N,h0 as T,h9 as j,h6 as a,h2 as s,h4 as y,h5 as A,ha as D,hb as F,cJ as v}from"./chunk-xMPjLCrx.js";import{V as U,b as z,u as V}from"./chunk-2HCXqDJy.js";import{u as I}from"./chunk-QHcv4ANa.js";import"./chunk-5tsSCYgh.js";import"./chunk-i_6XDy5U.js";import"./chunk-0_GtP_p4.js";import"./chunk-2fXqQPVR.js";import"./chunk-9KZWtd42.js";import"./chunk-JLhCycX3.js";import"./chunk-NfHojIUH.js";import"./chunk-V11zOVoy.js";import"./chunk-solU3qLG.js";import"./chunk-aWq6ArXi.js";import"./chunk-zMsd7moL.js";import"./chunk-QGZQfL-6.js";import"./chunk-bVSt-vq9.js";import"./chunk-w3qa_8IS.js";import"./chunk-KVNnRaiv.js";import"./chunk-HOjhYsx3.js";import"./chunk-Kk-FsYOI.js";import"./chunk-mQiHYxNr.js";import"./chunk-Vp0MFqt1.js";import{V as W}from"./chunk-xRfHx62q.js";import"./chunk-XFUWsSlJ.js";import"./chunk-3YEdJcEN.js";import"./chunk-1SEN342O.js";import"./chunk-FaStYSus.js";import"./chunk-ZZVIt58t.js";import"./chunk-E-RLbiwB.js";import"./chunk-raaMsR-G.js";import"./chunk-qxoGV1yl.js";import"./chunk-Bd5xscMd.js";import"./chunk-rerlXJLz.js";import"./chunk-LE__wJ9I.js";import"./chunk-g6Mu5kDo.js";import"./chunk-um3EVGjc.js";import"./chunk-bavg-2oE.js";import"./chunk-HLnvRq1G.js";import"./chunk-soETSAjW.js";import"./chunk-dR-Xmx-w.js";import{V as q,s as J}from"./chunk-y6ytdDAi.js";import"./chunk-WHST2ZjR.js";const K={class:"bg-white pa-m"},L="https://ows.terrestris.de/osm/service?width=1072&height=1072&bbox=-20037508.342787%2C-20037508.342781033%2C20037508.342781033%2C20037508.342787&srs=EPSG%3A900913&format=image%2Fpng&request=GetMap&service=WMS&styles=&transparent=TRUE&version=1.1.1&layers=OSM-WMS&_ts=1712122845938",Dt=B({__name:"jpg-layer",setup(O){const u="/vuesri/data/1.jpg",_="/vuesri/images/thanks/zzlogo.png",i=S({gridRatio:100,url:u}),R=[{templateType:"VkfInputNumber",label:"GridRatio",prop:"gridRatio"},{templateType:"VkfRadio",label:"Url",prop:"url",options:[{label:"Service1MB",value:L},{label:"2MB",value:u},{label:"50KB",value:_}]}],t=I();class b{}class G{constructor(e=100){this.gridRatio=100,this.grids=[],this.gridRatio=e,this.createGrid()}createGrid(){const e=Math.round(t.width/this.gridRatio),o=Math.round(t.height/this.gridRatio),n=(t.extent.xmax-t.extent.xmin)/e,x=(t.extent.ymax-t.extent.ymin)/o;this.grids=[];let p,h,l,f;for(let c=0;c<e;c++){p=t.extent.xmin+n*c,h=p+n;for(let d=0;d<o;d++){l=t.extent.ymin+x*d,f=l+x;const E=new v({xmin:p,ymin:l,xmax:h,ymax:f,spatialReference:t.spatialReference}),w=new b;w.extent=E,this.grids.push(w)}}}}const g=r=>new z({image:r,georeference:new V({extent:new v({xmin:-20037508342787e-6,ymin:-20037508342781033e-9,xmax:20037508342781033e-9,ymax:20037508342787e-6,spatialReference:{wkid:3857}})})}),M=Array.from({length:1},()=>g(i.url)),m=new U({elements:M}),C=()=>{const r=new G(i.gridRatio);m.elements.removeAll(),window.alert(`生成网格${r.grids.length}`),r.grids.forEach(e=>{const o=g(i.url);o.georeference=new V({extent:e.extent}),m.elements.add(o)})};return(r,e)=>{const o=N("ElButton");return T(),j(F,null,[a(s(k),{source:s(m)},null,8,["source"]),a(s(W),null,{default:y(()=>[D("div",K,[a(s(q),{"form-items":R,data:i,onSetData:e[0]||(e[0]=n=>s(J)(i,n))},null,8,["data"]),a(o,{onClick:C},{default:y(()=>[A(" Grid ")]),_:1})])]),_:1})],64)}}});export{Dt as _};
