import{gJ as V,lk as O,pt as _,gO as k,lC as m,dq as A,gP as F,gU as w,pu as T,v7 as j,gK as i,lz as S,lE as B,gZ as C,gR as E,g_ as M,h0 as $,gW as H,h7 as G,qX as L,h1 as N,h9 as I}from"./chunk-CMhy9c9G.js";import{u as U}from"./chunk-Dc5RCiI0.js";import"./chunk-QvQIJROn.js";import{u as q}from"./chunk-CNgyMX9t.js";import{T as z}from"./chunk-Ch0SDxT-.js";import{u as J}from"./chunk-CLFhYyJ8.js";function K(){const e=V("vaSketch");if(!e)throw new Error("The component which use useSketch() must be in a Sketch component");return e}const v={modelValue:{type:[Array,Object],default:()=>[]},multiple:{type:Boolean,default:!0}},R=O(v),p={"update:modelValue":e=>e,complete:e=>e,update:e=>!0,create:e=>!0},W=_(p),X={...v,defaultOptions:{type:Object,default:()=>({})},availableCreatureTools:{type:Array,default:void 0},position:{type:String,default:"top-right"},orphan:{type:Boolean,default:!1},modelValueInitFrom:{type:String,default:"modelValue"},viewModelPointSymbol:{type:Object},viewModelPolygonSymbol:{type:Object},viewModelPolylineSymbol:{type:Object},viewModelActiveFillSymbol:{type:Object},visibleElements:{type:Object,default:void 0}},Z=R,x={load:e=>e,...p},D=W,Q=k({props:v,emits:p,setup(e,{emit:a}){const s=K(),n=q(),l=s.on("create",o=>{a("create",o),o.state==="start"?e.multiple||n.removeAll():o.state==="complete"&&(!e.multiple&&n.graphics.length>1&&o.graphic.geometry.type==="point"&&n.remove(n.graphics.getItemAt(0)),a("update:modelValue",[...n.graphics]),a("complete",o))});m(()=>{l.remove()});const c=s.on("update",o=>{a("update",o),o.state==="complete"&&(a("update:modelValue",[...n.graphics]),a("complete",o))});return m(()=>{c.remove()}),()=>null}}),Y=k({name:"VaSketch",components:{Events:Q},props:X,emits:x,setup(e,{emit:a}){const s=U(),n=s.map;let l=V("vaGraphicsLayer",null);l||(l=new A,n.add(l),m(()=>{n.remove(l)}));const c=Z(e),o=D(a);function f(t){l.removeAll(),l.addMany(t)}F(()=>e.modelValue,(t,r)=>{let u=!1;if(t.length===r.length){for(let d=0;d<t.length;d++)if(t[d]!==r[d]){u=!0;break}}else u=!0;u&&f([...t])}),e.modelValueInitFrom==="layerGraphics"?a("update:modelValue",l.graphics):f(e.modelValue);const h=w(),g=w(!1);class P extends z{toggleVisible(){n.ground.layers.forEach(r=>{r.visible=!r.visible})}add(){this.toggleVisible(),this.removeHandler=this.toggleVisible.bind(this)}}const b=new P;return T(()=>{const t=new j({container:h.value,view:s,layer:l,creationMode:"single",...e.defaultOptions});i(()=>{e.visibleElements&&(t.visibleElements=e.visibleElements)}),i(()=>{e.viewModelPointSymbol&&(t.viewModel.pointSymbol=e.viewModelPointSymbol)}),i(()=>{e.viewModelPolylineSymbol&&(t.viewModel.polylineSymbol=e.viewModelPolylineSymbol)}),i(()=>{e.viewModelPolygonSymbol&&(t.viewModel.polygonSymbol=e.viewModelPolygonSymbol)}),i(()=>{e.viewModelActiveFillSymbol&&(t.viewModel.activeFillSymbol=e.viewModelActiveFillSymbol)}),i(()=>{e.availableCreatureTools&&(t.availableCreateTools=e.availableCreatureTools)}),m(()=>{t.destroy()}),J(s.ui,t,e),S("vaGraphicsLayer",l),S("vaSketch",t),g.value=!0,b.add(),t.when(()=>{b.remove()}),a("load",{sketch:t,view:s})}),{eventsBindProps:c,eventsOnEmits:o,sketchNode:h,ready:g}}}),ee={ref:"sketchNode"};function te(e,a,s,n,l,c){const o=C("Events");return E(),M("div",ee,[e.ready?(E(),M($,{key:0},[H(o,G(e.eventsBindProps,L(e.eventsOnEmits)),null,16),N(e.$slots,"default")],64)):I("",!0)],512)}const y=B(Y,[["render",te]]);y.install=e=>{e.component(y.name,y)};export{y as V};
