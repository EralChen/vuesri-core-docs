import{V as k}from"./chunk-QihfDstr.js";import{gY as B,h6 as S,h7 as N,g$ as T,h8 as j,h5 as a,h1 as s,h3 as y,h4 as A,h9 as D,ha as F,br as v}from"./chunk-Id6bT2Sz.js";import{V as U,b as z,u as V}from"./chunk-YYgKY7N-.js";import{u as I}from"./chunk-j2dthR7G.js";import"./chunk-VYQ-U2se.js";import"./chunk-4hjVwnSY.js";import"./chunk-jI3QkYCl.js";import"./chunk-YAIfb7rT.js";import"./chunk-zyV5aIGZ.js";import"./chunk-aEd827qQ.js";import"./chunk-JSmmlvVF.js";import"./chunk-j-GHia9k.js";import"./chunk-1MLrZeeG.js";import"./chunk-5CojvStp.js";import"./chunk-xuI8tR0Q.js";import"./chunk-Wdy-tSn2.js";import"./chunk-igrRTtQJ.js";import"./chunk-E3AbFWGF.js";import"./chunk-Jl-T-yZh.js";import"./chunk-0hY-FzC-.js";import"./chunk-knBODP9n.js";import"./chunk-wjQBD1Yx.js";import"./chunk-Ocl6_GDd.js";import{V as W}from"./chunk-dLiZYYWx.js";import"./chunk-Xm0ceK_d.js";import"./chunk-jXTtycZ1.js";import"./chunk-OgyxI9kt.js";import"./chunk-2k2kSzxb.js";import"./chunk-JHqeRKeh.js";import"./chunk-M66e94sa.js";import"./chunk-VBKEdNlL.js";import"./chunk-Lk3b00l-.js";import"./chunk-sT2yXiVE.js";import"./chunk-XBmnoeIS.js";import"./chunk-C8VrzzNg.js";import"./chunk-BCh6XKoX.js";import"./chunk-O_CfKMPd.js";import"./chunk-vtvKCmTS.js";import"./chunk-LcTX_s1x.js";import"./chunk-7GJMvv7k.js";import"./chunk-3ylXphSj.js";import{V as $,s as q}from"./chunk-qeB46JvM.js";import"./chunk-c63RqAWR.js";const K={class:"bg-white pa-m"},L="https://ows.terrestris.de/osm/service?width=1072&height=1072&bbox=-20037508.342787%2C-20037508.342781033%2C20037508.342781033%2C20037508.342787&srs=EPSG%3A900913&format=image%2Fpng&request=GetMap&service=WMS&styles=&transparent=TRUE&version=1.1.1&layers=OSM-WMS&_ts=1712122845938",Dt=B({__name:"jpg-layer",setup(O){const u="/vuesri/data/1.jpg",_="/vuesri/images/thanks/zzlogo.png",i=S({gridRatio:100,url:u}),R=[{templateType:"VkfInputNumber",label:"GridRatio",prop:"gridRatio"},{templateType:"VkfRadio",label:"Url",prop:"url",options:[{label:"Service1MB",value:L},{label:"2MB",value:u},{label:"50KB",value:_}]}],t=I();class b{}class G{constructor(e=100){this.gridRatio=100,this.grids=[],this.gridRatio=e,this.createGrid()}createGrid(){const e=Math.round(t.width/this.gridRatio),o=Math.round(t.height/this.gridRatio),n=(t.extent.xmax-t.extent.xmin)/e,x=(t.extent.ymax-t.extent.ymin)/o;this.grids=[];let p,h,l,f;for(let c=0;c<e;c++){p=t.extent.xmin+n*c,h=p+n;for(let d=0;d<o;d++){l=t.extent.ymin+x*d,f=l+x;const E=new v({xmin:p,ymin:l,xmax:h,ymax:f,spatialReference:t.spatialReference}),w=new b;w.extent=E,this.grids.push(w)}}}}const g=r=>new z({image:r,georeference:new V({extent:new v({xmin:-20037508342787e-6,ymin:-20037508342781033e-9,xmax:20037508342781033e-9,ymax:20037508342787e-6,spatialReference:{wkid:3857}})})}),M=Array.from({length:1},()=>g(i.url)),m=new U({elements:M}),C=()=>{const r=new G(i.gridRatio);m.elements.removeAll(),window.alert(`生成网格${r.grids.length}`),r.grids.forEach(e=>{const o=g(i.url);o.georeference=new V({extent:e.extent}),m.elements.add(o)})};return(r,e)=>{const o=N("ElButton");return T(),j(F,null,[a(s(k),{source:s(m)},null,8,["source"]),a(s(W),null,{default:y(()=>[D("div",K,[a(s($),{"form-items":R,data:i,onSetData:e[0]||(e[0]=n=>s(q)(i,n))},null,8,["data"]),a(o,{onClick:C},{default:y(()=>[A(" Grid ")]),_:1})])]),_:1})],64)}}});export{Dt as _};
