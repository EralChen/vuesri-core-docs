import{np as L,gY as $,bY as v,gT as u,gZ as V,oG as j,ly as b,lD as I,h7 as O,g$ as S,h8 as k,h5 as w,oE as T,hb as C,ha as H}from"./chunk-fyrbxnSH.js";import{p as q,e as A,u as B,a as M}from"./chunk-Pj6ZoDcY.js";import{u as R}from"./chunk-DnUVT2kT.js";import{a as x}from"./chunk-pxSSoWZz.js";import{_ as D,c as U}from"./chunk-0F1EjARU.js";import{m as Y}from"./chunk-lD6t8LMi.js";import{s as F}from"./chunk-B3AFDltd.js";const G={...q,source:{type:[Object,Array],required:!0,default:()=>[]},fields:{type:Array,required:!0,default:()=>[]},geometryType:{type:String,default:"point",required:!0},objectIdField:{type:String,default:"ObjectID"},forceUpdate:{type:Boolean,default:!1}},g={...A,change:e=>e,load:e=>e},ee=L(g),N=$({name:"VaClientFeatureLayer",components:{VaLayerHitEvents:D},props:G,emits:g,setup(e,{emit:i}){const n=R(),m=n.map,f=U(i),t=new v({source:e.source,...e.defaultOptions});t[F]=Y();const d=t[F];return B(t,e),M(n,t,e),u(()=>{t.geometryType=e.geometryType}),u(()=>{t.objectIdField=e.objectIdField}),u(()=>{t.fields=e.fields}),x(m,t,e),V(()=>e.source,(E,_)=>{j().then(()=>{const s=[],c=E.reduce((a,r)=>{const o=r.attributes[e.objectIdField];return a[o]=r,a},{}),p=_.reduce((a,r)=>{const o=r.attributes[e.objectIdField];return Reflect.has(c,o)?(s.push(r),Reflect.deleteProperty(c,o)):a[o]=r,a},{}),y=[],h=[];for(const a in c)y.push(c[a]);for(const a in p)h.push(p[a]);return{addFeatures:y,deleteFeatures:h,updateFeatures:s}}).then(s=>t.applyEdits(s)).then(()=>(e.forceUpdate&&(t.visible=!1,t.visible=!0),{view:n,layer:t})).then(s=>{d.emit("change",s),i("change",s)})}),b("vaLayer",t),b("vaFeatureLayer",t),i("load",{view:n,layer:t}),{hitEmits:f}}});function P(e,i,n,m,f,t){const d=O("VaLayerHitEvents");return S(),k(H,null,[w(d,T(e.hitEmits),null,16),C(e.$slots,"default")],64)}const l=I(N,[["render",P]]);l.install=e=>{e.component(l.name,l)};export{l as V,ee as c,g as e};
