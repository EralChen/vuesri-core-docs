import{w as I,x as $,y as v,z as E,s as n,B as S,O as w,A as R,C as O,D as k,R as L,V as U,E as G,F as T,G as j,T as B,I as V,J as D,K as y,M as z}from"./chunk-YzRi88Dj.js";import"./chunk-ByM7454y.js";/* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              *//* empty css              */function F(e){return e?.applyEdits!=null}function M(e){return typeof e=="object"&&e!=null&&"objectId"in e&&!!e.objectId}function Ge(e){return e.every(M)}function W(e){return typeof e=="object"&&e!=null&&"globalId"in e&&!!e.globalId}function Te(e){return e.every(W)}async function je(e,t,r,a={}){let i;const o="gdbVersion"in e?e.gdbVersion:null,p=a.gdbVersion??o;if(I(e)&&e.url)i=$(e.url,e.layerId,p,a.returnServiceEditsOption==="original-and-current-features");else{i=v(),i.promise.then(d=>{(d.addedFeatures.length||d.updatedFeatures.length||d.deletedFeatures.length||d.addedAttachments.length||d.updatedAttachments.length||d.deletedAttachments.length)&&e.emit("edits",d)});const s={result:i.promise};e.emit("apply-edits",s)}try{const{results:s,edits:d}=await x(e,t,r,a),u=l=>l.filter(h=>!h.error).map(E),c={edits:d,addedFeatures:u(s.addFeatureResults),updatedFeatures:u(s.updateFeatureResults),deletedFeatures:u(s.deleteFeatureResults),addedAttachments:u(s.addAttachmentResults),updatedAttachments:u(s.updateAttachmentResults),deletedAttachments:u(s.deleteAttachmentResults),exceededTransferLimit:!1,historicMoment:s.editMoment?new Date(s.editMoment):null,globalIdToObjectId:a.globalIdToObjectId};return s.editedFeatureResults?.length&&(c.editedFeatures=s.editedFeatureResults),i.resolve(c),s}catch(s){throw i.reject(s),s}}async function x(e,t,r,a){if(await e.load(),!F(t))throw new n(`${e.type}-layer:no-editing-support`,"Layer source does not support applyEdits capability",{layer:e});if(!S(e))throw new n(`${e.type}-layer:editing-disabled`,"Editing is disabled for layer",{layer:e});const{edits:i,options:o}=await C(e,r,a);return i.addFeatures?.length||i.updateFeatures?.length||i.deleteFeatures?.length||i.addAttachments?.length||i.updateAttachments?.length||i.deleteAttachments?.length?{edits:i,results:await t.applyEdits(i,o)}:{edits:i,results:{addFeatureResults:[],updateFeatureResults:[],deleteFeatureResults:[],addAttachmentResults:[],updateAttachmentResults:[],deleteAttachmentResults:[]}}}async function C(e,t,r){const a=w(e),i=t&&(t.addFeatures||t.updateFeatures||t.deleteFeatures),o=t&&(t.addAttachments||t.updateAttachments||t.deleteAttachments),p=e.infoFor3D!=null;if(H(t,a,r,!!i,!!o,`${e.type}-layer`),!a.data.isVersioned&&r?.gdbVersion)throw new n(`${e.type}-layer:invalid-parameter`,"'gdbVersion' is applicable only if the layer supports versioned data. See: 'capabilities.data.isVersioned'");if(!a.editing.supportsRollbackOnFailure&&r?.rollbackOnFailureEnabled)throw new n(`${e.type}-layer:invalid-parameter`,"This layer does not support 'rollbackOnFailureEnabled' parameter. See: 'capabilities.editing.supportsRollbackOnFailure'");const s={...r};if(s.rollbackOnFailureEnabled!=null||a.editing.supportsRollbackOnFailure||(s.rollbackOnFailureEnabled=!0),s.rollbackOnFailureEnabled||s.returnServiceEditsOption!=="original-and-current-features"||(s.rollbackOnFailureEnabled===!1&&R.getLogger("esri.layers.graphics.editingSupport").warn(`${e.type}-layer:invalid-parameter`,"'original-and-current-features' is valid for 'returnServiceEditsOption' only when 'rollBackOnFailure' is true, but 'rollBackOnFailure' was set to false. 'rollBackOnFailure' has been overwritten and set to true."),s.rollbackOnFailureEnabled=!0),!a.editing.supportsReturnServiceEditsInSourceSpatialReference&&s.returnServiceEditsInSourceSR)throw new n(`${e.type}-layer:invalid-parameter`,"This layer does not support 'returnServiceEditsInSourceSR' parameter. See: 'capabilities.editing.supportsReturnServiceEditsInSourceSpatialReference'");if(s.returnServiceEditsInSourceSR&&s.returnServiceEditsOption!=="original-and-current-features")throw new n(`${e.type}-layer:invalid-parameter`,"'returnServiceEditsInSourceSR' is valid only when 'returnServiceEditsOption' is set to 'original-and-current-features'");const d=X(t,a,`${e.type}-layer`),u=r?.globalIdUsed||p,c=e.fields.filter(l=>l.type==="big-integer"||l.type==="oid"&&(l.length||0)>=8);if(u){const{globalIdField:l}=e;if(l==null)throw new n(`${e.type}-layer:invalid-parameter`,"Layer does not specify a global id field.");d.addFeatures.forEach(h=>_(h,l))}return d.addFeatures.forEach(l=>q(l,e,u,c)),d.updateFeatures.forEach(l=>Z(l,e,u,c)),d.deleteFeatures.forEach(l=>N(l,e,u,c)),d.addAttachments.forEach(l=>f(l,e)),d.updateAttachments.forEach(l=>f(l,e)),p&&await P(d,e),{edits:await J(d),options:s}}function m(e,t,r,a){if(r){if("attributes"in e&&!e.attributes[t.globalIdField])throw new n(`${t.type}-layer:invalid-parameter`,`Feature should have '${t.globalIdField}' when 'globalIdUsed' is true`);if(!("attributes"in e)&&!e.globalId)throw new n(`${t.type}-layer:invalid-parameter`,"`'globalId' of the feature should be passed when 'globalIdUsed' is true")}if(a.length&&"attributes"in e)for(const i of a){const o=e.attributes[i.name];if(o!==void 0&&!B(i,o))throw new n(`${t.type}-layer:invalid-parameter`,`Big-integer field '${i.name}' of the feature must be less than ${Number.MAX_SAFE_INTEGER}`,{feature:e})}if("geometry"in e&&e.geometry!=null){if(e.geometry.hasZ&&t.capabilities?.data.supportsZ===!1)throw new n(`${t.type}-layer:z-unsupported`,"Layer does not support z values while feature has z values.");if(e.geometry.hasM&&t.capabilities?.data.supportsM===!1)throw new n(`${t.type}-layer:m-unsupported`,"Layer does not support m values while feature has m values.")}}function A(e,t){if("geometry"in e&&e.geometry?.type==="mesh"&&t.infoFor3D!=null&&t.spatialReference!=null){const{geometry:r}=e,{spatialReference:a,vertexSpace:i}=r,o=t.spatialReference,p=i.type==="local",s=V(o),d=D(o,a),u=d||y(o)&&(y(a)||z(a));if(!(p&&s&&u||!p&&!s&&d))throw new n(`${t.type}-layer:mesh-unsupported`,`Uploading a mesh with a ${i.type} vertex space and a spatial reference wkid:${a.wkid} to a layer with a spatial reference wkid:${o.wkid} is not supported.`)}}function q(e,t,r,a){m(e,t,r,a),A(e,t)}function N(e,t,r,a){m(e,t,r,a)}function Z(e,t,r,a){m(e,t,r,a),A(e,t);const i=w(t);if("geometry"in e&&e.geometry!=null&&!i?.editing.supportsGeometryUpdate)throw new n(`${t.type}-layer:unsupported-operation`,"Layer does not support geometry updates.")}function f(e,t){const{feature:r,attachment:a}=e;if(!r||"attributes"in r&&!r.attributes[t.globalIdField])throw new n(`${t.type}-layer:invalid-parameter`,"Attachment should have reference to a feature with 'globalId'");if(!("attributes"in r)&&!r.globalId)throw new n(`${t.type}-layer:invalid-parameter`,"Attachment should have reference to 'globalId' of the parent feature");if(!a.globalId)throw new n(`${t.type}-layer:invalid-parameter`,"Attachment should have 'globalId'");if(!a.data&&!a.uploadId)throw new n(`${t.type}-layer:invalid-parameter`,"Attachment should have 'data' or 'uploadId'");if(!(a.data instanceof File&&a.data.name)&&!a.name)throw new n(`${t.type}-layer:invalid-parameter`,"'name' is required when attachment is specified as Base64 encoded string using 'data'");if(!t.capabilities?.editing.supportsUploadWithItemId&&a.uploadId)throw new n(`${t.type}-layer:invalid-parameter`,"This layer does not support 'uploadId' parameter. See: 'capabilities.editing.supportsUploadWithItemId'");if(typeof a.data=="string"){const i=O(a.data);if(i&&!i.isBase64)throw new n(`${t.type}-layer:invalid-parameter`,"Attachment 'data' should be a Blob, File or Base64 encoded string")}}function _(e,t){const{attributes:r}=e;r[t]==null&&(r[t]=k())}async function J(e){const t=e.addFeatures??[],r=e.updateFeatures??[],a=t.concat(r).map(s=>s.geometry),i=await L(a),o=t.length,p=r.length;return i.slice(0,o).forEach((s,d)=>t[d].geometry=s),i.slice(o,o+p).forEach((s,d)=>r[d].geometry=s),e}function K(e){return{addFeatures:Array.from(e?.addFeatures??[]),updateFeatures:Array.from(e?.updateFeatures??[]),deleteFeatures:e&&U.isCollection(e.deleteFeatures)?e.deleteFeatures.toArray():e.deleteFeatures||[],addAttachments:e.addAttachments||[],updateAttachments:e.updateAttachments||[],deleteAttachments:e.deleteAttachments||[]}}function X(e,t,r){const a=K(e);if(a.addFeatures?.length&&!t.operations.supportsAdd)throw new n(`${r}:unsupported-operation`,"Layer does not support adding features.");if(a.updateFeatures?.length&&!t.operations.supportsUpdate)throw new n(`${r}:unsupported-operation`,"Layer does not support updating features.");if(a.deleteFeatures?.length&&!t.operations.supportsDelete)throw new n(`${r}:unsupported-operation`,"Layer does not support deleting features.");return a.addFeatures=a.addFeatures.map(g),a.updateFeatures=a.updateFeatures.map(g),a.addAssetFeatures=[],a}function H(e,t,r,a,i,o){if(!e||!a&&!i)throw new n(`${o}:missing-parameters`,"'addFeatures', 'updateFeatures', 'deleteFeatures', 'addAttachments', 'updateAttachments' or 'deleteAttachments' parameter is required");if(!t.editing.supportsGlobalId&&r?.globalIdUsed)throw new n(`${o}:invalid-parameter`,"This layer does not support 'globalIdUsed' parameter. See: 'capabilities.editing.supportsGlobalId'");if(!t.editing.supportsGlobalId&&i)throw new n(`${o}:invalid-parameter`,"'addAttachments', 'updateAttachments' and 'deleteAttachments' are applicable only if the layer supports global ids. See: 'capabilities.editing.supportsGlobalId'");if(!r?.globalIdUsed&&i)throw new n(`${o}:invalid-parameter`,"When 'addAttachments', 'updateAttachments' or 'deleteAttachments' is specified, globalIdUsed should be set to true")}function g(e){const t=new G;return e.attributes||(e.attributes={}),t.geometry=e.geometry,t.attributes=e.attributes,t}async function P(e,t){if(t.infoFor3D==null)return;const{infoFor3D:r}=t,a=T("model/gltf-binary",r.supportedFormats)??j("glb",r.supportedFormats);if(!(a&&r.editFormats.includes(a)))throw new n(`${t.type}-layer:binary-gltf-asset-not-supported`,"3DObjectFeatureLayer requires binary glTF (.glb) support for updating mesh geometry.");e.addAssetFeatures??=[];const{addAssetFeatures:i}=e;for(const o of e.addFeatures??[])b(o)&&i.push(o);for(const o of e.updateFeatures??[])b(o)&&i.push(o)}function b(e){return e?.geometry?.type==="mesh"}function Be(e,t,r,a){if(!F(t))throw new n(`${e.type}-layer:no-editing-support`,"Layer source does not support applyEdits capability",{layer:e});if(!t.uploadAssets)throw new n(`${e.type}-layer:no-asset-upload-support`,"Layer source does not support uploadAssets capability",{layer:e});return t.uploadAssets(r,a)}export{je as applyEdits,H as checkEditingCapabilities,Te as isFeatureIdentifierArrayWithGlobalId,Ge as isFeatureIdentifierArrayWithObjectId,W as isFeatureIdentifierWithGlobalId,M as isFeatureIdentifierWithObjectId,K as normalizeCollections,X as normalizeEdits,J as normalizeGeometries,g as shallowCloneFeature,Be as uploadAssets};
