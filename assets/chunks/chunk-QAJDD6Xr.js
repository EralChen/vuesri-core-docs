import{fr as v,fs as y}from"./chunk-CMhy9c9G.js";import{t as F,c as C,o as b}from"./chunk-F8oTIn7N.js";const A=a=>a==="vertical"||a==="horizontal"||a==="cross"||a==="esriSFSCross"||a==="esriSFSVertical"||a==="esriSFSHorizontal";function z(a,d,M){const n=d.style,h=y(Math.ceil(M)),t=A(n)?8*h:16*h,o=2*h;a.width=t,a.height=t;const e=a.getContext("2d");e.strokeStyle="#ffffff",e.lineWidth=h,e.beginPath(),n!=="vertical"&&n!=="cross"&&n!=="esriSFSCross"&&n!=="esriSFSVertical"||(e.moveTo(t/2,-o),e.lineTo(t/2,t+o)),n!=="horizontal"&&n!=="cross"&&n!=="esriSFSCross"&&n!=="esriSFSHorizontal"||(e.moveTo(-o,t/2),e.lineTo(t+o,t/2)),n!=="backward-diagonal"&&n!=="diagonal-cross"&&n!=="esriSFSDiagonalCross"&&n!=="esriSFSBackwardDiagonal"||(e.moveTo(-o,-o),e.lineTo(t+o,t+o),e.moveTo(t-o,-o),e.lineTo(t+o,o),e.moveTo(-o,t-o),e.lineTo(o,t+o)),n!=="forward-diagonal"&&n!=="diagonal-cross"&&n!=="esriSFSForwardDiagonal"&&n!=="esriSFSDiagonalCross"||(e.moveTo(t+o,-o),e.lineTo(-o,t+o),e.moveTo(o,-o),e.lineTo(-o,o),e.moveTo(t+o,t-o),e.lineTo(t-o,t+o)),e.stroke();const f=e.getImageData(0,0,a.width,a.height),s=new Uint8Array(f.data);let c;for(let r=0;r<s.length;r+=4)c=s[r+3]/255,s[r]=s[r]*c,s[r+1]=s[r+1]*c,s[r+2]=s[r+2]*c;return[s,a.width,a.height,h]}function p(a){a.length%2==1&&(a=[...a,...a]);const d=a.reduce((r,l)=>r+l,0),M=Math.round(d*F),n=1,h=new Float32Array(M*n);let t=0,o=0,e=.5,f=!0;for(const r of a){for(t=o,o+=r*F;e<=o;){const l=e-.5,i=Math.min(Math.abs(e-t),Math.abs(e-o));h[l]=f?-i:i,e++}f=!f}const s=h.length,c=new Uint8Array(4*s);for(let r=0;r<s;++r){const l=h[r]/F;v(l/C*.5+.5,c,4*r)}return[c,M,n]}function U(a,d){a==null&&(a=[]);const M=d==="Butt",n=d==="Square",h=!M&&!n;a.length%2==1&&(a=[...a,...a]);const t=b,o=2*t;let e=0;for(const m of a)e+=m;const f=Math.round(e*t),s=new Float32Array(f*o),c=.5*t;let r=0,l=0,i=.5,T=!0;for(const m of a){for(r=l,l+=m*t;i<=l;){let g=.5;for(;g<o;){const x=(g-.5)*f+i-.5,S=h?(g-t)*(g-t):Math.abs(g-t);s[x]=T?M?Math.max(Math.max(r+c-i,S),Math.max(i-l+c,S)):S:h?Math.min((i-r)*(i-r)+S,(i-l)*(i-l)+S):n?Math.min(Math.max(i-r,S),Math.max(l-i,S)):Math.min(Math.max(i-r+c,S),Math.max(l+c-i,S)),g++}i++}T=!T}const u=s.length,w=new Uint8Array(4*u);for(let m=0;m<u;++m){const g=(h?Math.sqrt(s[m]):s[m])/t;v(g,w,4*m)}return[w,f,o]}export{p as i,U as l,z as s};
