import{a1 as r,a5 as M,a6 as P,E as L,a7 as d,a8 as x,a9 as O,aa as $,ab as j,V as A,ac as k,ad as E,a2 as p,a4 as T,ae as S}from"./chunk-CMhy9c9G.js";const F=[[0,179,255],[117,62,128],[0,104,255],[215,189,166],[32,0,193],[98,162,206],[102,112,129],[52,125,0],[142,118,246],[138,83,0],[92,122,255],[122,55,83],[0,142,255],[81,40,179],[0,200,244],[13,24,127],[0,170,147],[19,58,241],[22,44,35]];let i=class extends M{constructor(s){super(s),this.updating=!1,this.enablePolygons=!0,this.enableLabels=!0,this._polygons=new Map,this._labels=new Map,this._enabled=!0}initialize(){this._symbols=F.map(s=>new P({color:[s[0],s[1],s[2],.6],outline:{color:"black",width:1}})),this.update()}destroy(){this._enabled=!1,this.clear()}get enabled(){return this._enabled}set enabled(s){this._enabled!==s&&(this._enabled=s,this.update())}update(){if(!this._enabled)return void this.clear();const s=e=>{if(e.label!=null)return e.label;let t=e.lij.toString();return e.loadPriority!=null&&(t+=` (${e.loadPriority})`),e.measures&&(t+=`[${e.measures.effectiveLevelForLod}]`),t},h=this.getTiles(),y=new Array,g=new Set((this._labels.size,this._labels.keys()));h.forEach((e,t)=>{const l=e.lij.toString();g.delete(l);const z=e.measures?.effectiveLevelForLod??e.lij[0],u=e.geometry;if(this.enablePolygons&&!this._polygons.has(l)){const a=new L({geometry:u,symbol:this._symbols[z%this._symbols.length]});this._polygons.set(l,a),y.push(a)}if(this.enableLabels){const a=s(e),w=t/(h.length-1),b=S(0,200,w),_=S(20,6,w)/.75,m=e.loadPriority!=null&&e.loadPriority>=h.length,v=new d([b,m?0:b,m?0:b]),f=this.view.type==="3d"?()=>new x({verticalOffset:new O({screenLength:40/.75}),callout:new $({color:new d("white"),border:new j({color:new d("black")})}),symbolLayers:new A([new k({text:a,halo:{color:"white",size:1/.75},material:{color:v},size:_})])}):()=>new E({text:a,haloColor:"white",haloSize:1/.75,color:v,size:_}),n=this._labels.get(l);if(n){const o=f();n.symbol!=null&&JSON.stringify(o)===JSON.stringify(n.symbol)||(n.symbol=o)}else{const o=new L({geometry:u.extent.center,symbol:f()});this._labels.set(l,o),y.push(o)}}});const c=new Array;g.forEach(e=>{const t=this._polygons.get(e);t!=null&&(c.push(t),this._polygons.delete(e));const l=this._labels.get(e);l!=null&&(c.push(l),this._labels.delete(e))}),this.view.graphics.removeMany(c),this.view.graphics.addMany(y)}clear(){this.view.graphics.removeMany(Array.from(this._polygons.values())),this.view.graphics.removeMany(Array.from(this._labels.values())),this._polygons.clear(),this._labels.clear()}};r([p({constructOnly:!0})],i.prototype,"view",void 0),r([p({readOnly:!0})],i.prototype,"updating",void 0),r([p()],i.prototype,"enabled",null),i=r([T("esri.views.support.TileTreeDebugger")],i);export{i as d};
